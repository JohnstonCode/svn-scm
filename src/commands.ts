import { Disposable } from "vscode";
import { Add } from "./commands/add";
import { AddToIgnoreExplorer } from "./commands/addToIgnoreExplorer";
import { AddToIgnoreSCM } from "./commands/addToIgnoreSCM";
import { ChangeList } from "./commands/changeList";
import { Cleanup } from "./commands/cleanup";
import { Close } from "./commands/close";
import { Commit } from "./commands/commit";
import { CommitWithMessage } from "./commands/commitWithMessage";
import { FileOpen } from "./commands/fileOpen";
import { FinishCheckout } from "./commands/finishCheckout";
import { GetModel } from "./commands/getModel";
import { Log } from "./commands/log";
import { OpenChangeBase } from "./commands/openChangeBase";
import { OpenFile } from "./commands/openFile";
import { OpenResourceBase } from "./commands/openResourceBase";
import { OpenResourceHead } from "./commands/openResourceHead";
import { Patch } from "./commands/patch";
import { PatchAll } from "./commands/patchAll";
import { PatchChangeList } from "./commands/patchChangeList";
import { PromptAuth } from "./commands/promptAuth";
import { PullIncommingChange } from "./commands/pullIncomingChange";
import { Refresh } from "./commands/refresh";
import { Remove } from "./commands/remove";
import { RenameExplorer } from "./commands/renameExplorer";
import { Resolve } from "./commands/resolve";
import { ResolveAll } from "./commands/resolveAll";
import { Resolved } from "./commands/resolved";
import { Revert } from "./commands/revert";
import { RevertChange } from "./commands/revertChange";
import { RevertSelectedRanges } from "./commands/revertSelectedRanges";
import { SwitchBranch } from "./commands/switchBranch";
import { Update } from "./commands/update";
import { Upgrade } from "./commands/upgrade";
import { Model } from "./model";

export function registerCommands(model: Model, disposables: Disposable[]) {
  disposables.push(new FileOpen());
  disposables.push(new OpenFile(model));
  disposables.push(new PromptAuth(model));
  disposables.push(new CommitWithMessage(model));
  disposables.push(new Add(model));
  disposables.push(new ChangeList(model));
  disposables.push(new Refresh());
  disposables.push(new Commit());
  disposables.push(new OpenResourceBase());
  disposables.push(new OpenResourceHead());
  disposables.push(new OpenChangeBase());
  disposables.push(new SwitchBranch());
  disposables.push(new Revert(model));
  disposables.push(new Update(model));
  disposables.push(new PullIncommingChange(model));
  disposables.push(new PatchAll(model));
  disposables.push(new Patch(model));
  disposables.push(new PatchChangeList(model));
  disposables.push(new Remove(model));
  disposables.push(new ResolveAll(model));
  disposables.push(new Resolve(model));
  disposables.push(new Resolved(model));
  disposables.push(new Log(model));
  disposables.push(new RevertChange());
  disposables.push(new Close(model));
  disposables.push(new Cleanup(model));
  disposables.push(new FinishCheckout(model));
  disposables.push(new AddToIgnoreSCM(model));
  disposables.push(new AddToIgnoreExplorer(model));
  disposables.push(new RenameExplorer(model));
  disposables.push(new Upgrade(model));
  disposables.push(new RevertSelectedRanges(model));
  disposables.push(new GetModel(model));
}

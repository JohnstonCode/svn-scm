{"version":3,"sources":["../webpack/bootstrap","../external \"vscode\"",".././src/commands/command.ts",".././node_modules/jschardet/src/init.js","../external \"path\"",".././src/util.ts",".././src/helpers/configuration.ts",".././src/common/types.ts",".././node_modules/xmlbuilder/lib/XMLNode.js","../external \"fs\"",".././src/decorators.ts",".././src/resource.ts",".././src/uri.ts",".././node_modules/xmlbuilder/lib/Utility.js",".././node_modules/safer-buffer/safer.js",".././src/treeView/nodes/incomingChangeNode.ts",".././src/svn.ts","../external \"buffer\"",".././src/helpers/branch.ts","../external \"stream\"",".././node_modules/xml2js/lib/xml2js.js",".././node_modules/xmlbuilder/lib/XMLElement.js",".././node_modules/xmlbuilder/lib/XMLCData.js",".././node_modules/xmlbuilder/lib/XMLComment.js",".././node_modules/xmlbuilder/lib/XMLDeclaration.js",".././node_modules/xmlbuilder/lib/XMLDocType.js",".././node_modules/xmlbuilder/lib/XMLDTDAttList.js",".././node_modules/xmlbuilder/lib/XMLDTDEntity.js",".././node_modules/xmlbuilder/lib/XMLDTDElement.js",".././node_modules/xmlbuilder/lib/XMLDTDNotation.js",".././node_modules/xmlbuilder/lib/XMLRaw.js",".././node_modules/xmlbuilder/lib/XMLText.js",".././node_modules/xmlbuilder/lib/XMLProcessingInstruction.js",".././src/changelistItems.ts",".././node_modules/xml2js/lib/defaults.js",".././node_modules/xmlbuilder/lib/XMLStringWriter.js",".././src/common/constants.ts","../external \"os\"","../external \"child_process\"","../external \"events\"","../external \"string_decoder\"",".././src/infoParser.ts",".././node_modules/xmlbuilder/lib/XMLAttribute.js",".././node_modules/xmlbuilder/lib/XMLStringifier.js",".././node_modules/xmlbuilder/lib/XMLWriterBase.js",".././node_modules/xml2js/lib/processors.js","../external \"timers\"",".././src/svnError.ts","../external \"crypto\"",".././src/messages.ts",".././src/conflictItems.ts",".././src/tempFiles.ts",".././src/historyView/common.ts",".././src/repository.ts",".././src/pathNormalizer.ts",".././src/util/globMatch.ts",".././src/extension.ts",".././src/commands.ts",".././src/commands/add.ts",".././src/ignoreitems.ts",".././src/lineChanges.ts",".././src/commands/addToIgnoreExplorer.ts",".././src/commands/addToIgnoreSCM.ts",".././src/commands/changeList.ts",".././src/quickPickItems/changeListItem.ts",".././src/quickPickItems/ignoredChangeListItem.ts",".././src/quickPickItems/newChangeListItem.ts",".././src/quickPickItems/removeChangeListItem.ts",".././src/commands/checkout.ts",".././src/quickPickItems/folderItem.ts",".././src/quickPickItems/newFolderItem.ts",".././src/quickPickItems/parentFolderItem.ts","../(webpack)/buildin/module.js",".././node_modules/iconv-lite/lib/index.js",".././node_modules/iconv-lite/lib/bom-handling.js",".././node_modules/iconv-lite/encodings/index.js",".././node_modules/iconv-lite/encodings/internal.js",".././node_modules/iconv-lite/encodings/utf16.js",".././node_modules/iconv-lite/encodings/utf7.js",".././node_modules/iconv-lite/encodings/sbcs-codec.js",".././node_modules/iconv-lite/encodings/sbcs-data.js",".././node_modules/iconv-lite/encodings/sbcs-data-generated.js",".././node_modules/iconv-lite/encodings/dbcs-codec.js",".././node_modules/iconv-lite/encodings/dbcs-data.js",".././node_modules/iconv-lite/lib/streams.js",".././node_modules/iconv-lite/lib/extend-node.js",".././node_modules/is-utf8/is-utf8.js",".././node_modules/jschardet/src/constants.js",".././node_modules/jschardet/src/codingstatemachine.js",".././node_modules/jschardet/src/escsm.js",".././node_modules/jschardet/src/mbcssm.js",".././node_modules/jschardet/src/charsetprober.js",".././node_modules/jschardet/src/mbcharsetprober.js",".././node_modules/jschardet/src/jisfreq.js",".././node_modules/jschardet/src/gb2312freq.js",".././node_modules/jschardet/src/euckrfreq.js",".././node_modules/jschardet/src/big5freq.js",".././node_modules/jschardet/src/euctwfreq.js",".././node_modules/jschardet/src/chardistribution.js",".././node_modules/jschardet/src/jpcntx.js",".././node_modules/jschardet/src/sjisprober.js",".././node_modules/jschardet/src/utf8prober.js",".././node_modules/jschardet/src/charsetgroupprober.js",".././node_modules/jschardet/src/eucjpprober.js",".././node_modules/jschardet/src/gb2312prober.js",".././node_modules/jschardet/src/euckrprober.js",".././node_modules/jschardet/src/big5prober.js",".././node_modules/jschardet/src/euctwprober.js",".././node_modules/jschardet/src/mbcsgroupprober.js",".././node_modules/jschardet/src/sbcharsetprober.js",".././node_modules/jschardet/src/langgreekmodel.js",".././node_modules/jschardet/src/langthaimodel.js",".././node_modules/jschardet/src/langbulgarianmodel.js",".././node_modules/jschardet/src/langcyrillicmodel.js",".././node_modules/jschardet/src/hebrewprober.js",".././node_modules/jschardet/src/langhebrewmodel.js",".././node_modules/jschardet/src/langhungarianmodel.js",".././node_modules/jschardet/src/sbcsgroupprober.js",".././node_modules/jschardet/src/latin1prober.js",".././node_modules/jschardet/src/escprober.js",".././node_modules/jschardet/src/universaldetector.js","../external \"process\"",".././node_modules/xml2js/lib/builder.js",".././node_modules/xmlbuilder/lib/index.js",".././node_modules/xmlbuilder/lib/XMLDocument.js",".././node_modules/xmlbuilder/lib/XMLDocumentCB.js",".././node_modules/xmlbuilder/lib/XMLStreamWriter.js",".././node_modules/xml2js/lib/parser.js",".././node_modules/sax/lib/sax.js",".././node_modules/xml2js/lib/bom.js",".././src/svnRepository.ts",".././node_modules/tmp/lib/tmp.js",".././node_modules/os-tmpdir/index.js",".././src/listParser.ts",".././src/logParser.ts",".././src/statusParser.ts",".././src/commands/cleanup.ts",".././src/commands/close.ts",".././src/commands/commit.ts",".././src/commands/commitWithMessage.ts",".././src/commands/deleteUnversioned.ts",".././src/commands/fileOpen.ts",".././src/commands/finishCheckout.ts",".././src/commands/getModel.ts",".././src/commands/log.ts",".././src/commands/openChangeBase.ts",".././src/commands/openChangeHead.ts",".././src/commands/openChangePrev.ts",".././src/commands/openFile.ts",".././src/commands/openHeadFile.ts",".././src/commands/openResourceBase.ts",".././src/commands/openResourceHead.ts",".././src/commands/patch.ts",".././src/commands/patchAll.ts",".././src/commands/patchChangeList.ts",".././src/commands/promptAuth.ts",".././src/commands/promptRemove.ts",".././src/commands/pullIncomingChange.ts",".././src/commands/refresh.ts",".././src/commands/refreshRemoteChanges.ts",".././src/commands/remove.ts",".././src/commands/renameExplorer.ts",".././src/commands/resolve.ts",".././src/commands/resolveAll.ts",".././src/commands/resolved.ts",".././src/commands/revert.ts",".././src/commands/revertChange.ts",".././src/commands/revertSelectedRanges.ts",".././src/commands/switchBranch.ts",".././src/commands/update.ts",".././src/commands/upgrade.ts",".././src/decorations/svnDecorations.ts",".././src/decorations/svnDecorationProvider.ts",".././src/decorations/svnIgnoreDecorationProvider.ts",".././src/historyView/itemLogProvider.ts","../external \"util\"",".././src/historyView/repoLogProvider.ts",".././src/operationsImpl.ts",".././src/svnRI.ts",".././src/statusBar.ts",".././node_modules/minimatch/minimatch.js",".././node_modules/brace-expansion/index.js",".././node_modules/concat-map/index.js",".././node_modules/balanced-match/index.js",".././src/model.ts",".././src/remoteRepository.ts",".././src/svnContentProvider.ts",".././src/svnFinder.ts",".././node_modules/semver/semver.js",".././src/treeView/dataProviders/svnProvider.ts",".././src/treeView/nodes/repositoryNode.ts",".././src/treeView/nodes/incomingChangesNode.ts",".././src/treeView/nodes/noIncomingChangesNode.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","fs","path","vscode_1","types_1","ignoreitems_1","lineChanges_1","resource_1","incomingChangeNode_1","uri_1","util_1","Command","[object Object]","commandName","options","repository","command","this","createRepositoryCommand","execute","_disposable","commands","registerCommand","diff","hasSupportToRegisterDiffCommand","registerDiffInformationCommand","args","dispose","method","__awaiter","model","executeCommand","result","getRepository","repositoryPromise","Promise","resolve","repositories","length","pickRepository","then","apply","catch","err","console","error","resourceStates","resourceUri","Uri","resource","getSCMResource","filter","Resource","arg","fn","resources","isSingleResource","groups","warn","tuple","push","promises","map","all","uri","window","activeTextEditor","document","scheme","fsPath","fromSvnUri","file","getResourceFromFile","against","preview","preserveFocus","preserveSelection","left","getLeftResource","right","getRightResource","title","getTitle","remote","existsSync","statSync","isDirectory","opts","viewColumn","ViewColumn","Active","toString","selection","type","Status","DELETED","toSvnUri","SvnUriAction","SHOW","ref","ADDED","renameResourceUri","CONFLICTED","text","readFileSync","encoding","test","MODIFIED","REPLACED","IGNORED","UNVERSIONED","MISSING","basename","newname","relative","dirname","undefined","default","props","_openResource","content","tempFile","join","root","unlinkSync","with","workspace","openTextDocument","textEditor","showTextDocument","edit","e","delete","Range","Position","Number","MAX_SAFE_INTEGER","insert","showErrorMessage","changes","modifiedDocument","modifiedUri","originalUri","originalDocument","applyLineChanges","WorkspaceEdit","replace","lineAt","lineCount","range","end","applyEdit","save","uris","runByRepository","inputIgnoreList","showInformationMessage","log","jschardet","VERSION","detect","buffer","u","UniversalDetector","reset","Buffer","feed","close","arguments","disposables","forEach","disposable","combinedDisposable","toDisposable","onceEvent","event","listener","thisArgs","done","promise","anyEvent","events","filterEvent","eventToPromise","regexNormalizePath","RegExp","sep","regexNormalizeWindows","fixPathSeparator","normalizePath","toLowerCase","isDescendant","parent","descendant","charAt","startsWith","camelcase","letter","index","toUpperCase","hasDecorationProvider","hasSupportToDecorationProvider","fake","onDidChangeDecorations","provideDecoration","token","registerDecorationProvider","hasRegisterDiffCommand","timeout","ms","setTimeout","isReadOnly","operation","Operation","CurrentBranch","Log","Show","Info","deleteDirectory","dirPath","lstatSync","readdirSync","entry","entryPath","rmdirSync","unwrap","maybeT","Error","SVN","configuration","_onDidChange","EventEmitter","getConfiguration","onDidChangeConfiguration","onConfigurationChanged","onDidChange","affectsConfiguration","fire","section","defaultValue","update","inspect","ConstructorPolicy","SvnKindType","RepositoryState","PropStatus","XMLCData","XMLComment","XMLDeclaration","XMLDocType","XMLElement","XMLProcessingInstruction","XMLRaw","XMLText","isEmpty","isFunction","isObject","hasProp","XMLNode","stringify","children","element","attributes","childNode","item","j","k","lastChild","len","len1","ref1","val","valueOf","Array","isArray","ignoreDecorators","convertAttKey","indexOf","attribute","substr","separateArrayItems","convertTextKey","convertCDataKey","cdata","convertCommentKey","comment","convertRawKey","raw","convertPIKey","instruction","node","insertBefore","child","removed","isRoot","splice","insertAfter","remove","concat","commentBefore","commentAfter","target","insTarget","insValue","instructionBefore","instructionAfter","declaration","version","standalone","doc","xmldec","unshift","doctype","pubID","sysID","ref2","up","isDocument","rootObject","prev","next","importDocument","clonedRoot","clone","ele","nod","txt","dat","com","ins","dec","dtd","importXMLBuilder","decorate","decorator","descriptor","fnKey","memoize","memoizeKey","configurable","writable","throttle","currentKey","nextKey","trigger","clear","sequentialize","currentPromise","run","debounce","delay","timerKey","clearTimeout","decorators_1","configuration_1","iconsRootPath","__dirname","getIconUri","iconName","theme","_resourceUri","_type","_renameResourceUri","_props","_remote","decorations","light","iconPath","getIconPath","dark","tooltip","strikeThrough","faded","color","source","diffHead","changesLeftClick","icons","Renamed","slice","NORMAL","NONE","EXTERNAL","ThemeColor","priority","resourceDecoration","abbreviation","decoration","bubble","Added","Conflicted","Deleted","Ignored","Missing","Modified","Replaced","Unversioned","__decorate","JSON","parse","query","action","extra","replaceFileExtension","params","assign","isPlainObject","sources","ctor","proto","getPrototypeOf","constructor","Function","safer","Safer","from","Uint8Array","encodingOrOffset","TypeError","alloc","size","fill","RangeError","buf","kStringMaxLength","process","binding","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","label","workspaceRoot","contextValue","TreeItem","TreeItemCollapsibleState","None","getCommand","vscode","paths","env","appRoot","cp","events_1","iconv","isUtf8","proc","infoParser_1","svnError_1","svnRepository_1","getSvnErrorCode","stderr","svnErrorCodes","code","AuthorizationFailed","RepositoryIsLocked","NotASvnRepository","NotShareCommonAncestry","WorkingCopyIsTooOld","cpErrorHandler","cb","message","svnErrorCode","Svn","lastCwd","_onOutput","svnPath","onOutput","output","emit","cwd","argsOut","logOutput","split","pop","username","password","defaults","spawn","once","ee","removeListener","on","exitCode","stdout","reject","buffers","b","includes","defaultEncoding","encodingExists","MacCyrillicModel","mTypicalPositiveRatio","encodingGuess","confidence","decodedStdout","decode","stderrFormated","svnCommand","exec","info","parseInfoXml","wcInfo","wcrootAbspath","repositoryRoot","Repository","Async","folderItem_1","newFolderItem_1","parentFolderItem_1","getBranchName","folder","confs","conf","layout","group","regex","matches","match","selectBranch","allowNew","list","withProgress","location","ProgressLocation","Window","dirs","kind","DIR","picks","parts","dir","choice","showQuickPick","branch","showInputBox","prompt","ignoreFocusOut","newBranch","isNew","builder","parser","processors","ValidationError","superClass","__super__","extend","Builder","Parser","parseString","XMLAttribute","eleName","documentObject","att","attName","clonedSelf","clonedChild","attValue","skipNullAttributes","removeAttribute","writer","set","a","xmlVersion","xmlEncoding","xmlStandalone","XMLDTDAttList","XMLDTDElement","XMLDTDEntity","XMLDTDNotation","dtdPubID","dtdSysID","attList","elementName","attributeName","attributeType","defaultValueType","entity","pEntity","notation","docType","ent","pent","not","dtdAttType","dtdAttDefault","dtdAttList","pe","nData","dtdNData","dtdEntityValue","dtdEntity","dtdElementValue","dtdElement","dtdNotation","eleText","processingInstruction","changeListItem_1","ignoredChangeListItem_1","newChangeListItem_1","removeChangeListItem_1","getChangelistPickOptions","canRemove","changelists","changelist","ignoreOnCommitList","ignoreOnCommit","some","getCommitChangelistPickOptions","patchChangelistOptions","inputSwitchChangelist","selectedChoice","placeHolder","changelistName","newChangelistName","inputCommitChangelist","getPatchChangelist","0.1","explicitCharkey","trim","normalize","normalizeTags","attrkey","charkey","explicitArray","ignoreAttrs","mergeAttrs","explicitRoot","validator","xmlns","explicitChildren","childkey","charsAsChildren","includeWhiteChars","async","strict","attrNameProcessors","attrValueProcessors","tagNameProcessors","valueProcessors","emptyTag","0.2","preserveChildrenOrder","rootName","renderOpts","pretty","indent","newline","headless","chunkSize","XMLWriterBase","XMLStringWriter","textispresent","level","space","spacebeforeslash","textispresentwasset","newlinedefault","prettydefault","every","allowEmpty","dontprettytextnodes","openNode","rootNodeName","closeNode","xml2jsParseSettings","xml2js","me","XMLStringifier","assertLegalChar","noDoubleEncoding","elEscape","attEscape","str","res","ampregex","ref3","ref4","ref5","ref6","offset","prefixMatch","firstCharLowerCase","stripPrefix","parseNumbers","isNaN","parseInt","parseFloat","parseBooleans","data","stack","noChangesToCommit","inputCommitMessage","promptNew","showWarningMessage","modal","conflictOptions","description","ConflictItem","option","getConflictPickOptions","os","util","writeFile","promisify","tempdir","tmpdir","dumpSvnFile","snvUri","revision","payload","mkdirSync","fname","fpath","crypto_1","tempFiles_1","LogTreeItemKind","getIconObject","toUri","getLimit","limit","SvnPath","transform","array","copyCommitToClipboard","what","clipboard","Commit","commit","writeText","insertBaseMarker","entries","out","baseRev","persisted","baseRevision","titem","TItem","checkIfFile","local","localFullPath","stat","_a","isFile","fetchMore","cached","rfrom","commitFrom","moreCommits","repo","svnTarget","fetched","needFetch","isComplete","gravatarCache","Map","downloadFile","localPath","getPathNormalizer","errorMsg","show","getCommitIcon","author","gravatar","createHash","write","digest","md5","getCommitLabel","msg","getCommitToolTip","date","Date","openDiff","r1","r2","uri1","uri2","openFileRemote","localUri","timers_1","operationsImpl_1","pathNormalizer_1","statusBar_1","svn_1","globMatch_1","statusIgnored","statusExternal","currentBranch","remoteChangedFiles","isIncomplete","needCleanUp","deletedUris","_onDidChangeRepository","onDidChangeRepository","_onDidChangeState","onDidChangeState","_onDidChangeStatus","onDidChangeStatus","_onDidChangeRemoteChangedFiles","onDidChangeRemoteChangedFile","_onRunOperation","onRunOperation","_onDidRunOperation","onDidRunOperation","_operations","_state","Idle","fsWatcher","createFileSystemWatcher","onWorkspaceChange","onDidCreate","onDidDelete","onRepositoryChange","onRelevantRepositoryChange","onFSChange","onRelevantSvnChange","updateInfo","sourceControl","scm","createSourceControl","count","inputBox","placeholder","acceptInputCommand","quickDiffProvider","statusBar","SvnStatusBar","statusBarCommands","createResourceGroup","conflicts","unversioned","hideWhenEmpty","remoteChangedUpdateInterval","clearInterval","onFsDelete","actionForDeletedFiles","createRemoteChangedInterval","updateRemoteChangedFiles","status","onDidSaveTextDocument","onDidChangeOperations","operations","state","remoteChanges","branchRoot","url","updateFreq","setInterval","allUris","rules","ignored","relativePath","removeAbsolutePath","rule","removeFiles","StatusRemote","isIdle","eventuallyUpdateWhenIdleAndWait","updateWhenIdleAndWait","whenIdleAndFocused","focused","onDidFocusWindow","onDidChangeWindowState","checkRemoteChanges","combineExternal","statuses","retryRun","getStatus","includeIgnored","includeExternals","filesToExclude","excludeList","pattern","negate","repositoryUuid","getRepositoryUuid","statusesRepository","external","hideUnversioned","INCOMPLETE","wcStatus","locked","switched","matchAll","dot","renameUri","rename","reposStatus","prevChangelistsSize","counts","ignoreOnStatusCountList","reduce","tempResourceStates","getCurrentBranch","values","uriString","getBranches","filePath","files","Add","addFiles","AddChangelist","addChangelist","RemoveChangelist","removeChangelist","commitMessage","NewBranch","force","SwitchBranch","switchBranch","ignoreExternals","Update","response","pullIncomingChange","Resolve","commitFiles","Revert","revert","getInfo","Patch","patch","patchChangelist","keepLocal","Remove","plainLog","rto","CleanUp","cleanup","finishCheckout","expressions","directory","recursive","Ignore","addToIgnore","oldFile","newFile","Rename","PathNormalizer","lastPromptAuth","conflict","find","getText","runOperation","start","checkRemote","updateModelState","Disposed","shouldShowProgress","SourceControl","attempt","Math","pow","promptAuth","svnRI_1","ResourceKind","repoInfo","repoRoot","checkoutRoot","RemoteFull","rev","getFullRepoPathFromUrl","LocalFull","isAbsolute","fromRootToBranch","LocalRelative","SvnRI","minimatch","patterns","isExclusion","Minimatch","commands_1","svnDecorations_1","itemLogProvider_1","repoLogProvider_1","model_1","svnContentProvider_1","svnFinder_1","svnProvider_1","_activate","context","outputChannel","createOutputChannel","tryInit","pathHint","svnFinder","SvnFinder","findSvn","svn","Model","contentProvider","SvnContentProvider","registerCommands","svnProvider","registerTreeDataProvider","repoLogProvider","RepoLogProvider","itemLogProvider","ItemLogProvider","onRepository","onDidOpenRepository","onDidCloseRepository","appendLine","append","addListener","init","findSvnExecutable","download","neverShowAgain","filters","executable","showOpenDialog","canSelectFiles","canSelectFolders","canSelectMany","activate","subscriptions","Disposable","deactivate","add_1","addToIgnoreExplorer_1","addToIgnoreSCM_1","changeList_1","checkout_1","cleanup_1","close_1","commit_1","commitWithMessage_1","deleteUnversioned_1","fileOpen_1","finishCheckout_1","getModel_1","log_1","openChangeBase_1","openChangeHead_1","openChangePrev_1","openFile_1","openHeadFile_1","openResourceBase_1","openResourceHead_1","patch_1","patchAll_1","patchChangeList_1","promptAuth_1","promptRemove_1","pullIncomingChange_1","refresh_1","refreshRemoteChanges_1","remove_1","renameExplorer_1","resolve_1","resolveAll_1","resolved_1","revert_1","revertChange_1","revertSelectedRanges_1","switchBranch_1","update_1","upgrade_1","GetModel","FileOpen","OpenFile","PromptAuth","CommitWithMessage","ChangeList","Refresh","OpenResourceBase","OpenResourceHead","OpenChangeBase","PullIncommingChange","PatchAll","PatchChangeList","ResolveAll","Resolved","RevertChange","Close","Cleanup","FinishCheckout","AddToIgnoreSCM","AddToIgnoreExplorer","RenameExplorer","Upgrade","RevertSelectedRanges","OpenChangePrev","PromptRemove","Checkout","RefreshRemoteChanges","DeleteUnversioned","OpenChangeHead","OpenHeadFile","command_1","super","getResourceStates","IgnoreSingleItem","expression","regexExtension","matchExt","ext","fileName","dirName","pick","ignoreByFileName","isByFile","isRecursive","endsWith","byDir","filename","Set","original","modified","diffs","currentLine","isInsertion","originalEndLineNumber","isDeletion","modifiedEndLineNumber","originalStartLineNumber","fromLine","modifiedStartLineNumber","fromCharacter","character","mainUri","changelistItems_1","promiseArray","getRepositoryFromUri","id","resourceGroup","_id","branch_1","defaultCheckoutDirectory","homedir","defaultUri","openLabel","parentPath","folderName","baseUrl","repositoryPath","Notification","progressOptions","cancellable","opt","auth","choices","open","workspaceFolders","updateWorkspaceFolders","FolderItem","toLocaleString","_parent","webpackPolyfill","deprecate","bomHandling","encodings","defaultCharUnicode","defaultCharSingleByte","encode","encoder","getEncoder","trail","skipDecodeWarning","decoder","getDecoder","enc","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecOptions","codec","codecDef","encodingName","bomAware","addBOM","PrependBOM","stripBOM","StripBOM","nodeVer","versions","nodeVerArr","PrependBOMWrapper","StripBOMWrapper","pass","InternalCodec","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","utf8","cesu8","unicode11utf8","ucs2","utf16le","binary","base64","hex","_internal","InternalEncoder","InternalDecoder","StringDecoder","prevStr","acc","contBytes","accBytes","completeQuads","bufIdx","charCode","charCodeAt","curByte","String","fromCharCode","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","Utf16Decoder","initialBytes","initialBytesLen","detectEncoding","asciiCharsLE","asciiCharsBE","_len","min","utf16be","tmp","buf2","utf16","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","chunk","base64Regex","base64Chars","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","uChar","base64IMAPChars","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","_sbcs","newBuf","idx1","idx2","10029","maccenteuro","808","ibm808","cp808","mik","ascii8bit","usascii","ansix34","ansix341968","ansix341986","csascii","cp367","ibm367","isoir6","iso646us","iso646irv","us","latin1","latin2","latin3","latin4","latin5","latin6","latin7","latin8","latin9","latin10","csisolatin1","csisolatin2","csisolatin3","csisolatin4","csisolatincyrillic","csisolatinarabic","csisolatingreek","csisolatinhebrew","csisolatin5","csisolatin6","l1","l2","l3","l4","l5","l6","l7","l8","l9","l10","isoir14","isoir57","isoir100","isoir101","isoir109","isoir110","isoir144","isoir127","isoir126","isoir138","isoir148","isoir157","isoir166","isoir179","isoir199","isoir203","isoir226","cp819","ibm819","cyrillic","arabic","arabic8","ecma114","asmo708","greek","greek8","ecma118","elot928","hebrew","hebrew8","turkish","turkish8","thai","thai8","celtic","celtic8","isoceltic","tis6200","tis62025291","tis62025330","10000","10006","10007","10079","10081","cspc8codepage437","cspc775baltic","cspc850multilingual","cspcp852","cspc862latinhebrew","cpgr","msee","mscyrl","msansi","msgreek","msturk","mshebr","msarab","winbaltrim","cp20866","20866","ibm878","cskoi8r","cp21866","21866","ibm1168","strk10482002","tcvn5712","tcvn57121","gb198880","cn","csiso14jisc6220ro","jisc62201969ro","jp","cshproman8","r8","roman8","xroman8","ibm1051","mac","csmacintosh","437","737","775","850","852","855","856","857","858","860","861","862","863","864","865","866","869","874","922","1046","1124","1125","1129","1133","1161","1162","1163","1250","1251","1252","1253","1254","1255","1256","1257","1258","28591","28592","28593","28594","28595","28596","28597","28598","28599","28600","28601","28603","28604","28605","28606","windows874","win874","cp874","windows1250","win1250","cp1250","windows1251","win1251","cp1251","windows1252","win1252","cp1252","windows1253","win1253","cp1253","windows1254","win1254","cp1254","windows1255","win1255","cp1255","windows1256","win1256","cp1256","windows1257","win1257","cp1257","windows1258","win1258","cp1258","iso88591","cp28591","iso88592","cp28592","iso88593","cp28593","iso88594","cp28594","iso88595","cp28595","iso88596","cp28596","iso88597","cp28597","iso88598","cp28598","iso88599","cp28599","iso885910","cp28600","iso885911","cp28601","iso885913","cp28603","iso885914","cp28604","iso885915","cp28605","iso885916","cp28606","cp437","ibm437","csibm437","cp737","ibm737","csibm737","cp775","ibm775","csibm775","cp850","ibm850","csibm850","cp852","ibm852","csibm852","cp855","ibm855","csibm855","cp856","ibm856","csibm856","cp857","ibm857","csibm857","cp858","ibm858","csibm858","cp860","ibm860","csibm860","cp861","ibm861","csibm861","cp862","ibm862","csibm862","cp863","ibm863","csibm863","cp864","ibm864","csibm864","cp865","ibm865","csibm865","cp866","ibm866","csibm866","cp869","ibm869","csibm869","cp922","ibm922","csibm922","cp1046","ibm1046","csibm1046","cp1124","ibm1124","csibm1124","cp1125","ibm1125","csibm1125","cp1129","ibm1129","csibm1129","cp1133","ibm1133","csibm1133","cp1161","ibm1161","csibm1161","cp1162","ibm1162","csibm1162","cp1163","ibm1163","csibm1163","maccroatian","maccyrillic","macgreek","maciceland","macroman","macromania","macthai","macturkish","macukraine","koi8r","koi8u","koi8ru","koi8t","armscii8","rk1048","tcvn","georgianacademy","georgianps","pt154","viscii","iso646cn","iso646jp","hproman8","macintosh","ascii","tis620","_dbcs","DBCSCodec","UNASSIGNED","GB18030_CODE","NODE_START","UNASSIGNED_NODE","table","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","to","_fillEncodeTable","encodeAdd","_setEncodeChar","defCharSB","gb18030","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","secondByteNode","DBCSEncoder","leadSurrogate","seqObj","DBCSDecoder","nodeIdx","prevBuf","findIdx","mid","floor","_getDecodeTrieNode","addr","bytes","curAddr","writeTable","part","codeTrail","seq","_getEncodeBucket","uCode","high","dbcsCode","bucket","low","_setEncodeSequence","oldVal","prefix","mbCode","nextChar","resCode","subtable","idx","uChars","gbChars","prevBufOffset","seqStart","curSeq","ptr","uCodeLead","ret","shiftjis","¥","‾","csshiftjis","mskanji","sjis","windows31j","ms31j","xsjis","windows932","ms932","932","cp932","eucjp","gb2312","gb231280","gb23121980","csgb2312","csiso58gb231280","euccn","windows936","ms936","936","cp936","gbk","xgbk","isoir58","€","chinese","windows949","ms949","949","cp949","cseuckr","csksc56011987","euckr","isoir149","korean","ksc56011987","ksc56011989","ksc5601","windows950","ms950","950","cp950","big5","big5hkscs","cnbig5","csbig5","xxbig5","Transform","IconvLiteEncoderStream","conv","decodeStrings","IconvLiteDecoderStream","encodeStream","decodeStream","supportsStreams","_collect","collect","_transform","_flush","chunks","isBuffer","supportsNodeEncodingsExtension","extendNodeEncodings","nodeNativeEncodings","utf-8","ucs-2","utf-16le","isNativeEncoding","SlowBuffer","SlowBufferToString","SlowBufferWrite","string","isFinite","swap","remaining","copy","BufferIsEncoding","isEncoding","BufferByteLength","byteLength","BufferToString","BufferWrite","_offset","_length","_encoding","Readable","ReadableSetEncoding","setEncoding","_readableState","undoExtendNodeEncodings","Constants","_debug","detecting","foundIt","notMe","itsMe","MINIMUM_THRESHOLD","SHORTCUT_THRESHOLD","CodingStateMachine","sm","self","_mCurrentState","nextState","byteCls","_mModel","classTable","_mCurrentBytePos","_mCurrentCharLen","charLenTable","stateTable","classFactor","getCurrentCharLen","getCodingStateMachine","consts","HZ_cls","HZ_st","HZCharLenTable","HZSMModel","ISO2022CN_cls","ISO2022CN_st","ISO2022CNCharLenTable","ISO2022CNSMModel","ISO2022JP_cls","ISO2022JP_st","ISO2022JPCharLenTable","ISO2022JPSMModel","ISO2022KR_cls","ISO2022KR_st","ISO2022KRCharLenTable","ISO2022KRSMModel","BIG5_cls","BIG5_st","Big5CharLenTable","Big5SMModel","EUCJP_cls","EUCJP_st","EUCJPCharLenTable","EUCJPSMModel","EUCKR_cls","EUCKR_st","EUCKRCharLenTable","EUCKRSMModel","EUCTW_cls","EUCTW_st","EUCTWCharLenTable","EUCTWSMModel","GB2312_cls","GB2312_st","GB2312CharLenTable","GB2312SMModel","SJIS_cls","SJIS_st","SJISCharLenTable","SJISSMModel","UCS2BE_cls","UCS2BE_st","UCS2BECharLenTable","UCS2BESMModel","UCS2LE_cls","UCS2LE_st","UCS2LECharLenTable","UCS2LESMModel","UTF8_cls","UTF8_st","UTF8CharLenTable","UTF8SMModel","CharSetProber","_mState","getCharsetName","aBuf","getState","getConfidence","filterHighBitOnly","filterWithoutEnglishLetters","filterWithEnglishLetters","inTag","curr","isAlpha","substring","MultiByteCharSetProber","_mCodingSM","_mDistributionAnalyzer","_mLastChar","aLen","codingState","charLen","gotEnoughData","JIS_TYPICAL_DISTRIBUTION_RATIO","JIS_TABLE_SIZE","JISCharToFreqOrder","GB2312_TYPICAL_DISTRIBUTION_RATIO","GB2312_TABLE_SIZE","GB2312CharToFreqOrder","EUCKR_TYPICAL_DISTRIBUTION_RATIO","EUCKR_TABLE_SIZE","EUCKRCharToFreqOrder","BIG5_TYPICAL_DISTRIBUTION_RATIO","BIG5_TABLE_SIZE","Big5CharToFreqOrder","EUCTW_TYPICAL_DISTRIBUTION_RATIO","EUCTW_TABLE_SIZE","EUCTWCharToFreqOrder","CharDistributionAnalysis","_mDone","_mTotalChars","_mFreqChars","aStr","aCharLen","order","getOrder","_mTableSize","_mCharToFreqOrder","_mTypicalDistributionRatio","EUCTWDistributionAnalysis","EUCKRDistributionAnalysis","GB2312DistributionAnalysis","Big5DistributionAnalysis","SJISDistributionAnalysis","EUCJPDistributionAnalysis","jp2CharContext","JapaneseContextAnalysis","_mTotalRel","_mRelSample","_mNeedToSkipCharNum","_mLastCharOrder","rets","SJISContextAnalysis","EUCJPContextAnalysis","SJISProber","_mContextAnalyzer","contxtCf","distribCf","max","UTF8Prober","_mNumOfMBChar","unlike","CharSetGroupProber","_mActiveNum","prober","_mProbers","active","_mBestGuessProber","st","bestConf","cf","EUCJPProber","GB2312Prober","EUCKRProber","Big5Prober","EUCTWProber","MBCSGroupProber","SingleByteCharSetProber","reversed","nameProber","_mLastOrder","_mSeqCounters","_mTotalSeqs","_mTotalChar","_mFreqChar","_mNameProber","charsetName","keepEnglishLetter","charToOrderMap","_mReversed","precedenceMatrix","NUMBER_OF_SEQ_CAT","Latin7_CharToOrderMap","win1253_CharToOrderMap","GreekLangModel","Latin7GreekModel","Win1253GreekModel","TIS620CharToOrderMap","ThaiLangModel","TIS620ThaiModel","Latin5_BulgarianCharToOrderMap","win1251BulgarianCharToOrderMap","BulgarianLangModel","Latin5BulgarianModel","Win1251BulgarianModel","KOI8R_CharToOrderMap","win1251_CharToOrderMap","latin5_CharToOrderMap","macCyrillic_CharToOrderMap","IBM855_CharToOrderMap","IBM866_CharToOrderMap","RussianLangModel","Koi8rModel","Win1251CyrillicModel","Latin5CyrillicModel","Ibm866Model","Ibm855Model","HebrewProber","FINAL_KAF","NORMAL_KAF","FINAL_MEM","NORMAL_MEM","FINAL_NUN","NORMAL_NUN","FINAL_PE","NORMAL_PE","FINAL_TSADI","_mFinalCharLogicalScore","_mFinalCharVisualScore","_mPrev","_mBeforePrev","setModelProbers","logicalProber","visualProber","_mLogicalProber","_mVisualProber","isFinal","isNonFinal","cur","finalsub","modelsub","elt","ceil","win1255_CharToOrderMap","HebrewLangModel","Win1255HebrewModel","Latin2_HungarianCharToOrderMap","win1250HungarianCharToOrderMap","HungarianLangModel","Latin2HungarianModel","Win1250HungarianModel","SBCSGroupProber","hebrewProber","logicalHebrewProber","visualHebrewProber","OTH","Latin1_CharToClass","Latin1ClassModel","Latin1Prober","_mLastCharClass","_mFreqCounter","charClass","freq","total","EscCharSetProber","codingSM","_mActiveSM","_mDetectedCharset","_mStart","_mGotData","_mInputState","_mBOM","_mEscCharsetProber","_mCharsetProbers","_highBitDetector","_escDetector","proberConfidence","maxProberConfidence","maxProber","escapeCDATA","requiresCDATA","wrapCDATA","buildObject","rootObj","render","rootElement","_this","keys","obj","attr","allowSurrogateChars","XMLDocument","XMLDocumentCB","XMLStreamWriter","begin","onData","onEnd","stringWriter","streamWriter","stream","writerOptions","onDataCallback","onEndCallback","currentNode","currentLevel","openTags","documentStarted","documentCompleted","openCurrent","isOpen","isClosed","results","isLastRootNode","endline","bom","processItem","sax","setImmediate","thing","assignOrPush","processAsync","xmlnskey","saxParser","error1","errThrown","newValue","ontext","removeAllListeners","onerror","resume","onend","ended","resultObject","EXPLICIT_CHARKEY","onopentag","processedKey","onclosetag","emptyStr","nodeName","objClone","old","xpath","getOwnPropertyNames","charChild","#name","oncdata","SAXParser","SAXStream","createStream","MAX_BUFFER_LENGTH","Stream","clearBuffers","q","bufferCheckPosition","lowercase","lowercasetags","looseCase","tags","closed","closedRoot","sawRoot","tag","noscript","S","BEGIN","strictEntities","ENTITIES","XML_ENTITIES","attribList","rootNS","trackPosition","position","line","column","EVENTS","F","BEGIN_WHITESPACE","beginWhiteSpace","TEXT","starti","textNode","isWhitespace","strictFail","TEXT_ENTITY","OPEN_WAKA","startTagPosition","SCRIPT","SCRIPT_ENDING","script","CLOSE_TAG","SGML_DECL","sgmlDecl","isMatch","nameStart","OPEN_TAG","tagName","PROC_INST","procInstName","procInstBody","pad","CDATA","emitNode","COMMENT","DOCTYPE","isQuote","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","textopts","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","body","nameBody","newTag","openTag","OPEN_TAG_SLASH","ATTRIB","closeTag","attribName","attribValue","ATTRIB_NAME","ATTRIB_VALUE","attrib","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","isAttribEnd","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","notMatch","returnState","parseEntity","entityBody","entityStart","maxAllowed","maxActual","closeText","checkBufferLength","flush","ex","streamWraps","ev","_parser","readable","er","_decoder","h","SD","handler","XML_NAMESPACE","XMLNS_NAMESPACE","xml","stringFromCharCode","fromCodePoint","STATE","COMMENT_STARTING","amp","gt","lt","quot","apos","AElig","Aacute","Acirc","Agrave","Aring","Atilde","Auml","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","Iacute","Icirc","Igrave","Iuml","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","aelig","agrave","aring","atilde","auml","ccedil","eacute","ecirc","egrave","eth","euml","iacute","icirc","igrave","iuml","ntilde","oacute","ocirc","ograve","oslash","otilde","ouml","szlig","thorn","uacute","ucirc","ugrave","uuml","yacute","yuml","reg","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","shy","macr","deg","plusmn","sup1","sup2","sup3","acute","micro","para","middot","cedil","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","nodeType","qname","qualName","qn","selfClosing","nv","isSelfClosing","closeTo","x","num","entityLC","numStr","highSurrogate","lowSurrogate","codeUnits","codePoint","listParser_1","logParser_1","statusParser_1","policy","_infoCache","LateInit","_info","parseStatusXml","uuid","skipCache","resetInfoCache","tmpFile","setGracefulCleanup","fileSync","writeFileSync","removeCallback","trunkLayout","branchesLayout","tagsLayout","repoUrl","getRepoUrl","branches","trees","tree","branchUrl","logLength","parseSvnLog","parseSvnList","currentIgnore","ignores","getCurrentIgnore","v","sort","oldName","newName","crypto","osTmpDir","_c","tmpDir","RANDOM_CHARS","TEMPLATE_PATTERN","DEFAULT_TRIES","CREATE_FLAGS","O_CREAT","O_EXCL","O_RDWR","EBADF","errno","ENOENT","DIR_MODE","FILE_MODE","_removeObjects","_gracefulCleanup","_uncaughtException","_randomChars","howMany","rnd","randomBytes","pseudoRandomBytes","_isUndefined","_parseArguments","callback","_generateTmpName","template","pid","postfix","tmpName","tries","_getUniqueName","tmpNameSync","_rmdirRecursiveSync","deferred","_prepareTmpFileRemoveCallback","fd","_prepareRemoveCallback","fdPath","closeSync","isExpectedError","isENOENT","keep","_prepareTmpDirRemoveCallback","unsafeCleanup","removeFunction","called","_cleanupCallback","_garbageCollector","mkdir","dirSync","discardDescriptor","detachDescriptor","discardOrDetachDescriptor","openSync","isWindows","platform","trailingSlashRe","TEMP","TMP","SystemRoot","windir","TMPDIR","constants_1","transformed","logentry","processEntry","wcLocked","movedTo","movedFrom","statusList","change","xmlToStatus","messages_1","filePaths","LOG","openChange","HEAD","basedir","showDiffPath","prevUsername","prevPassword","relativeList","resp","ignoreList","showUpdateMessage","incomingChange","refreshRemoteChanges","answer","basepath","conflictItems_1","yes","visibleTextEditors","_revertChanges","selections","selectedChanges","modifiedRange","intersection","updateRevision","folderPath","upgradeWorkingCopy","tryOpenRepository","svnDecorationProvider_1","svnIgnoreDecorationProvider_1","enabled","modelListener","providers","configListener","enable","disable","provider","ignoreProvider","_onDidChangeDecorations","newDecorations","collectDecorationData","has","SvnIgnoreDecorationProvider","checkIgnoreQueue","_","checkIgnoreSoon","queue","common_1","_onDidChangeTreeData","onDidChangeTreeData","_dispose","onDidChangeActiveTextEditor","editorChanged","openFileRemoteCmd","openDiffCmd","openDiffBaseCmd","refresh","currentItem","pos","findIndex","prevRev","te","loadMore","ti","Expanded","ltItem","repository_1","logCache","addRepolikeGui","removeRepo","openFileLocal","maybeItem","getCached","repoLike","userAdded","wsrepo","remRepo","getRemoteRepository","svninfo","repoName","box","createInputBox","onDidAccept","wsf","joined","box2","addRepolike","ri","remoteFullPath","posPrev","nm","revs","fetchMoreClick","remoteRoot","Repo","Collapsed","CommitDetail","pathElem","relativeFromBranch","getActionIcon","lk","lv","rk","rv","logentries","_path","_revision","fromRepoToBranch","withRevision","icon","GLOBSTAR","expand","plTypes","!","?","+","*","@","qmark","star","twoStarDot","twoStarNoDot","reSpecials","slashSplit","nocomment","regexp","make","braceExpand","nobrace","def","orig","debug","_made","parseNegate","globSet","globParts","si","negateOffset","nonegate","isSub","noglobstar","stateChar","re","hasMagic","nocase","escaping","patternListStack","negativeLists","inClass","reClassStart","classStart","patternStart","clearStateChar","noext","reStart","pl","reEnd","cs","sp","SUBPARSE","tail","$1","$2","addPatternStart","nl","nlBefore","nlFirst","nlLast","nlAfter","openParensBefore","cleanAfter","dollar","newRe","flags","regExp","_glob","_src","makeRe","twoStar","mm","f","nonull","partial","matchBase","hit","matchOne","flipNegate","fi","fl","fr","pr","swallowee","concatMap","balanced","isTop","expansions","pre","isNumericSequence","isAlphaSequence","isSequence","isOptions","post","escClose","parseCommaParts","postParts","shift","embrace","N","numeric","y","width","incr","abs","lte","reverse","gte","isPadded","need","z","el","expansion","escSlash","escOpen","escComma","escPeriod","escapeBraces","unescapeBraces","random","xs","maybeMatch","begs","beg","ai","bi","remoteRepository_1","_svn","_onDidOpenRepository","_onDidCloseRepository","openRepositories","possibleSvnRepositoryPaths","maxDepth","configurationChangeDisposable","onDidChangeWorkspaceFolders","onPossibleSvnRepositoryChange","checkHasChangesOnActiveEditor","scanWorkspaceFolders","possibleSvnRepositoryPath","eventuallyScanPossibleSvnRepository","add","eventuallyScanPossibleSvnRepositories","MERGED","OBSTRUCTED","hasChangesOnActiveEditor","added","possibleRepositoryFolders","getOpenRepository","openRepositoriesToDispose","isSvnFolder","pathParts","topPath","resourceConfig","getRepositoryRoot","newLevel","RemoteRepository","hint","liveRepository","externalPath","disappearListener","onDidDisappearRepository","changeListener","statusListener","scanExternals","openRepository","THREE_MINUTES","FIVE_MINUTES","changedRepositoryRoots","cache","registerTextDocumentContentProvider","interval","eventuallyFireChangeEvents","fireChangeEvents","cacheKey","timestamp","getTime","cacheValue","PATCH","now","row","textDocuments","semver","findSpecificSvn","findSvnDarwin","findSvnWin32","checkSvnVersion","findSystemSvnWin32","ProgramW6432","ProgramFiles","base","svnPathBuffer","getVersion","valid","SemVer","NODE_DEBUG","SEMVER_SPEC_VERSION","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","LONETILDE","TILDETRIM","TILDE","TILDELOOSE","LONECARET","CARETTRIM","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","HYPHENRANGE","HYPHENRANGELOOSE","STAR","loose","includePrerelease","major","minor","prerelease","build","format","clean","compare","other","compareMain","comparePre","compareIdentifiers","inc","release","identifier","version1","version2","eq","v1","v2","anum","bnum","neq","cmp","op","Comparator","comp","ANY","operator","rcompareIdentifiers","compareLoose","rcompare","rsort","parseRange","isX","hyphenReplace","$0","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","tb","testSet","allowed","satisfies","outside","hilo","gtfn","ltefn","ltfn","ecomp","comparators","comparator","intersects","rangeTmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","comps","hr","compRe","M","replaceCaret","replaceCarets","replaceTilde","replaceTildes","gtlt","xM","xm","xp","anyX","replaceXRange","replaceXRanges","replaceStars","parseComparator","thisComparators","thisComparator","rangeComparators","rangeComparator","toComparators","maxSatisfying","maxSV","rangeObj","minSatisfying","minSV","validRange","ltr","gtr","parsed","coerce","repositoryNode_1","getTreeItem","getChildren","incomingChangesNode_1","noIncomingChangesNode_1","remoteChange"],"mappings":"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CAgtD,EAAAlB,MAAAkB,EAAAlB,MAAAkB,EAAAlB,MAAAkB,EAAAlB,MAAAkB,EAAAlB,MAAAkB,EAAAlB,MAAAkB,EAAAlB,MAAAkB,EAAAlB,MACAkB,EAAAlB,MAAAkB,EAAAlB,MAAAkB,EAAAlB,MAAAkB,EAAAlB,MAAAkB,EAAAlB,MAAAkB,EAAAlB,MAAAkB,EAAAlB,MAAAkB,EAAAlB,MACAkB,EAAAhtD,MAAAgtD,EAAAhtD,MAAA,QAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MACAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MACAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAA,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MACAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MACAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAA,QAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MACAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MACAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAA,IAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MACAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MACAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAA,QAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MACAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,EAAAhtD,MAAAgtD,E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CA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,4EACA,8EACA,yEACA,yEACA,yEACA,2EACA,4EACA,6EACA,8EACA,2EACA,6EACA,2EACA,4EACA,yEACA,yEACA,8EACA,2EACA,wEACA,yEACA,+EACA,yEACA,4EACA,+EACA,gFACA,2EACA,8EACA,2EACA,4EACA,uEACA,2EACA,2EACA,2EACA,4EACA,2EACA,0EACA,6EACA,2EACA,yEACA,+EACA,2EACA,6EACA,+EACA,4EACA,4EACA,6EACA,2EACA,2EACA,2EACA,yEACA,uEACA,+EACA,yEACA,yEACA,4EACA,4EACA,6EACA,4EACA,0EACA,0EACA,4EACA,0EACA,4EACA,4EACA,6EACA,6EACA,2EACA,4EACA,uEACA,uEACA,2EACA,uEACA,wEACA,2EACA,2EACA,8EACA,uEACA,6EACA,6EACA,2EACA,yEACA,4EACA,0EACA,6EACA,2EACA,4EACA,4EACA,yEACA,yEACA,4EACA,0EACA,0EACA,4EACA,4EACA,+EACA,0EACA,wEACA,6EACA,yEACA,wEACA,8EACA,6EACA,6EACA,8EACA,4EACA,4EACA,0EACA,wEACA,0EACA,4EACA,2EACA,yEACA,8EACA,6EACA,4EACA,yEACA,2EACA,6EACA,8EACA,2EACA,4EACA,6EACA,8EACA,0EACA,+EACA,2EACA,0EACA,4EACA,0EACA,6EACA,0EACA,4EACA,0EACA,+EACA,8EACA,6EACA,2EACA,2EACA,2EACA,4EACA,6EACA,8EACA,+EACA,2EACA,6EACA,2EACA,6EACA,yEACA,4EACA,4EACA,4EACA,yEACA,0EACA,yEACA,2EACA,4EACA,4EACA,0EACA,8EACA,0EACA,gFACA,4EACA,8EACA,8EACA,6EACA,2EACA,0EACA,2EACA,8EACA,0EACA,0EACA,6EACA,6EACA,0EACA,0EACA,8EACA,0EACA,4EACA,2EACA,4EACA,6EACA,0EACA,6EACA,6EACA,6EACA,4EAEA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,kGC5hBA,IAAA3qD,KA+bElM,EAAQ,IA/aV82D,kCAAA,GAEA5qD,EAAA6qD,kBAAA,KAEA7qD,EAAA8qD,sBAAA,CACA,8EACA,4EACA,4EACA,4EACA,0EACA,+EACA,2EACA,2EACA,6EACA,6EACA,0EACA,6EACA,6EACA,wEACA,0EACA,2EACA,6EACA,wEACA,2EACA,6EACA,yEACA,8EACA,4EACA,4EACA,6EACA,+EACA,6EACA,6EACA,yEACA,2EACA,4EACA,oEACA,0EACA,4EACA,+EACA,4EACA,4EACA,2EACA,yEACA,8EACA,2EACA,0EACA,yEACA,0EACA,0EACA,8EACA,2EACA,8EACA,0EACA,4EACA,2EACA,4EACA,yEACA,wEACA,6EACA,0EACA,wEACA,8EACA,sEACA,8EACA,6EACA,uEACA,8EACA,yEACA,4EACA,sEACA,4EACA,+EACA,2EACA,2EACA,yEACA,wEACA,wEACA,yEACA,yEACA,6EACA,0EACA,2EACA,8EACA,0EACA,2EACA,uEACA,4EACA,0EACA,0EACA,2EACA,4EACA,2EACA,6EACA,2EACA,yEACA,6EACA,2EACA,6EACA,4EACA,6EACA,8EACA,6EACA,2EACA,2EACA,4EACA,2EACA,yEACA,8EACA,6EACA,2EACA,+EACA,4EACA,2EACA,4EACA,6EACA,+EACA,6EACA,2EACA,8EACA,0EACA,8EACA,4EACA,8EACA,2EACA,0EACA,2EACA,4EACA,8EACA,6EACA,4EACA,+EACA,8EACA,+EACA,8EACA,4EACA,6EACA,8EACA,6EACA,0EACA,6EACA,8EACA,8EACA,6EACA,0EACA,2EACA,0EACA,0EACA,yEACA,0EACA,6EACA,6EACA,+EACA,8EACA,0EACA,8EACA,uEACA,uEACA,uEACA,qEACA,sEACA,yEACA,6EACA,2EACA,0EACA,0EACA,6EACA,0EACA,6EACA,yEACA,6EACA,8EACA,6EACA,4EACA,6EACA,0EACA,0EACA,2EACA,6EACA,4EACA,0EACA,uEACA,2EACA,0EACA,8EACA,yEACA,4EACA,8EACA,2EACA,2EACA,yEACA,yEACA,2EACA,2EACA,8EACA,sEACA,6EACA,2EACA,4EACA,6EACA,4EACA,4EACA,2EACA,4EACA,4EACA,4EACA,uEACA,4EACA,4EACA,2EACA,2EACA,2EACA,4EACA,sEACA,4EACA,0EACA,6EACA,wEACA,0EACA,6EACA,0EACA,uEACA,gFACA,6EACA,2EACA,2EACA,2EACA,2EACA,yEACA,sEACA,wEACA,sEACA,8EACA,2EACA,yEACA,4EACA,6EACA,0EACA,0EACA,0EAEA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,kGC5bA,IAAA9qD,KA2jBElM,EAAQ,IA5iBVi3D,iCAAA,EAEA/qD,EAAAgrD,iBAAA,KAGAhrD,EAAAirD,qBAAA,CACA,mEACA,4EACA,wEACA,sEACA,oEACA,sEACA,4EACA,uEACA,4EACA,mEACA,uEACA,4EACA,4EACA,2EACA,4EACA,0EACA,4EACA,sEACA,qEACA,sEACA,yEACA,yEACA,sEACA,gFACA,wEACA,0EACA,qEACA,oEACA,yEACA,oEACA,0EACA,qEACA,uEACA,oEACA,sEACA,yEACA,2EACA,8EACA,6EACA,yEACA,uEACA,sEACA,iEACA,mEACA,wEACA,0EACA,4EACA,kEACA,gEACA,sEACA,sEACA,oEACA,0EACA,wEACA,2EACA,yEACA,mEACA,4EACA,sEACA,wEACA,qEACA,0EACA,6EACA,2EACA,2EACA,+EACA,+EACA,6EACA,4EACA,oEACA,6EACA,sEACA,sEACA,uEACA,6EACA,2EACA,2EACA,yEACA,gEACA,0EACA,2EACA,+EACA,gFACA,0EACA,qEACA,sEACA,0EACA,mEACA,qEACA,yEACA,sEACA,yEACA,uEACA,sEACA,yEACA,kEACA,oEACA,+DACA,wEACA,wEACA,uEACA,sEACA,8EACA,sEACA,2EACA,sEACA,4EACA,2EACA,6EACA,8EACA,6EACA,sEACA,4EACA,yEACA,2EACA,yEACA,4EACA,sEACA,wEACA,2EACA,2EACA,2EACA,4EACA,4EACA,kEACA,uEACA,sEACA,yEACA,4EACA,8EACA,0EACA,mEACA,2EACA,yEACA,uEACA,4EACA,4EACA,uEACA,8DACA,uEACA,uEACA,qEACA,2EACA,0EACA,6EACA,wEACA,2EAEA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gDCxjBA,IAAAjrD,KAm4BElM,EAAQ,IAl3BVo3D,gCAAA,IAGAlrD,EAAAmrD,gBAAA,KAEAnrD,EAAAorD,oBAAA,CACA,gEACA,oEACA,sEACA,wEACA,sEACA,qEACA,uEACA,uEACA,qEACA,uEACA,qEACA,yEACA,yEACA,qEACA,wEACA,wEACA,uEACA,0EACA,2EACA,wEACA,2EACA,oEACA,uEACA,2EACA,wEACA,4EACA,wEACA,wEACA,0EACA,yEACA,yEACA,4EACA,4EACA,8EACA,+EACA,6EACA,yEACA,4EACA,0EACA,4EACA,6EACA,+EACA,6EACA,wEACA,4EACA,uEACA,0EACA,sEACA,2EACA,6EACA,4EACA,4EACA,0EACA,8EACA,0EACA,2EACA,2EACA,+EACA,0EACA,2EACA,8EACA,0EACA,+EACA,2EACA,0EACA,4EACA,+EACA,4EACA,uEACA,4EACA,+EACA,2EACA,8EACA,8EACA,6EACA,6EACA,uEACA,6EACA,2EACA,wEACA,6EACA,4EACA,6EACA,8EACA,8EACA,+EACA,4EACA,0EACA,6EACA,6EACA,+EACA,0EACA,+EACA,qEACA,4EACA,4EACA,6EACA,8EACA,8EACA,gFACA,0EACA,0EACA,8EACA,+EACA,2EACA,2EACA,+EACA,4EACA,+EACA,8EACA,8EACA,6EACA,+EACA,4EACA,4EACA,8EACA,8EACA,+EACA,8EACA,4EACA,2EACA,4EACA,yEACA,+EACA,wEACA,4EACA,4EACA,6EACA,4EACA,6EACA,0EACA,8EACA,8EACA,4EACA,6EACA,6EACA,+EACA,+EACA,+EACA,+EACA,8EACA,wEACA,6EACA,6EACA,4EACA,+EACA,+EACA,+EACA,2EACA,6EACA,uEACA,4EACA,2EACA,6EACA,2EACA,8EACA,8EACA,2EACA,8EACA,+EACA,gFACA,6EACA,0EACA,+EACA,+EACA,8EACA,+EACA,4EACA,gFACA,2EACA,2EACA,0EACA,6EACA,gFACA,8EACA,8EACA,6EACA,4EACA,6EACA,2EACA,0EACA,yEACA,2EACA,6EACA,+EACA,+EACA,+EACA,0EACA,+EACA,8EACA,0EACA,+EACA,6EACA,+EACA,+EACA,8EACA,gFACA,+EACA,6EACA,2EACA,4EACA,8EACA,6EACA,4EACA,8EACA,4EACA,wEACA,gFACA,gFACA,2EACA,gFACA,8EACA,6EACA,8EACA,4EACA,6EACA,+EACA,+EACA,8EACA,8EACA,8EACA,8EACA,4EACA,2EACA,8EACA,6EACA,4EACA,gFACA,+EACA,2EACA,+EACA,+EACA,+EACA,6EACA,8EACA,6EACA,+EACA,+EACA,0EACA,+EACA,gFACA,6EACA,2EACA,+EACA,+EACA,+EACA,6EACA,8EACA,6EACA,gFACA,gFACA,+EACA,0EACA,6EACA,+EACA,8EACA,+EACA,8EACA,gFACA,gFACA,+EACA,6EACA,2EACA,8EACA,4EACA,8EACA,+EACA,+EACA,gFACA,+EACA,+EACA,8EACA,gFACA,4EACA,6EACA,6EACA,6EACA,+EACA,8EACA,8EACA,8EACA,8EACA,+EACA,6EACA,+EACA,gFACA,+EACA,8EACA,6EACA,gFACA,8EACA,6EACA,+EACA,+EACA,+EACA,gFACA,8EACA,gFACA,+EACA,8EACA,6EACA,+EACA,8EACA,4EACA,8EACA,+EACA,8EACA,gFACA,+EACA,+EACA,8EACA,8EACA,8EACA,6EACA,+EACA,6EACA,gFACA,8EACA,+EACA,4EACA,gFACA,6EACA,gFACA,4EACA,+EACA,8EACA,gFACA,8EACA,8EACA,gFACA,gFACA,8EACA,6EACA,+EACA,8EACA,8EAEA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,kFACA,gGACA,8FACA,+FACA,gGACA,gGACA,+FACA,+FACA,+FACA,+FACA,4FACA,8FACA,gGACA,+FACA,8FACA,gGACA,+FACA,gGACA,+FACA,8FACA,gGACA,gGACA,+FACA,+FACA,6FACA,+FACA,+FACA,+FACA,+FACA,8FACA,8FACA,gGACA,gGACA,gGACA,8FACA,+FACA,gGACA,8FACA,8FACA,+FACA,gGACA,gGACA,8FACA,gGACA,8FACA,+FACA,+FACA,6FACA,+FACA,+FACA,gGACA,+FACA,8FACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,8FACA,gGACA,+FACA,+FACA,+FACA,+FACA,gGACA,gGACA,8FACA,gGACA,+FACA,8FACA,8FACA,gGACA,gGACA,+FACA,+FACA,gGACA,+FACA,+FACA,+FACA,8FACA,gGACA,gGACA,+FACA,gGACA,gGACA,gGACA,8FACA,gGACA,+FACA,gGACA,8FACA,gGACA,+FACA,+FACA,gGACA,gGACA,8FACA,+FACA,+FACA,gGACA,+FACA,gGACA,gGACA,8FACA,8FACA,+FACA,+FACA,gGACA,gGACA,gGACA,+FACA,+FACA,gGACA,8FACA,+FACA,+FACA,gGACA,+FACA,+FACA,+FACA,8FACA,+FACA,gGACA,gGACA,+FACA,gGACA,+FACA,gGACA,+FACA,gGACA,+FACA,8FACA,gGACA,gGACA,gGACA,+FACA,gGACA,gGACA,gGACA,8FACA,gGACA,8FACA,6FACA,+FACA,gGACA,gGACA,+FACA,8FACA,+FACA,8FACA,+FACA,+FACA,+FACA,+FACA,gGACA,+FACA,+FACA,gGACA,+FACA,gGACA,+FACA,gGACA,+FACA,8FACA,gGACA,gGACA,gGACA,+FACA,gGACA,8FACA,gGACA,gGACA,gGACA,+FACA,gGACA,gGACA,gGACA,+FACA,gGACA,gGACA,gGACA,gGACA,6FACA,gGACA,gGACA,8FACA,gGACA,+FACA,gGACA,+FACA,gGACA,+FACA,gGACA,+FACA,gGACA,gGACA,6FACA,+FACA,+FACA,gGACA,gGACA,gGACA,gGACA,gGACA,8FACA,4FACA,gGACA,+FACA,+FACA,gGACA,8FACA,8FACA,8FACA,gGACA,+FACA,+FACA,+FACA,gGACA,+FACA,+FACA,gGACA,+FACA,gGACA,gGACA,gGACA,8FACA,+FACA,+FACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,+FACA,+FACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,+FACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gDCj4BA,IAAAprD,KAmZElM,EAAQ,IAjYVu3D,iCAAA,IAGArrD,EAAAsrD,iBAAA,KAEAtrD,EAAAurD,qBAAA,CACA,gEACA,oEACA,sEACA,wEACA,sEACA,qEACA,uEACA,uEACA,qEACA,uEACA,qEACA,yEACA,yEACA,qEACA,wEACA,wEACA,uEACA,0EACA,2EACA,wEACA,2EACA,oEACA,uEACA,2EACA,wEACA,4EACA,wEACA,wEACA,0EACA,yEACA,yEACA,4EACA,4EACA,8EACA,+EACA,4EACA,yEACA,4EACA,0EACA,4EACA,6EACA,+EACA,6EACA,wEACA,4EACA,uEACA,0EACA,sEACA,2EACA,6EACA,4EACA,4EACA,0EACA,8EACA,0EACA,2EACA,2EACA,+EACA,0EACA,2EACA,8EACA,0EACA,+EACA,2EACA,0EACA,4EACA,+EACA,4EACA,uEACA,4EACA,+EACA,2EACA,8EACA,8EACA,6EACA,6EACA,uEACA,8EACA,2EACA,wEACA,6EACA,4EACA,6EACA,8EACA,8EACA,+EACA,4EACA,0EACA,6EACA,6EACA,+EACA,0EACA,8EACA,sEACA,4EACA,4EACA,8EACA,8EACA,8EACA,gFACA,0EACA,0EACA,8EACA,+EACA,2EACA,2EACA,8EACA,6EACA,+EACA,8EACA,6EACA,8EACA,+EACA,4EACA,4EACA,8EACA,8EACA,+EACA,8EACA,4EACA,2EACA,4EACA,yEACA,+EACA,wEACA,4EACA,4EACA,6EACA,4EACA,6EACA,0EACA,8EACA,8EACA,4EACA,6EACA,6EACA,+EACA,+EACA,+EACA,+EACA,8EACA,wEACA,6EACA,6EACA,4EACA,+EACA,+EACA,+EACA,2EACA,6EACA,uEACA,4EACA,2EACA,6EACA,2EACA,8EACA,8EACA,2EACA,8EACA,+EACA,gFACA,6EACA,0EACA,+EACA,+EACA,8EACA,+EACA,4EACA,gFACA,2EACA,2EACA,0EACA,6EACA,gFACA,8EACA,8EACA,6EACA,4EACA,6EACA,2EACA,0EACA,yEACA,2EACA,6EACA,+EACA,+EACA,+EACA,0EACA,+EACA,8EACA,0EACA,+EACA,6EACA,+EACA,+EACA,8EACA,gFACA,+EACA,6EACA,2EACA,4EACA,8EACA,6EACA,4EACA,8EACA,4EACA,wEACA,gFACA,gFACA,2EACA,gFACA,8EACA,6EACA,8EACA,4EACA,6EACA,+EACA,+EACA,6EACA,8EACA,8EACA,8EACA,4EACA,2EACA,8EACA,6EACA,4EACA,gFACA,+EACA,2EACA,+EACA,+EACA,+EACA,6EACA,8EACA,6EACA,gFACA,+EACA,0EACA,8EACA,gFACA,8EACA,0EACA,+EACA,+EACA,8EACA,6EACA,8EACA,6EACA,gFACA,gFACA,+EACA,0EACA,8EACA,+EACA,6EACA,+EACA,8EACA,gFACA,gFACA,+EACA,6EACA,2EACA,8EACA,4EACA,8EACA,+EACA,+EACA,gFACA,+EACA,+EACA,8EACA,gFACA,4EACA,6EACA,6EACA,6EACA,+EACA,8EACA,8EACA,8EACA,8EACA,+EACA,6EACA,+EACA,gFACA,+EACA,8EACA,6EACA,gFACA,8EACA,6EACA,+EACA,+EACA,gFACA,+EACA,+EACA,gFACA,+EACA,8EACA,6EACA,+EACA,8EACA,4EACA,8EACA,+EACA,6EACA,gFACA,+EACA,+EACA,8EACA,8EACA,8EACA,8EACA,8EACA,6EACA,gFACA,8EACA,+EACA,4EACA,gFACA,6EACA,gFACA,4EACA,+EACA,8EACA,gFACA,8EACA,8EACA,gFACA,gFACA,8EACA,6EACA,+EACA,8EACA,8EAEA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,kGChZA,IAAAvrD,KA+PElM,EAAQ,IA7PV03D,yBAAA,WACA,IAKAtG,EAAA/tD,KAYAA,KAAAmJ,MAAA,WACAnJ,KAAAs0D,QAAA,EACAt0D,KAAAu0D,aAAA,EACAv0D,KAAAw0D,YAAA,GAMAx0D,KAAAqJ,KAAA,SAAAorD,EAAAC,GACA,MAAAA,EAEA,IAAAC,EAAA30D,KAAA40D,SAAAH,QAEAE,GAAA,EAEAA,GAAA,IACA30D,KAAAu0D,eAEAI,EAAA30D,KAAA60D,aACA,IAAA70D,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AAA40D,SAAA,SAAAH,GAKA,OAAAA,EAAA,QACA,IAAAA,EAAApqB,WAAA,QAAAoqB,EAAApqB,WAAA,QAEA,GAbA0jB,EAAA+G,kBAAAjsD,EAAA2qD,mBACAzF,EAAA8G,YAAAhsD,EAAA0qD,eACAxF,EAAAgH,2BAAAlsD,EAAAyqD,gCAiBAzqD,EAAAwsD,0BAAA12D,UAAA,IAAAkK,EAAAwrD,0CC7PA,IAAAxrD,KAoNElM,EAAQ,IAjNV24D,eAAA,CACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,wKACA,yKAGAzsD,EAAA0sD,wBAAA,WACA,IAKAxH,EAAA/tD,KAMAA,KAAAmJ,MAAA,WACAnJ,KAAAw1D,WAAA,EACAx1D,KAAAy1D,YAAA,GACA,QAAA14D,EAAA,EAAuBA,EAdvB,EAc4CiD,KAAAy1D,YAAA14D,KAAA,GAC5CiD,KAAA01D,oBAAA,EACA11D,KAAA21D,iBAAA,EACA31D,KAAAs0D,QAAA,GAGAt0D,KAAAqJ,KAAA,SAAA+oD,EAAAc,GACA,IAAAlzD,KAAAs0D,OASA,IADA,IAAAv3D,EAAAiD,KAAA01D,oBACA34D,EAAAm2D,GAAA,CACA,IAAA0C,EAAA51D,KAAA40D,SAAAxC,EAAA17C,MAAA3Z,IAAA,IACA43D,EAAAiB,EAAA,GAGA,IADA74D,GADA64D,EAA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A5kD,QAqFAy0B,CAAA/8B,EAFA02D,OAAApxD,IAAAoxD,KACAC,OAAArxD,IAAAqxD,IAAA,OAGA3uD,EAAAyuD,wBAAA34D,UAAA,IAAAkK,EAAAopD,+BC3GA,IAAAppD,KAuMElM,EAAQ,IA/LV07D,sBAAA,CACA,gEACA,gEACA,gEACA,gEACA,0DACA,2DACA,kDACA,0DACA,gEACA,gEACA,8DACA,0DACA,iDACA,mDACA,4CACA,8CAGAxvD,EAAAyvD,uBAAA,CACA,gEACA,gEACA,gEACA,gEACA,0DACA,2DACA,kDACA,0DACA,gEACA,gEACA,8DACA,2DACA,iDACA,mDACA,4CACA,8CASAzvD,EAAA0vD,eAAA,CACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,iEAGA1vD,EAAA2vD,iBAAA,CACAP,eAAApvD,EAAAwvD,sBACAF,iBAAAtvD,EAAA0vD,eACA56C,sBAAA,QACAq6C,mBAAA,EACAD,YAAA,cAGAlvD,EAAA4vD,kBAAA,CACAR,eAAApvD,EAAAyvD,uBACAH,iBAAAtvD,EAAA0vD,eACA56C,sBAAA,QACAq6C,mBAAA,EACAD,YAAA,iCCpMA,IAAAlvD,KA8KElM,EAAQ,IApKV+7D,qBAAA,CACA,gEACA,gEACA,gEACA,gEACA,+DACA,8DACA,wDACA,yDACA,+DACA,6DACA,kDACA,+CACA,8CACA,oDACA,iDACA,uDASA7vD,EAAA8vD,cAAA,CACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,iEAGA9vD,EAAA+vD,gBAAA,CACAX,eAAApvD,EAAA6vD,qBACAP,iBAAAtvD,EAAA8vD,cACAh7C,sBAAA,QACAq6C,mBAAA,EACAD,YAAA,4BC3KA,IAAAlvD,KA0MElM,EAAQ,IA/LVk8D,+BAAA,CACA,gEACA,gEACA,gEACA,gEACA,uDACA,4DACA,qDACA,6DACA,gEACA,gEACA,8DACA,gDACA,kDACA,0CACA,8CACA,6DAGAhwD,EAAAiwD,+BAAA,CACA,gEACA,gEACA,gEACA,gEACA,uDACA,4DACA,qDACA,6DACA,gEACA,4DACA,6DACA,4DACA,gDACA,kDACA,0CACA,+CASAjwD,EAAAkwD,mBAAA,CACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,iEAGAlwD,EAAAmwD,qBAAA,CACAf,eAAApvD,EAAAgwD,+BACAV,iBAAAtvD,EAAAkwD,mBACAp7C,sBAAA,QACAq6C,mBAAA,EACAD,YAAA,cAGAlvD,EAAAowD,sBAAA,CACAhB,eAAApvD,EAAAiwD,+BACAX,iBAAAtvD,EAAAkwD,mBACAp7C,sBAAA,QACAq6C,mBAAA,EACAD,YAAA,iCCvMA,IAAAlvD,KA+SElM,EAAQ,IA3SVu8D,qBAAA,CACA,gEACA,gEACA,gEACA,gEACA,8DACA,gEACA,wDACA,4DACA,gEACA,gEACA,+DACA,gEACA,0CACA,6CACA,gDACA,iDAGArwD,EAAAswD,uBAAA,CACA,gEACA,gEACA,gEACA,gEACA,8DACA,gEACA,wDACA,4DACA,gEACA,gEACA,gEACA,+DACA,gDACA,gDACA,0CACA,8CAGAtwD,EAAAuwD,sBAAA,CACA,gEACA,gEACA,gEACA,gEACA,8DACA,gEACA,wDACA,4DACA,gEACA,gEACA,gEACA,gDACA,gDACA,0CACA,6CACA,gEAGAvwD,EAAAwwD,2BAAA,CACA,gEACA,gEACA,gEACA,gEACA,8DACA,gEACA,wDACA,4DACA,gDACA,gDACA,gEACA,gEACA,gEACA,8DACA,0CACA,+CAGAxwD,EAAAywD,sBAAA,CACA,gEACA,gEACA,gEACA,gEACA,8DACA,gEACA,wDACA,4DACA,+DACA,4DACA,gDACA,yDACA,8DACA,kDACA,8CACA,qDAGAzwD,EAAA0wD,sBAAA,CACA,gEACA,gEACA,gEACA,gEACA,8DACA,gEACA,wDACA,4DACA,gDACA,gDACA,0CACA,gEACA,gEACA,gEACA,6CACA,gEASA1wD,EAAA2wD,iBAAA,CACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,iEAGA3wD,EAAA4wD,WAAA,CACAxB,eAAApvD,EAAAqwD,qBACAf,iBAAAtvD,EAAA2wD,iBACA77C,sBAAA,QACAq6C,mBAAA,EACAD,YAAA,UAGAlvD,EAAA6wD,qBAAA,CACAzB,eAAApvD,EAAAswD,uBACAhB,iBAAAtvD,EAAA2wD,iBACA77C,sBAAA,QACAq6C,mBAAA,EACAD,YAAA,gBAGAlvD,EAAA8wD,oBAAA,CACA1B,eAAApvD,EAAAuwD,sBACAjB,iBAAAtvD,EAAA2wD,iBACA77C,sBAAA,QACAq6C,mBAAA,EACAD,YAAA,cAGAlvD,EAAA6U,iBAAA,CACAu6C,eAAApvD,EAAAwwD,2BACAlB,iBAAAtvD,EAAA2wD,iBACA77C,sBAAA,QACAq6C,mBAAA,EACAD,YAAA,eAGAlvD,EAAA+wD,YAAA,CACA3B,eAAApvD,EAAA0wD,sBACApB,iBAAAtvD,EAAA2wD,iBACA77C,sBAAA,QACAq6C,mBAAA,EACAD,YAAA,UAGAlvD,EAAAgxD,YAAA,CACA5B,eAAApvD,EAAAywD,sBACAnB,iBAAAtvD,EAAA2wD,iBACA77C,sBAAA,QACAq6C,mBAAA,EACAD,YAAA,2BC5SA,IAAAlvD,KAoSElM,EAAQ,IAjMVm9D,aAAA,WACAjxD,EAAAopD,cAAAzwD,MAAAxB,MAGA,IAAA+5D,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IAaAxM,EAAA/tD,KAQAA,KAAAmJ,MAAA,WACAnJ,KAAAw6D,wBAAA,EACAx6D,KAAAy6D,uBAAA,EAIAz6D,KAAA06D,OAAA,IACA16D,KAAA26D,aAAA,KAIA36D,KAAA46D,gBAAA,SAAAC,EAAAC,GACA96D,KAAA+6D,gBAAAF,EACA76D,KAAAg7D,eAAAF,GAGA96D,KAAAi7D,QAAA,SAAA79D,GACA,WAAA28D,EAAAE,EAAAE,EAAAE,EAAAE,GAAAnqD,QAAAhT,IAGA4C,KAAAk7D,WAAA,SAAA99D,GAWA,WAAA48D,EAAAE,EAAAE,EAAAE,GAAAlqD,QAAAhT,IAGA4C,KAAAqJ,KAAA,SAAA+oD,GAyBA,GAAApyD,KAAAqyD,YAAAxpD,EAAAwkD,UAAAI,MAEA,OAAA5kD,EAAAwkD,UAAAI,MAGA2E,EAAApyD,KAAAuyD,kBAAAH,GAEA,QAAA+I,EAAAp+D,EAAA,EAA4BA,EAAAq1D,EAAA/wD,OAAiBtE,IAE7C,MADAo+D,EAAA/I,EAAAr1D,IAGA,KAAAiD,KAAA26D,eAEA36D,KAAAi7D,QAAAj7D,KAAA06D,QAEA16D,KAAAw6D,0BACqBx6D,KAAAk7D,WAAAl7D,KAAA06D,SAErB16D,KAAAy6D,0BAKA,KAAAz6D,KAAA26D,cAAA36D,KAAAi7D,QAAAj7D,KAAA06D,SAAA,KAAAS,GAEAn7D,KAAAy6D,yBAGAz6D,KAAA26D,aAAA36D,KAAA06D,OACA16D,KAAA06D,OAAAS,EAGA,OAAAtyD,EAAAwkD,UAAAE,WAGAvtD,KAAAmyD,eAAA,WAGA,IAAAiJ,EAAAp7D,KAAAw6D,wBAAAx6D,KAAAy6D,uBACA,GAAAW,GAlHA,EAmHA,MA5GA,eA8GA,GAAAA,IArHA,EAsHA,MAhHA,aAoHA,IAAAC,EAAAr7D,KAAA+6D,gBAAAzI,gBAAAtyD,KAAAg7D,eAAA1I,gBACA,OAAA+I,EAvHA,IAGA,eAuHAA,GA1HA,IAEA,aA6HAD,EAAA,EA7HA,aACA,gBAoIAp7D,KAAAqyD,SAAA,WAEA,OAAAryD,KAAA+6D,gBAAA1I,YAAAxpD,EAAAwkD,UAAAI,OACAztD,KAAAg7D,eAAA3I,YAAAxpD,EAAAwkD,UAAAI,MACA5kD,EAAAwkD,UAAAI,MAEA5kD,EAAAwkD,UAAAE,WAtIAQ,EAAAgN,gBAAA,KACAhN,EAAAiN,eAAA,KACAjN,EAAA5kD,SAyIAN,EAAAixD,aAAAn7D,UAAA,IAAAkK,EAAAopD,cAGAjiD,MAAArR,UAAAyR,UAEAJ,MAAArR,UAAAyR,QAAA,SAAAkrD,GAEA,IAAA3rD,EAAA3P,KAAAqB,SAAA,EAEAyX,EAAAxR,OAAAiC,UAAA,OAOA,KANAuP,IAAA,EACAwhB,KAAAihC,KAAAziD,GACAwhB,KAAAmrB,MAAA3sC,IACA,IACAA,GAAAnJ,GAEcmJ,EAAAnJ,EAAYmJ,IAE1B,GAAAA,KAAA9Y,MACAA,KAAA8Y,KAAAwiD,EACA,OAAAxiD,EAEA,4BChSA,IAAAjQ,KA6KElM,EAAQ,IApKV6+D,uBAAA,CACA,gEACA,gEACA,gEACA,gEACA,mDACA,2DACA,kDACA,uDACA,8DACA,yDACA,6DACA,4DACA,oDACA,8DACA,yCACA,mDASA3yD,EAAA4yD,gBAAA,CACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,iEAGA5yD,EAAA6yD,mBAAA,CACAzD,eAAApvD,EAAA2yD,uBACArD,iBAAAtvD,EAAA4yD,gBACA99C,sBAAA,QACAq6C,mBAAA,EACAD,YAAA,iCC1KA,IAAAlvD,KAuMElM,EAAQ,IA/LVg/D,+BAAA,CACA,gEACA,gEACA,gEACA,gEACA,iDACA,qDACA,0CACA,mDACA,gEACA,gEACA,+DACA,+DACA,2DACA,0DACA,mDACA,0DAGA9yD,EAAA+yD,+BAAA,CACA,gEACA,gEACA,gEACA,gEACA,iDACA,qDACA,0CACA,mDACA,gEACA,8DACA,+DACA,+DACA,2DACA,0DACA,mDACA,0DASA/yD,EAAAgzD,mBAAA,CACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,g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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 58);\n","module.exports = require(\"vscode\");","import * as fs from \"fs\";\nimport * as path from \"path\";\nimport {\n  commands,\n  Disposable,\n  LineChange,\n  Position,\n  Range,\n  SourceControlResourceState,\n  TextDocumentShowOptions,\n  TextEditor,\n  Uri,\n  ViewColumn,\n  window,\n  workspace,\n  WorkspaceEdit\n} from \"vscode\";\nimport { ICommandOptions, Status, SvnUriAction } from \"../common/types\";\nimport { inputIgnoreList } from \"../ignoreitems\";\nimport { applyLineChanges } from \"../lineChanges\";\nimport { Model } from \"../model\";\nimport { Repository } from \"../repository\";\nimport { Resource } from \"../resource\";\nimport IncomingChangeNode from \"../treeView/nodes/incomingChangeNode\";\nimport { fromSvnUri, toSvnUri } from \"../uri\";\nimport { hasSupportToRegisterDiffCommand } from \"../util\";\n\nexport abstract class Command implements Disposable {\n  private _disposable?: Disposable;\n\n  constructor(commandName: string, options: ICommandOptions = {}) {\n    if (options.repository) {\n      const command = this.createRepositoryCommand(this.execute);\n\n      this._disposable = commands.registerCommand(commandName, command);\n\n      return;\n    }\n\n    if (options.diff && hasSupportToRegisterDiffCommand()) {\n      this._disposable = commands.registerDiffInformationCommand(\n        commandName,\n        (...args: any[]) => this.execute(...args)\n      );\n      return;\n    }\n\n    if (!options.repository) {\n      this._disposable = commands.registerCommand(\n        commandName,\n        (...args: any[]) => this.execute(...args)\n      );\n\n      return;\n    }\n  }\n\n  public abstract execute(...args: any[]): any;\n\n  public dispose() {\n    this._disposable && this._disposable.dispose(); // tslint:disable-line\n  }\n\n  private createRepositoryCommand(method: Function): (...args: any[]) => any {\n    const result = async (...args: any[]) => {\n      const model = (await commands.executeCommand(\n        \"svn.getModel\",\n        \"\"\n      )) as Model;\n      let result;\n\n      const repository = model.getRepository(args[0]);\n      let repositoryPromise;\n\n      if (repository) {\n        repositoryPromise = Promise.resolve(repository);\n      } else if (model.repositories.length === 1) {\n        repositoryPromise = Promise.resolve(model.repositories[0]);\n      } else {\n        repositoryPromise = model.pickRepository();\n      }\n\n      result = repositoryPromise.then(repository => {\n        if (!repository) {\n          return Promise.resolve();\n        }\n\n        return Promise.resolve(method.apply(this, [repository, ...args]));\n      });\n\n      return result.catch(err => {\n        console.error(err);\n      });\n    };\n\n    return result;\n  }\n\n  protected async getResourceStates(\n    resourceStates: SourceControlResourceState[]\n  ): Promise<Resource[]> {\n    if (\n      resourceStates.length === 0 ||\n      !(resourceStates[0].resourceUri instanceof Uri)\n    ) {\n      const resource = await this.getSCMResource();\n\n      if (!resource) {\n        return [];\n      }\n\n      resourceStates = [resource];\n    }\n\n    return resourceStates.filter(s => s instanceof Resource) as Resource[];\n  }\n\n  protected runByRepository<T>(\n    resource: Uri,\n    fn: (repository: Repository, resource: Uri) => Promise<T>\n  ): Promise<T[]>;\n  protected runByRepository<T>(\n    resources: Uri[],\n    fn: (repository: Repository, resources: Uri[]) => Promise<T>\n  ): Promise<T[]>;\n  protected async runByRepository<T>(\n    arg: Uri | Uri[],\n    fn: (repository: Repository, resources: any) => Promise<T>\n  ): Promise<T[]> {\n    const resources = arg instanceof Uri ? [arg] : arg;\n    const isSingleResource = arg instanceof Uri;\n\n    const model = (await commands.executeCommand(\"svn.getModel\", \"\")) as Model;\n\n    const groups: Array<{ repository: Repository; resources: Uri[] }> = [];\n\n    for (const resource of resources) {\n      const repository = model.getRepository(resource);\n\n      if (!repository) {\n        console.warn(\"Could not find Svn repository for \", resource);\n        continue;\n      }\n\n      const tuple = groups.filter(p => p.repository === repository)[0];\n\n      if (tuple) {\n        tuple.resources.push(resource);\n      } else {\n        groups.push({ repository, resources: [resource] });\n      }\n    }\n\n    const promises = groups.map(({ repository, resources }) =>\n      fn(repository as Repository, isSingleResource ? resources[0] : resources)\n    );\n\n    return Promise.all(promises);\n  }\n\n  protected async getSCMResource(uri?: Uri): Promise<Resource | undefined> {\n    uri = uri\n      ? uri\n      : window.activeTextEditor && window.activeTextEditor.document.uri;\n\n    if (!uri) {\n      return undefined;\n    }\n\n    if (uri.scheme === \"svn\") {\n      const { fsPath } = fromSvnUri(uri);\n      uri = Uri.file(fsPath);\n    }\n\n    if (uri.scheme === \"file\") {\n      const model = (await commands.executeCommand(\n        \"svn.getModel\",\n        \"\"\n      )) as Model;\n      const repository = model.getRepository(uri);\n\n      if (!repository) {\n        return undefined;\n      }\n\n      return repository.getResourceFromFile(uri);\n    }\n  }\n\n  protected async _openResource(\n    resource: Resource,\n    against?: string,\n    preview?: boolean,\n    preserveFocus?: boolean,\n    preserveSelection?: boolean\n  ): Promise<void> {\n    let left = this.getLeftResource(resource, against);\n    let right = this.getRightResource(resource, against);\n    const title = this.getTitle(resource, against);\n\n    if (resource.remote && left) {\n      [left, right] = [right, left];\n    }\n\n    if (!right) {\n      // TODO\n      console.error(\"oh no\");\n      return;\n    }\n\n    if (\n      fs.existsSync(right.fsPath) &&\n      fs.statSync(right.fsPath).isDirectory()\n    ) {\n      return;\n    }\n\n    const opts: TextDocumentShowOptions = {\n      preserveFocus,\n      preview,\n      viewColumn: ViewColumn.Active\n    };\n\n    const activeTextEditor = window.activeTextEditor;\n\n    if (\n      preserveSelection &&\n      activeTextEditor &&\n      activeTextEditor.document.uri.toString() === right.toString()\n    ) {\n      opts.selection = activeTextEditor.selection;\n    }\n\n    if (!left) {\n      return commands.executeCommand<void>(\"vscode.open\", right, opts);\n    }\n\n    return commands.executeCommand<void>(\n      \"vscode.diff\",\n      left,\n      right,\n      title,\n      opts\n    );\n  }\n\n  protected getLeftResource(\n    resource: Resource,\n    against: string = \"\"\n  ): Uri | undefined {\n    if (resource.remote) {\n      if (resource.type !== Status.DELETED) {\n        return toSvnUri(resource.resourceUri, SvnUriAction.SHOW, {\n          ref: against\n        });\n      }\n      return;\n    }\n\n    if (resource.type === Status.ADDED && resource.renameResourceUri) {\n      return toSvnUri(resource.renameResourceUri, SvnUriAction.SHOW, {\n        ref: against\n      });\n    }\n\n    // Show file if has conflicts marks\n    if (\n      resource.type === Status.CONFLICTED &&\n      fs.existsSync(resource.resourceUri.fsPath)\n    ) {\n      const text = fs.readFileSync(resource.resourceUri.fsPath, {\n        encoding: \"utf8\"\n      });\n\n      // Check for lines begin with \"<<<<<<\", \"=======\", \">>>>>>>\"\n      if (/^<{7}[^]+^={7}[^]+^>{7}/m.test(text)) {\n        return undefined;\n      }\n    }\n\n    switch (resource.type) {\n      case Status.CONFLICTED:\n      case Status.MODIFIED:\n      case Status.REPLACED:\n        return toSvnUri(resource.resourceUri, SvnUriAction.SHOW, {\n          ref: against\n        });\n    }\n  }\n\n  protected getRightResource(\n    resource: Resource,\n    against: string = \"\"\n  ): Uri | undefined {\n    if (resource.remote) {\n      if (resource.type !== Status.ADDED) {\n        return resource.resourceUri;\n      }\n      return;\n    }\n    switch (resource.type) {\n      case Status.ADDED:\n      case Status.CONFLICTED:\n      case Status.IGNORED:\n      case Status.MODIFIED:\n      case Status.UNVERSIONED:\n      case Status.REPLACED:\n        return resource.resourceUri;\n      case Status.DELETED:\n      case Status.MISSING:\n        return toSvnUri(resource.resourceUri, SvnUriAction.SHOW, {\n          ref: against\n        });\n    }\n  }\n\n  private getTitle(resource: Resource, against?: string): string {\n    if (resource.type === Status.ADDED && resource.renameResourceUri) {\n      const basename = path.basename(resource.renameResourceUri.fsPath);\n\n      const newname = path.relative(\n        path.dirname(resource.renameResourceUri.fsPath),\n        resource.resourceUri.fsPath\n      );\n      if (against) {\n        return `${basename} -> ${newname} (${against})`;\n      }\n      return `${basename} -> ${newname}`;\n    }\n    const basename = path.basename(resource.resourceUri.fsPath);\n\n    if (against) {\n      return `${basename} (${against})`;\n    }\n\n    return \"\";\n  }\n\n  protected async openChange(\n    arg?: Resource | Uri | IncomingChangeNode,\n    against?: string,\n    resourceStates?: SourceControlResourceState[]\n  ): Promise<void> {\n    const preserveFocus = arg instanceof Resource;\n    const preserveSelection = arg instanceof Uri || !arg;\n    let resources: Resource[] | undefined;\n\n    if (arg instanceof Uri) {\n      const resource = await this.getSCMResource(arg);\n      if (resource !== undefined) {\n        resources = [resource];\n      }\n    } else if (arg instanceof IncomingChangeNode) {\n      const resource = new Resource(\n        arg.uri,\n        arg.type,\n        undefined,\n        arg.props,\n        true\n      );\n\n      resources = [resource];\n    } else {\n      let resource: Resource | undefined;\n\n      if (arg instanceof Resource) {\n        resource = arg;\n      } else {\n        resource = await this.getSCMResource();\n      }\n\n      if (resource) {\n        resources = [...(resourceStates as Resource[]), resource];\n      }\n    }\n\n    if (!resources) {\n      return;\n    }\n\n    const preview = resources.length === 1 ? undefined : false;\n    for (const resource of resources) {\n      await this._openResource(\n        resource,\n        against,\n        preview,\n        preserveFocus,\n        preserveSelection\n      );\n    }\n  }\n\n  protected async showDiffPath(repository: Repository, content: string) {\n    try {\n      const tempFile = path.join(repository.root, \".svn\", \"tmp\", \"svn.patch\");\n\n      if (fs.existsSync(tempFile)) {\n        fs.unlinkSync(tempFile);\n      }\n\n      const uri = Uri.file(tempFile).with({\n        scheme: \"untitled\"\n      });\n\n      const document = await workspace.openTextDocument(uri);\n      const textEditor = await window.showTextDocument(document);\n\n      await textEditor.edit(e => {\n        // if is opened, clear content\n        e.delete(\n          new Range(\n            new Position(0, 0),\n            new Position(Number.MAX_SAFE_INTEGER, 0)\n          )\n        );\n        e.insert(new Position(0, 0), content);\n      });\n    } catch (error) {\n      console.error(error);\n      window.showErrorMessage(\"Unable to patch\");\n    }\n  }\n\n  protected async _revertChanges(\n    textEditor: TextEditor,\n    changes: LineChange[]\n  ): Promise<void> {\n    const modifiedDocument = textEditor.document;\n    const modifiedUri = modifiedDocument.uri;\n\n    if (modifiedUri.scheme !== \"file\") {\n      return;\n    }\n\n    const originalUri = toSvnUri(modifiedUri, SvnUriAction.SHOW, {\n      ref: \"BASE\"\n    });\n    const originalDocument = await workspace.openTextDocument(originalUri);\n\n    const result = applyLineChanges(\n      originalDocument,\n      modifiedDocument,\n      changes\n    );\n    const edit = new WorkspaceEdit();\n    edit.replace(\n      modifiedUri,\n      new Range(\n        new Position(0, 0),\n        modifiedDocument.lineAt(modifiedDocument.lineCount - 1).range.end\n      ),\n      result\n    );\n    workspace.applyEdit(edit);\n    await modifiedDocument.save();\n  }\n\n  protected async addToIgnore(uris: Uri[]): Promise<void> {\n    await this.runByRepository(uris, async (repository, resources) => {\n      if (!repository) {\n        return;\n      }\n\n      try {\n        const ignored = await inputIgnoreList(repository, resources);\n\n        if (ignored) {\n          window.showInformationMessage(`File(s) is now being ignored`);\n        }\n      } catch (error) {\n        console.log(error);\n        window.showErrorMessage(\"Unable to set property ignore\");\n      }\n    });\n  }\n}\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar jschardet = exports;\n\nrequire('./constants');\nrequire('./codingstatemachine');\nrequire('./escsm');\nrequire('./mbcssm');\nrequire('./charsetprober');\nrequire('./mbcharsetprober');\nrequire('./jisfreq');\nrequire('./gb2312freq');\nrequire('./euckrfreq');\nrequire('./big5freq');\nrequire('./euctwfreq');\nrequire('./chardistribution');\nrequire('./jpcntx');\nrequire('./sjisprober');\nrequire('./utf8prober');\nrequire('./charsetgroupprober');\nrequire('./eucjpprober');\nrequire('./gb2312prober');\nrequire('./euckrprober');\nrequire('./big5prober');\nrequire('./euctwprober');\nrequire('./mbcsgroupprober');\nrequire('./sbcharsetprober');\nrequire('./langgreekmodel');\nrequire('./langthaimodel');\nrequire('./langbulgarianmodel');\nrequire('./langcyrillicmodel');\nrequire('./hebrewprober');\nrequire('./langhebrewmodel');\nrequire('./langhungarianmodel');\nrequire('./sbcsgroupprober');\nrequire('./latin1prober');\nrequire('./escprober');\nrequire('./universaldetector');\n\njschardet.VERSION = \"1.4.1\";\njschardet.detect = function(buffer) {\n    var u = new jschardet.UniversalDetector();\n    u.reset();\n    if( typeof Buffer == 'function' && buffer instanceof Buffer ) {\n        u.feed(buffer.toString('binary'));\n    } else {\n        u.feed(buffer);\n    }\n    u.close();\n    return u.result;\n}\njschardet.log = function() {\n  console.log.apply(console, arguments);\n}\n","module.exports = require(\"path\");","import * as fs from \"fs\";\nimport * as path from \"path\";\nimport * as util from \"util\";\nimport { commands, Event, window } from \"vscode\";\nimport { Operation } from \"./common/types\";\n\nexport interface IDisposable {\n  dispose(): void;\n}\n\nexport function done<T>(promise: Promise<T>): Promise<void> {\n  return promise.then<void>(() => void 0);\n}\nexport function anyEvent<T>(...events: Array<Event<T>>): Event<T> {\n  return (listener: any, thisArgs = null, disposables?: any) => {\n    const result = combinedDisposable(\n      events.map(event => event((i: any) => listener.call(thisArgs, i)))\n    );\n\n    if (disposables) {\n      disposables.push(result);\n    }\n\n    return result;\n  };\n}\n\nexport function filterEvent<T>(\n  event: Event<T>,\n  filter: (e: T) => boolean\n): Event<T> {\n  return (listener: any, thisArgs = null, disposables?: any) =>\n    event(\n      (e: any) => filter(e) && listener.call(thisArgs, e),\n      null,\n      disposables\n    );\n}\n\nexport function dispose(disposables: any[]): any[] {\n  disposables.forEach(disposable => disposable.dispose());\n\n  return [];\n}\n\nexport function combinedDisposable(disposables: IDisposable[]): IDisposable {\n  return toDisposable(() => dispose(disposables));\n}\n\nexport function toDisposable(dispose: () => void): IDisposable {\n  return { dispose };\n}\n\nexport function onceEvent<T>(event: Event<T>): Event<T> {\n  return (listener: any, thisArgs = null, disposables?: any) => {\n    const result = event(\n      (e: any) => {\n        result.dispose();\n        return listener.call(thisArgs, e);\n      },\n      null,\n      disposables\n    );\n\n    return result;\n  };\n}\n\nexport function eventToPromise<T>(event: Event<T>): Promise<T> {\n  return new Promise<T>(c => onceEvent(event)(c));\n}\n\nconst regexNormalizePath = new RegExp(path.sep === \"/\" ? \"\\\\\\\\\" : \"/\", \"g\");\nconst regexNormalizeWindows = new RegExp(\"^\\\\\\\\(\\\\w:)\", \"g\");\nexport function fixPathSeparator(file: string) {\n  file = file.replace(regexNormalizePath, path.sep);\n  file = file.replace(regexNormalizeWindows, \"$1\"); // \"\\t:\\test\" => \"t:\\test\"\n  return file;\n}\n\nexport function normalizePath(file: string) {\n  file = fixPathSeparator(file);\n\n  // IF Windows\n  if (path.sep === \"\\\\\") {\n    file = file.toLowerCase();\n  }\n\n  return file;\n}\n\nexport function isDescendant(parent: string, descendant: string): boolean {\n  parent = parent.replace(/[\\\\\\/]/g, path.sep);\n  descendant = descendant.replace(/[\\\\\\/]/g, path.sep);\n\n  // IF Windows\n  if (path.sep === \"\\\\\") {\n    parent = parent.replace(/^\\\\/, \"\").toLowerCase();\n    descendant = descendant.replace(/^\\\\/, \"\").toLowerCase();\n  }\n\n  if (parent === descendant) {\n    return true;\n  }\n\n  if (parent.charAt(parent.length - 1) !== path.sep) {\n    parent += path.sep;\n  }\n\n  return descendant.startsWith(parent);\n}\n\nexport function camelcase(name: string) {\n  return name\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (letter, index) => {\n      return index === 0 ? letter.toLowerCase() : letter.toUpperCase();\n    })\n    .replace(/[\\s\\-]+/g, \"\");\n}\n\n/* tslint:disable:no-empty */\n\nlet hasDecorationProvider = false;\nexport function hasSupportToDecorationProvider() {\n  return hasDecorationProvider;\n}\n\ntry {\n  const fake = {\n    onDidChangeDecorations: (value: any): any => toDisposable(() => {}),\n    provideDecoration: (uri: any, token: any): any => {}\n  };\n  const disposable = window.registerDecorationProvider(fake);\n  hasDecorationProvider = true;\n  // disposable.dispose(); // Not dispose to prevent: Cannot read property 'provideDecoration' of undefined\n} catch (error) {}\n\nlet hasRegisterDiffCommand = false;\nexport function hasSupportToRegisterDiffCommand() {\n  return hasRegisterDiffCommand;\n}\n\ntry {\n  const disposable = commands.registerDiffInformationCommand(\n    \"svn.testDiff\",\n    () => {}\n  );\n  hasRegisterDiffCommand = true;\n  disposable.dispose();\n} catch (error) {}\n\nexport function timeout(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function isReadOnly(operation: Operation): boolean {\n  switch (operation) {\n    case Operation.CurrentBranch:\n    case Operation.Log:\n    case Operation.Show:\n    case Operation.Info:\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Remove directory recursively\n * @param {string} dirPath\n * @see https://stackoverflow.com/a/42505874/3027390\n */\nexport function deleteDirectory(dirPath: string) {\n  if (fs.existsSync(dirPath) && fs.lstatSync(dirPath).isDirectory()) {\n    fs.readdirSync(dirPath).forEach((entry: string) => {\n      const entryPath = path.join(dirPath, entry);\n      if (fs.lstatSync(entryPath).isDirectory()) {\n        deleteDirectory(entryPath);\n      } else {\n        fs.unlinkSync(entryPath);\n      }\n    });\n    fs.rmdirSync(dirPath);\n  }\n}\n\nexport function unwrap<T>(maybeT?: T): T {\n  if (maybeT === undefined) {\n    throw new Error(\"undefined unwrap\");\n  }\n  return maybeT;\n}\n","\"use strict\";\n\nimport {\n  ConfigurationChangeEvent,\n  Event,\n  EventEmitter,\n  Uri,\n  workspace,\n  WorkspaceConfiguration\n} from \"vscode\";\n\nconst SVN = \"svn\";\n\nclass Configuration {\n  private configuration: WorkspaceConfiguration;\n  private _onDidChange = new EventEmitter<ConfigurationChangeEvent>();\n\n  get onDidChange(): Event<ConfigurationChangeEvent> {\n    return this._onDidChange.event;\n  }\n\n  constructor() {\n    this.configuration = workspace.getConfiguration(SVN);\n    workspace.onDidChangeConfiguration(this.onConfigurationChanged, this);\n  }\n\n  private onConfigurationChanged(event: ConfigurationChangeEvent) {\n    if (!event.affectsConfiguration(SVN)) {\n      return;\n    }\n\n    this.configuration = workspace.getConfiguration(SVN);\n\n    this._onDidChange.fire(event);\n  }\n\n  public get<T>(section: string, defaultValue?: T): T {\n    return this.configuration.get<T>(section, defaultValue!);\n  }\n\n  public update(section: string, value: any): Thenable<void> {\n    return this.configuration.update(section, value);\n  }\n\n  public inspect(section: string) {\n    return this.configuration.inspect(section);\n  }\n}\n\nexport const configuration = new Configuration();\n","import { SpawnOptions } from \"child_process\";\nimport { Disposable, SourceControlResourceGroup, Uri } from \"vscode\";\nimport { Repository } from \"../repository\";\nimport { Resource } from \"../resource\";\n\n/** Marker for constructors returning Promise<this> */\nexport enum ConstructorPolicy {\n  Async,\n  LateInit\n}\n\nexport interface IBranchItem {\n  name: string;\n  path: string;\n  isNew?: boolean;\n}\n\nexport interface ICommandOptions {\n  repository?: boolean;\n  diff?: boolean;\n}\n\nexport interface ICommand {\n  commandId: string;\n  key: string;\n  method: Function;\n  options: ICommandOptions;\n}\n\nexport interface IConflictOption {\n  label: string;\n  description: string;\n}\n\nexport interface ISvnInfo {\n  kind: string;\n  path: string;\n  revision: string;\n  url: string;\n  relativeUrl: string;\n  repository: {\n    root: string;\n    uuid: string;\n  };\n  wcInfo?: {\n    wcrootAbspath: string;\n    uuid: string;\n  };\n  commit: {\n    revision: string;\n    author: string;\n    date: string;\n  };\n}\n\nexport interface ISvnListItem {\n  kind: SvnKindType;\n  name: string;\n  size: string;\n  commit: {\n    revision: string;\n    author: string;\n    date: string;\n  };\n}\n\nexport enum SvnKindType {\n  FILE = \"file\",\n  DIR = \"dir\"\n}\n\nexport interface IModelChangeEvent {\n  repository: Repository;\n  uri: Uri;\n}\n\nexport interface IOriginalResourceChangeEvent {\n  repository: Repository;\n  uri: Uri;\n}\n\nexport interface IOpenRepository extends Disposable {\n  repository: Repository;\n}\n\nexport enum RepositoryState {\n  Idle,\n  Disposed\n}\n\nexport enum Operation {\n  Add = \"Add\",\n  AddChangelist = \"AddChangelist\",\n  CleanUp = \"CleanUp\",\n  Commit = \"Commit\",\n  CurrentBranch = \"CurrentBranch\",\n  Info = \"Info\",\n  Ignore = \"Ignore\",\n  Log = \"Log\",\n  NewBranch = \"NewBranch\",\n  Patch = \"Patch\",\n  Remove = \"Remove\",\n  RemoveChangelist = \"RemoveChangelist\",\n  Rename = \"Rename\",\n  Resolve = \"Resolve\",\n  Resolved = \"Resolved\",\n  Revert = \"Revert\",\n  Show = \"Show\",\n  Status = \"Status\",\n  StatusRemote = \"StatusRemote\",\n  SwitchBranch = \"SwitchBranch\",\n  Update = \"Update\"\n}\n\nexport interface ISvnResourceGroup extends SourceControlResourceGroup {\n  resourceStates: Resource[];\n  repository?: Repository;\n}\n\nexport interface IWcStatus {\n  locked: boolean;\n  switched: boolean;\n}\n\nexport interface IFileStatus {\n  status: string;\n  props: string;\n  path: string;\n  changelist?: string;\n  rename?: string;\n  wcStatus: IWcStatus;\n  commit?: {\n    revision: string;\n    author: string;\n    date: string;\n  };\n  repositoryUuid?: string;\n  reposStatus?: {\n    props: string;\n    item: string;\n  };\n  [key: number]: IFileStatus;\n}\n\nexport interface IEntry {\n  path: string;\n  wcStatus: {\n    item: string;\n    revision: string;\n    props: string;\n    movedTo?: string;\n    movedFrom?: string;\n    wcLocked?: string;\n    switched?: string;\n    commit: {\n      revision: string;\n      author: string;\n      date: string;\n    };\n  };\n  reposStatus?: {\n    props: string;\n    item: string;\n  };\n}\n\nexport enum Status {\n  ADDED = \"added\",\n  CONFLICTED = \"conflicted\",\n  DELETED = \"deleted\",\n  EXTERNAL = \"external\",\n  IGNORED = \"ignored\",\n  INCOMPLETE = \"incomplete\",\n  MERGED = \"merged\",\n  MISSING = \"missing\",\n  MODIFIED = \"modified\",\n  NONE = \"none\",\n  NORMAL = \"normal\",\n  OBSTRUCTED = \"obstructed\",\n  REPLACED = \"replaced\",\n  UNVERSIONED = \"unversioned\"\n}\n\nexport enum PropStatus {\n  CONFLICTED = \"conflicted\",\n  MODIFIED = \"modified\",\n  NONE = \"none\",\n  NORMAL = \"normal\"\n}\n\nexport interface ICpOptions extends SpawnOptions {\n  cwd?: string;\n  encoding?: string;\n  log?: boolean;\n  username?: string;\n  password?: string;\n}\n\nexport interface ISvnErrorData {\n  error?: Error;\n  message?: string;\n  stdout?: string;\n  stderr?: string;\n  stderrFormated?: string;\n  exitCode?: number;\n  svnErrorCode?: string;\n  svnCommand?: string;\n}\n\nexport interface ISvnOptions {\n  svnPath: string;\n  version: string;\n}\n\nexport interface IExecutionResult {\n  exitCode: number;\n  stdout: string;\n  stderr: string;\n}\n\nexport interface ICacheRow {\n  uri: Uri;\n  timestamp: number;\n}\n\nexport interface ICache {\n  [uri: string]: ICacheRow;\n}\n\nexport interface ISvn {\n  path: string;\n  version: string;\n}\n\nexport enum SvnUriAction {\n  LOG = \"LOG\",\n  PATCH = \"PATCH\",\n  SHOW = \"SHOW\"\n}\n\nexport interface ISvnUriExtraParams {\n  ref?: string;\n  limit?: string;\n  [key: string]: any;\n}\n\nexport interface ISvnUriParams {\n  action: SvnUriAction;\n  fsPath: string;\n  extra: ISvnUriExtraParams;\n}\n\nexport interface IDisposable {\n  dispose(): void;\n}\n\nexport interface IOperations {\n  isIdle(): boolean;\n  isRunning(operation: Operation): boolean;\n}\n\nexport interface IAuth {\n  username: string;\n  password: string;\n}\n\nexport interface ISvnLogEntryPath {\n  /** full path from repo root */\n  _: string;\n  /** A | D | M | R */\n  action: string;\n  /** \"file\" | \"dir\" e.g. */\n  kind: string;\n}\n\n/** produced by svn log */\nexport interface ISvnLogEntry {\n  revision: string;\n  author: string;\n  date: string;\n  msg: string;\n  paths: ISvnLogEntryPath[];\n}\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLElement, XMLNode, XMLProcessingInstruction, XMLRaw, XMLText, isEmpty, isFunction, isObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isEmpty = ref.isEmpty;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.children = [];\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n      }\n    }\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref1, val;\n      lastChild = null;\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if ((isObject(val)) && (isEmpty(val))) {\n            val = null;\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            lastChild = this.element(key);\n            lastChild.element(val);\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name);\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref1;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element\");\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref1;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      attributes || (attributes = {});\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children[0] instanceof XMLDeclaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.doctype = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref1, ref2;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref1 = doc.children;\n      for (i = j = 0, len = ref1.length; j < len; i = ++j) {\n        child = ref1[i];\n        if (child instanceof XMLDocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref2 = doc.children;\n      for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {\n        child = ref2[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node\");\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node\");\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      return this.doctype(pubID, sysID);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n","module.exports = require(\"fs\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\"use strict\";\n\nimport { done } from \"./util\";\n\nfunction decorate(\n  decorator: (fn: Function, key: string) => Function\n): Function {\n  return (target: any, key: string, descriptor: any) => {\n    let fnKey: string | null = null;\n    let fn: Function | null = null;\n\n    if (typeof descriptor.value === \"function\") {\n      fnKey = \"value\";\n      fn = descriptor.value;\n    } else if (typeof descriptor.get === \"function\") {\n      fnKey = \"get\";\n      fn = descriptor.get;\n    }\n\n    if (!fn || !fnKey) {\n      throw new Error(\"not supported\");\n    }\n\n    descriptor[fnKey] = decorator(fn, key);\n  };\n}\n\nfunction _memoize(fn: Function, key: string): Function {\n  const memoizeKey = `$memoize$${key}`;\n\n  return function(...args: any[]) {\n    if (!this.hasOwnProperty(memoizeKey)) {\n      Object.defineProperty(this, memoizeKey, {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: fn.apply(this, args)\n      });\n    }\n\n    return this[memoizeKey];\n  };\n}\n\nexport const memoize = decorate(_memoize);\n\nfunction _throttle<T>(fn: Function, key: string): Function {\n  const currentKey = `$throttle$current$${key}`;\n  const nextKey = `$throttle$next$${key}`;\n\n  const trigger = function(...args: any[]) {\n    if (this[nextKey]) {\n      return this[nextKey];\n    }\n\n    if (this[currentKey]) {\n      this[nextKey] = done(this[currentKey]).then(() => {\n        this[nextKey] = undefined;\n        return trigger.apply(this, args);\n      });\n\n      return this[nextKey];\n    }\n\n    this[currentKey] = fn.apply(this, args) as Promise<T>;\n\n    const clear = () => (this[currentKey] = undefined);\n    done(this[currentKey]).then(clear, clear);\n\n    return this[currentKey];\n  };\n\n  return trigger;\n}\n\nexport const throttle = decorate(_throttle);\n\nfunction _sequentialize<T>(fn: Function, key: string): Function {\n  const currentKey = `__$sequence$${key}`;\n\n  return function(...args: any[]) {\n    const currentPromise =\n      (this[currentKey] as Promise<any>) || Promise.resolve(null);\n    const run = async () => fn.apply(this, args);\n    this[currentKey] = currentPromise.then(run, run);\n    return this[currentKey];\n  };\n}\n\nexport const sequentialize = decorate(_sequentialize);\n\nexport function debounce(delay: number): Function {\n  return decorate((fn, key) => {\n    const timerKey = `$debounce$${key}`;\n\n    return function(...args: any[]) {\n      clearTimeout(this[timerKey]);\n      this[timerKey] = setTimeout(() => fn.apply(this, args), delay);\n    };\n  });\n}\n","import * as path from \"path\";\nimport {\n  Command,\n  DecorationData,\n  SourceControlResourceDecorations,\n  SourceControlResourceState,\n  ThemeColor,\n  Uri\n} from \"vscode\";\nimport { PropStatus, Status } from \"./common/types\";\nimport { memoize } from \"./decorators\";\nimport { configuration } from \"./helpers/configuration\";\nimport { hasSupportToDecorationProvider } from \"./util\";\n\nconst iconsRootPath = path.join(__dirname, \"..\", \"icons\");\n\nfunction getIconUri(iconName: string, theme: string): Uri {\n  return Uri.file(path.join(iconsRootPath, theme, `${iconName}.svg`));\n}\n\nexport class Resource implements SourceControlResourceState {\n  private static icons: any = {\n    light: {\n      Added: getIconUri(\"status-added\", \"light\"),\n      Conflicted: getIconUri(\"status-conflicted\", \"light\"),\n      Deleted: getIconUri(\"status-deleted\", \"light\"),\n      Ignored: getIconUri(\"status-ignored\", \"light\"),\n      Missing: getIconUri(\"status-missing\", \"light\"),\n      Modified: getIconUri(\"status-modified\", \"light\"),\n      Renamed: getIconUri(\"status-renamed\", \"light\"),\n      Replaced: getIconUri(\"status-replaced\", \"light\"),\n      Unversioned: getIconUri(\"status-unversioned\", \"light\")\n    },\n    dark: {\n      Added: getIconUri(\"status-added\", \"dark\"),\n      Conflicted: getIconUri(\"status-conflicted\", \"dark\"),\n      Deleted: getIconUri(\"status-deleted\", \"dark\"),\n      Ignored: getIconUri(\"status-ignored\", \"dark\"),\n      Missing: getIconUri(\"status-missing\", \"dark\"),\n      Modified: getIconUri(\"status-modified\", \"dark\"),\n      Renamed: getIconUri(\"status-renamed\", \"dark\"),\n      Replaced: getIconUri(\"status-replaced\", \"dark\"),\n      Unversioned: getIconUri(\"status-unversioned\", \"dark\")\n    }\n  };\n\n  constructor(\n    private _resourceUri: Uri,\n    private _type: string,\n    private _renameResourceUri?: Uri,\n    private _props?: string,\n    private _remote: boolean = false\n  ) {}\n\n  @memoize\n  get resourceUri(): Uri {\n    return this._resourceUri;\n  }\n\n  @memoize\n  get type(): string {\n    return this._type;\n  }\n  get renameResourceUri(): Uri | undefined {\n    return this._renameResourceUri;\n  }\n  get props(): string | undefined {\n    return this._props;\n  }\n\n  get remote(): boolean {\n    return this._remote;\n  }\n\n  get decorations(): SourceControlResourceDecorations {\n    // TODO@joh, still requires restart/redraw in the SCM viewlet\n    const decorations =\n      hasSupportToDecorationProvider() &&\n      configuration.get<boolean>(\"decorations.enabled\");\n    const light = !decorations\n      ? { iconPath: this.getIconPath(\"light\") }\n      : undefined;\n    const dark = !decorations\n      ? { iconPath: this.getIconPath(\"dark\") }\n      : undefined;\n    const tooltip = this.tooltip;\n    const strikeThrough = this.strikeThrough;\n    const faded = this.faded;\n    const letter = this.letter;\n    const color = this.color;\n\n    return {\n      strikeThrough,\n      faded,\n      tooltip,\n      light,\n      dark,\n      letter,\n      color,\n      source: \"svn.resource\"\n    };\n  }\n\n  @memoize\n  get command(): Command {\n    const diffHead = configuration.get<boolean>(\"diff.withHead\", true);\n    const changesLeftClick = configuration.get<string>(\n      \"sourceControl.changesLeftClick\",\n      \"open diff\"\n    );\n\n    if (!this.remote && changesLeftClick === \"open\") {\n      return {\n        command: \"svn.openFile\",\n        title: \"Open file\",\n        arguments: [this]\n      };\n    }\n\n    if (this.remote || diffHead) {\n      return {\n        command: \"svn.openResourceHead\",\n        title: \"Open Diff With Head\",\n        arguments: [this]\n      };\n    }\n\n    return {\n      command: \"svn.openResourceBase\",\n      title: \"Open Diff With Base\",\n      arguments: [this]\n    };\n  }\n\n  private getIconPath(theme: string): Uri | undefined {\n    if (this.type === Status.ADDED && this.renameResourceUri) {\n      return Resource.icons[theme].Renamed;\n    }\n\n    const type = this.type.charAt(0).toUpperCase() + this.type.slice(1);\n\n    if (typeof Resource.icons[theme][type] !== \"undefined\") {\n      return Resource.icons[theme][type];\n    }\n\n    return void 0;\n  }\n\n  private get tooltip(): string {\n    if (this.type === Status.ADDED && this.renameResourceUri) {\n      return \"Renamed from \" + this.renameResourceUri.fsPath;\n    }\n\n    if (\n      this.type === Status.NORMAL &&\n      this.props &&\n      this.props !== PropStatus.NONE\n    ) {\n      return (\n        \"Property \" + this.props.charAt(0).toUpperCase() + this.props.slice(1)\n      );\n    }\n\n    return this.type.charAt(0).toUpperCase() + this.type.slice(1);\n  }\n\n  private get strikeThrough(): boolean {\n    if (this.type === Status.DELETED) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private get faded(): boolean {\n    return false;\n  }\n\n  get letter(): string | undefined {\n    switch (this.type) {\n      case Status.ADDED:\n        if (this.renameResourceUri) {\n          return \"R\";\n        }\n        return \"A\";\n      case Status.CONFLICTED:\n        return \"C\";\n      case Status.DELETED:\n        return \"D\";\n      case Status.EXTERNAL:\n        return \"E\";\n      case Status.IGNORED:\n        return \"I\";\n      case Status.MODIFIED:\n        return \"M\";\n      case Status.REPLACED:\n        return \"R\";\n      case Status.UNVERSIONED:\n        return \"U\";\n      case Status.MISSING:\n        return \"!\";\n      default:\n        return undefined;\n    }\n  }\n\n  get color(): ThemeColor | undefined {\n    switch (this.type) {\n      case Status.MODIFIED:\n      case Status.REPLACED:\n        return new ThemeColor(\"gitDecoration.modifiedResourceForeground\");\n      case Status.DELETED:\n      case Status.MISSING:\n        return new ThemeColor(\"gitDecoration.deletedResourceForeground\");\n      case Status.ADDED:\n      case Status.UNVERSIONED:\n        return new ThemeColor(\"gitDecoration.untrackedResourceForeground\");\n      case Status.EXTERNAL:\n      case Status.IGNORED:\n        return new ThemeColor(\"gitDecoration.ignoredResourceForeground\");\n      case Status.CONFLICTED:\n        return new ThemeColor(\"gitDecoration.conflictingResourceForeground\");\n      default:\n        return undefined;\n    }\n  }\n\n  get priority(): number {\n    switch (this.type) {\n      case Status.MODIFIED:\n        return 2;\n      case Status.IGNORED:\n        return 3;\n      case Status.DELETED:\n      case Status.ADDED:\n      case Status.REPLACED:\n      case Status.MISSING:\n        return 4;\n      default:\n        return 1;\n    }\n  }\n\n  get resourceDecoration(): DecorationData | undefined {\n    const title = this.tooltip;\n    const abbreviation = this.letter;\n    const color = this.color;\n    const priority = this.priority;\n    const decoration: DecorationData = {\n      bubble: true,\n      source: \"svn.resource\",\n      title,\n      abbreviation,\n      color,\n      priority\n    };\n\n    /**\n     * @note Set letter in explorer for VSCode >= 1.27\n     * In VSCode 1.27 has renamed the abbreviation to letter\n     */\n    (decoration as any).letter = abbreviation;\n\n    return decoration;\n  }\n}\n","import * as path from \"path\";\nimport { Uri } from \"vscode\";\nimport {\n  ISvnUriExtraParams,\n  ISvnUriParams,\n  SvnUriAction\n} from \"./common/types\";\n\nexport function fromSvnUri(uri: Uri): ISvnUriParams {\n  return JSON.parse(uri.query);\n}\n\nexport function toSvnUri(\n  uri: Uri,\n  action: SvnUriAction,\n  extra: ISvnUriExtraParams = {},\n  replaceFileExtension = false\n): Uri {\n  const params: ISvnUriParams = {\n    action,\n    fsPath: uri.fsPath,\n    extra\n  };\n\n  return uri.with({\n    scheme: \"svn\",\n    path: replaceFileExtension ? uri.path + \".svn\" : uri.path,\n    query: JSON.stringify(params)\n  });\n}\n\nexport function getIconUri(iconName: string, theme: string): Uri {\n  const iconsRootPath = path.join(__dirname, \"..\", \"icons\");\n  return Uri.file(path.join(iconsRootPath, theme, `${iconName}.svg`));\n}\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var assign, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function() {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n}).call(this);\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","import * as fs from \"fs\";\nimport * as path from \"path\";\nimport { TreeItem, TreeItemCollapsibleState, Uri } from \"vscode\";\nimport { Repository } from \"../../repository\";\nimport { Resource } from \"../../resource\";\nimport { getIconUri } from \"../../uri\";\nimport BaseNode from \"./baseNode\";\n\nexport default class IncomingChangeNode implements BaseNode {\n  constructor(\n    public uri: Uri,\n    public type: string,\n    public repository: Repository\n  ) {}\n\n  get props(): undefined {\n    return undefined;\n  }\n\n  get label() {\n    return path.relative(this.repository.workspaceRoot, this.uri.fsPath);\n  }\n\n  get contextValue() {\n    return `incomingChange:${this.type}`;\n  }\n\n  public getTreeItem(): TreeItem {\n    const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n    item.iconPath = {\n      dark: getIconUri(`status-${this.type}`, \"dark\"),\n      light: getIconUri(`status-${this.type}`, \"light\")\n    };\n    item.contextValue = this.contextValue;\n    item.command = this.getCommand();\n\n    return item;\n  }\n\n  public getChildren(): Promise<BaseNode[]> {\n    return Promise.resolve([]);\n  }\n\n  public getCommand() {\n    switch (this.type) {\n      case \"modified\":\n        return {\n          command: \"svn.openChangeHead\",\n          title: \"Open Changes with HEAD\",\n          arguments: [this.uri]\n        };\n      case \"deleted\":\n        return {\n          command: \"svn.openFile\",\n          title: \"Open File\",\n          arguments: [this.uri]\n        };\n      case \"added\":\n        return {\n          command: \"svn.openHEADFile\",\n          title: \"Open File (HEAD)\",\n          arguments: [\n            new Resource(this.uri, this.type, undefined, \"none\", true)\n          ]\n        };\n    }\n  }\n}\n","/**\n * Load local first, after load the from VSCode modules\n * == 0 - is svn-scm/out/node_modules\n * == 1 - is svn-scm/node_modules\n * == 2 - is vscode folder\n * >= 3 - parent folders of svn-scm\n */\nimport * as vscode from \"vscode\";\nmodule.paths.splice(2, 0, `${vscode.env.appRoot}/node_modules.asar`);\nmodule.paths.splice(2, 0, `${vscode.env.appRoot}/node_modules`); // VSCode < 1.21.0\n\nimport * as cp from \"child_process\";\nimport { EventEmitter } from \"events\";\nimport * as iconv from \"iconv-lite\";\nimport isUtf8 = require(\"is-utf8\");\nimport * as jschardet from \"jschardet\";\nimport * as proc from \"process\";\nimport { Uri, workspace } from \"vscode\";\nimport {\n  ConstructorPolicy,\n  ICpOptions,\n  IExecutionResult,\n  ISvnOptions\n} from \"./common/types\";\nimport { configuration } from \"./helpers/configuration\";\nimport { parseInfoXml } from \"./infoParser\";\nimport SvnError from \"./svnError\";\nimport { Repository } from \"./svnRepository\";\nimport { dispose, IDisposable, toDisposable } from \"./util\";\n\nexport const svnErrorCodes: { [key: string]: string } = {\n  AuthorizationFailed: \"E170001\",\n  RepositoryIsLocked: \"E155004\",\n  NotASvnRepository: \"E155007\",\n  NotShareCommonAncestry: \"E195012\",\n  WorkingCopyIsTooOld: \"E155036\"\n};\n\nfunction getSvnErrorCode(stderr: string): string | undefined {\n  for (const name in svnErrorCodes) {\n    if (svnErrorCodes.hasOwnProperty(name)) {\n      const code = svnErrorCodes[name];\n      const regex = new RegExp(`svn: ${code}`);\n      if (regex.test(stderr)) {\n        return code;\n      }\n    }\n  }\n\n  if (/No more credentials or we tried too many times/.test(stderr)) {\n    return svnErrorCodes.AuthorizationFailed;\n  }\n\n  return void 0;\n}\n\nexport function cpErrorHandler(\n  cb: (reason?: any) => void\n): (reason?: any) => void {\n  return err => {\n    if (/ENOENT/.test(err.message)) {\n      err = new SvnError({\n        error: err,\n        message: \"Failed to execute svn (ENOENT)\",\n        svnErrorCode: \"NotASvnRepository\"\n      });\n    }\n\n    cb(err);\n  };\n}\n\nexport class Svn {\n  private svnPath: string;\n  private version: string;\n  private lastCwd: string = \"\";\n\n  private _onOutput = new EventEmitter();\n  get onOutput(): EventEmitter {\n    return this._onOutput;\n  }\n\n  constructor(options: ISvnOptions) {\n    this.svnPath = options.svnPath;\n    this.version = options.version;\n  }\n\n  private logOutput(output: string): void {\n    this._onOutput.emit(\"log\", output);\n  }\n\n  public async exec(\n    cwd: string,\n    args: any[],\n    options: ICpOptions = {}\n  ): Promise<IExecutionResult> {\n    if (cwd) {\n      this.lastCwd = cwd;\n      options.cwd = cwd;\n    }\n\n    if (options.log !== false) {\n      const argsOut = args.map(arg => (/ |^$/.test(arg) ? `'${arg}'` : arg));\n      this.logOutput(\n        `[${this.lastCwd.split(/[\\\\\\/]+/).pop()}]$ svn ${argsOut.join(\" \")}\\n`\n      );\n    }\n\n    if (options.username) {\n      args.push(\"--username\", options.username);\n    }\n    if (options.password) {\n      args.push(\"--password\", options.password);\n    }\n\n    // Force non interactive environment\n    args.push(\"--non-interactive\");\n\n    let encoding = options.encoding || \"utf8\";\n    delete options.encoding;\n\n    const defaults: cp.SpawnOptions = {\n      env: proc.env\n    };\n    if (cwd) {\n      defaults.cwd = cwd;\n    }\n    const process = cp.spawn(this.svnPath, args, defaults);\n\n    const disposables: IDisposable[] = [];\n\n    const once = (\n      ee: NodeJS.EventEmitter,\n      name: string,\n      fn: (...args: any[]) => void\n    ) => {\n      ee.once(name, fn);\n      disposables.push(toDisposable(() => ee.removeListener(name, fn)));\n    };\n\n    const on = (\n      ee: NodeJS.EventEmitter,\n      name: string,\n      fn: (...args: any[]) => void\n    ) => {\n      ee.on(name, fn);\n      disposables.push(toDisposable(() => ee.removeListener(name, fn)));\n    };\n\n    const [exitCode, stdout, stderr] = await Promise.all<any>([\n      new Promise<number>((resolve, reject) => {\n        once(process, \"error\", reject);\n        once(process, \"exit\", resolve);\n      }),\n      new Promise<Buffer>(resolve => {\n        const buffers: Buffer[] = [];\n        on(process.stdout, \"data\", (b: Buffer) => buffers.push(b));\n        once(process.stdout, \"close\", () => resolve(Buffer.concat(buffers)));\n      }),\n      new Promise<string>(resolve => {\n        const buffers: Buffer[] = [];\n        on(process.stderr, \"data\", (b: Buffer) => buffers.push(b));\n        once(process.stderr, \"close\", () =>\n          resolve(Buffer.concat(buffers).toString())\n        );\n      })\n    ]);\n\n    dispose(disposables);\n\n    // SVN with '--xml' always return 'UTF-8', and jschardet detects this encoding: 'TIS-620'\n    if (args.includes(\"--xml\")) {\n      encoding = \"utf8\";\n    } else {\n      const defaultEncoding = configuration.get<string>(\"default.encoding\");\n      if (defaultEncoding) {\n        if (!iconv.encodingExists(defaultEncoding)) {\n          this.logOutput(\n            \"svn.default.encoding: Invalid Parameter: '\" +\n              defaultEncoding +\n              \"'.\\n\"\n          );\n        } else if (!isUtf8(stdout)) {\n          encoding = defaultEncoding;\n        }\n      } else {\n        jschardet.MacCyrillicModel.mTypicalPositiveRatio += 0.001;\n\n        const encodingGuess = jschardet.detect(stdout);\n\n        if (\n          encodingGuess.confidence > 0.8 &&\n          iconv.encodingExists(encodingGuess.encoding)\n        ) {\n          encoding = encodingGuess.encoding;\n        }\n      }\n    }\n\n    const decodedStdout = iconv.decode(stdout, encoding);\n\n    if (options.log !== false && stderr.length > 0) {\n      this.logOutput(`${stderr}\\n`);\n    }\n\n    if (exitCode) {\n      return Promise.reject<IExecutionResult>(\n        new SvnError({\n          message: \"Failed to execute svn\",\n          stdout: decodedStdout,\n          stderr,\n          stderrFormated: stderr.replace(/^svn: E\\d+: +/gm, \"\"),\n          exitCode,\n          svnErrorCode: getSvnErrorCode(stderr),\n          svnCommand: args[0]\n        })\n      );\n    }\n\n    return { exitCode, stdout: decodedStdout, stderr };\n  }\n\n  public async getRepositoryRoot(path: string) {\n    try {\n      const result = await this.exec(path, [\"info\", \"--xml\"]);\n\n      const info = await parseInfoXml(result.stdout);\n\n      if (info && info.wcInfo && info.wcInfo.wcrootAbspath) {\n        return info.wcInfo.wcrootAbspath;\n      }\n\n      // SVN 1.6 not has \"wcroot-abspath\"\n      return path;\n    } catch (error) {\n      if (error instanceof SvnError) {\n        throw error;\n      }\n      console.error(error);\n      throw new Error(\"Unable to find repository root path\");\n    }\n  }\n\n  public async open(\n    repositoryRoot: string,\n    workspaceRoot: string\n  ): Promise<Repository> {\n    return new Repository(\n      this,\n      repositoryRoot,\n      workspaceRoot,\n      ConstructorPolicy.Async\n    );\n  }\n}\n","module.exports = require(\"buffer\");","import { ProgressLocation, window } from \"vscode\";\nimport { IBranchItem, SvnKindType } from \"../common/types\";\nimport FolderItem from \"../quickPickItems/folderItem\";\nimport NewFolderItem from \"../quickPickItems/newFolderItem\";\nimport ParentFolderItem from \"../quickPickItems/parentFolderItem\";\nimport { Repository } from \"../repository\";\nimport { configuration } from \"./configuration\";\n\nexport function getBranchName(folder: string): IBranchItem | undefined {\n  const confs = [\n    \"layout.trunkRegex\",\n    \"layout.branchesRegex\",\n    \"layout.tagsRegex\"\n  ];\n\n  for (const conf of confs) {\n    const layout = configuration.get<string>(conf);\n    if (!layout) {\n      continue;\n    }\n    const group = configuration.get<number>(`${conf}Name`, 1) + 2;\n\n    const regex = new RegExp(`(^|/)(${layout})$`);\n\n    const matches = folder.match(regex);\n    if (matches && matches[2] && matches[group]) {\n      return {\n        name: matches[group],\n        path: matches[2]\n      };\n    }\n  }\n}\n\nexport async function selectBranch(\n  repository: Repository,\n  allowNew = false,\n  folder?: string\n): Promise<IBranchItem | undefined> {\n  const promise = repository.repository.list(folder);\n\n  window.withProgress(\n    { location: ProgressLocation.Window, title: \"Checking remote branches\" },\n    () => promise\n  );\n\n  const list = await promise;\n\n  const dirs = list.filter(item => item.kind === SvnKindType.DIR);\n\n  const picks = [];\n\n  if (folder) {\n    const parts = folder.split(\"/\");\n    parts.pop();\n    const parent = parts.join(\"/\");\n    picks.push(new ParentFolderItem(parent));\n  }\n\n  if (allowNew && folder && !!getBranchName(`${folder}/test`)) {\n    picks.push(new NewFolderItem(folder));\n  }\n\n  picks.push(...dirs.map(dir => new FolderItem(dir, folder)));\n\n  const choice = await window.showQuickPick(picks);\n\n  if (!choice) {\n    return;\n  }\n\n  if (choice instanceof ParentFolderItem) {\n    return selectBranch(repository, allowNew, choice.path);\n  }\n  if (choice instanceof FolderItem) {\n    if (choice.branch) {\n      return choice.branch;\n    }\n\n    return selectBranch(repository, allowNew, choice.path);\n  }\n\n  if (choice instanceof NewFolderItem) {\n    const result = await window.showInputBox({\n      prompt: \"Please provide a branch name\",\n      ignoreFocusOut: true\n    });\n\n    if (!result) {\n      return;\n    }\n\n    const name = result.replace(\n      /^\\.|\\/\\.|\\.\\.|~|\\^|:|\\/$|\\.lock$|\\.lock\\/|\\\\|\\*|\\s|^\\s*$|\\.$/g,\n      \"-\"\n    );\n\n    const newBranch = getBranchName(`${folder}/${name}`);\n    if (newBranch) {\n      newBranch.isNew = true;\n    }\n\n    return newBranch;\n  }\n}\n","module.exports = require(\"stream\");","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, parser, processors,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  defaults = require('./defaults');\n\n  builder = require('./builder');\n\n  parser = require('./parser');\n\n  processors = require('./processors');\n\n  exports.defaults = defaults.defaults;\n\n  exports.processors = processors;\n\n  exports.ValidationError = (function(superClass) {\n    extend(ValidationError, superClass);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Builder = builder.Builder;\n\n  exports.Parser = parser.Parser;\n\n  exports.parseString = parser.parseString;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLElement, XMLNode, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction;\n\n  XMLNode = require('./XMLNode');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name\");\n      }\n      this.name = this.stringify.eleName(name);\n      this.attributes = {};\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.isDocument) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n      }\n    }\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attributes = {};\n      ref1 = this.attributes;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attributes[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, i, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name\");\n      }\n      name = name.valueOf();\n      if (Array.isArray(name)) {\n        for (i = 0, len = name.length; i < len; i++) {\n          attName = name[i];\n          delete this.attributes[attName];\n        }\n      } else {\n        delete this.attributes[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).element(this);\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text\");\n      }\n      this.text = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.set(options).cdata(this);\n    };\n\n    return XMLCData;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLComment, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text\");\n      }\n      this.text = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.set(options).comment(this);\n    };\n\n    return XMLComment;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDeclaration, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDeclaration = (function(superClass) {\n    extend(XMLDeclaration, superClass);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.toString = function(options) {\n      return this.options.writer.set(options).declaration(this);\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var ref, ref1;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref = pubID, pubID = ref.pubID, sysID = ref.sysID;\n      }\n      if (sysID == null) {\n        ref1 = [pubID, sysID], sysID = ref1[0], pubID = ref1[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.set(options).docType(this);\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name\");\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type\");\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default\");\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT\");\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT\");\n      }\n      this.elementName = this.stringify.eleName(elementName);\n      this.attributeName = this.stringify.attName(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdAttList(this);\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing entity name\");\n      }\n      if (value == null) {\n        throw new Error(\"Missing entity value\");\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.eleName(name);\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity\");\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity\");\n        }\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity\");\n        }\n      }\n    }\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdEntity(this);\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDElement, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDElement = (function(superClass) {\n    extend(XMLDTDElement, superClass);\n\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.eleName(name);\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdElement(this);\n    };\n\n    return XMLDTDElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDNotation, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDNotation = (function(superClass) {\n    extend(XMLDTDNotation, superClass);\n\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing notation name\");\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity\");\n      }\n      this.name = this.stringify.eleName(name);\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    XMLDTDNotation.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdNotation(this);\n    };\n\n    return XMLDTDNotation;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLRaw,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLRaw = (function(superClass) {\n    extend(XMLRaw, superClass);\n\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text\");\n      }\n      this.value = this.stringify.raw(text);\n    }\n\n    XMLRaw.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLRaw.prototype.toString = function(options) {\n      return this.options.writer.set(options).raw(this);\n    };\n\n    return XMLRaw;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLText,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLText = (function(superClass) {\n    extend(XMLText, superClass);\n\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text\");\n      }\n      this.value = this.stringify.eleText(text);\n    }\n\n    XMLText.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLText.prototype.toString = function(options) {\n      return this.options.writer.set(options).text(this);\n    };\n\n    return XMLText;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target\");\n      }\n      this.target = this.stringify.insTarget(target);\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.set(options).processingInstruction(this);\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLNode);\n\n}).call(this);\n","import { QuickPickItem, window } from \"vscode\";\nimport { configuration } from \"./helpers/configuration\";\nimport ChangeListItem from \"./quickPickItems/changeListItem\";\nimport IgnoredChangeListItem from \"./quickPickItems/ignoredChangeListItem\";\nimport NewChangeListItem from \"./quickPickItems/newChangeListItem\";\nimport RemoveChangeListItem from \"./quickPickItems/removeChangeListItem\";\nimport { Repository } from \"./repository\";\n\nexport function getChangelistPickOptions(\n  repository: Repository,\n  canRemove = false\n): QuickPickItem[] {\n  const picks: QuickPickItem[] = [];\n\n  picks.push(new NewChangeListItem());\n  repository.changelists.forEach((group, changelist) => {\n    if (group.resourceStates.length) {\n      picks.push(new ChangeListItem(group));\n    }\n  });\n\n  const ignoreOnCommitList = configuration.get<string[]>(\n    \"sourceControl.ignoreOnCommit\"\n  );\n  for (const ignoreOnCommit of ignoreOnCommitList) {\n    if (!picks.some(p => p.label === ignoreOnCommit)) {\n      picks.push(new IgnoredChangeListItem(ignoreOnCommit));\n    }\n  }\n\n  if (canRemove) {\n    picks.push(new RemoveChangeListItem());\n  }\n\n  return picks;\n}\n\nexport function getCommitChangelistPickOptions(\n  repository: Repository\n): ChangeListItem[] {\n  const picks: ChangeListItem[] = [];\n\n  if (repository.changes.resourceStates.length) {\n    picks.push(new ChangeListItem(repository.changes));\n  }\n\n  const ignoreOnCommitList = configuration.get<string[]>(\n    \"sourceControl.ignoreOnCommit\"\n  );\n\n  repository.changelists.forEach((group, changelist) => {\n    if (\n      group.resourceStates.length &&\n      !ignoreOnCommitList.includes(changelist)\n    ) {\n      picks.push(new ChangeListItem(group));\n    }\n  });\n  return picks;\n}\n\nexport async function inputSwitchChangelist(\n  repository: Repository,\n  canRemove = false\n) {\n  const picks: QuickPickItem[] = getChangelistPickOptions(\n    repository,\n    canRemove\n  );\n\n  const selectedChoice: any = await window.showQuickPick(picks, {\n    placeHolder: \"Select an existing changelist or create a new\"\n  });\n  if (!selectedChoice) {\n    return;\n  }\n\n  let changelistName;\n\n  if (selectedChoice instanceof RemoveChangeListItem) {\n    return false;\n  } else if (selectedChoice instanceof NewChangeListItem) {\n    const newChangelistName = await window.showInputBox({\n      placeHolder: \"Changelist name\",\n      prompt: \"Please enter a changelist name\"\n    });\n    if (!newChangelistName) {\n      return;\n    }\n    changelistName = newChangelistName;\n  } else {\n    changelistName = selectedChoice.label;\n  }\n\n  return changelistName;\n}\n\nexport async function inputCommitChangelist(repository: Repository) {\n  const picks: ChangeListItem[] = getCommitChangelistPickOptions(repository);\n\n  if (picks.length === 0) {\n    window.showInformationMessage(\"There are no changes to commit.\");\n    return;\n  }\n\n  let choice;\n  // If has only changes, not prompt to select changelist\n  if (picks.length === 1 && repository.changes.resourceStates.length) {\n    choice = picks[0];\n  } else {\n    choice = await window.showQuickPick(picks, {\n      placeHolder: \"Select a changelist to commit\"\n    });\n  }\n\n  return choice;\n}\n\nexport function patchChangelistOptions(repository: Repository) {\n  const picks: QuickPickItem[] = [];\n\n  repository.changelists.forEach((group, changelist) => {\n    if (group.resourceStates.length) {\n      picks.push(new ChangeListItem(group));\n    }\n  });\n\n  return picks;\n}\n\nexport async function getPatchChangelist(repository: Repository) {\n  const picks: QuickPickItem[] = patchChangelistOptions(repository);\n\n  if (!picks.length) {\n    window.showErrorMessage(\"No changelists to pick from\");\n    return;\n  }\n\n  const selectedChoice: any = await window.showQuickPick(picks, {\n    placeHolder: \"Select a changelist\"\n  });\n  if (!selectedChoice) {\n    return;\n  }\n\n  return selectedChoice.label;\n}\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc) {\n      var child, i, len, r, ref;\n      this.textispresent = false;\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += (function() {\n          switch (false) {\n            case !(child instanceof XMLDeclaration):\n              return this.declaration(child);\n            case !(child instanceof XMLDocType):\n              return this.docType(child);\n            case !(child instanceof XMLComment):\n              return this.comment(child);\n            case !(child instanceof XMLProcessingInstruction):\n              return this.processingInstruction(child);\n            default:\n              return this.element(child, 0);\n          }\n        }).call(this);\n      }\n      if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n        r = r.slice(0, -this.newline.length);\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.attribute = function(att) {\n      return ' ' + att.name + '=\"' + att.value + '\"';\n    };\n\n    XMLStringWriter.prototype.cdata = function(node, level) {\n      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.comment = function(node, level) {\n      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;\n    };\n\n    XMLStringWriter.prototype.declaration = function(node, level) {\n      var r;\n      r = this.space(level);\n      r += '<?xml version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      r += this.spacebeforeslash + '?>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.docType = function(node, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      r = this.space(level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.newline;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLDTDAttList):\n                return this.dtdAttList(child, level + 1);\n              case !(child instanceof XMLDTDElement):\n                return this.dtdElement(child, level + 1);\n              case !(child instanceof XMLDTDEntity):\n                return this.dtdEntity(child, level + 1);\n              case !(child instanceof XMLDTDNotation):\n                return this.dtdNotation(child, level + 1);\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        r += ']';\n      }\n      r += this.spacebeforeslash + '>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.element = function(node, level) {\n      var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;\n      level || (level = 0);\n      textispresentwasset = false;\n      if (this.textispresent) {\n        this.newline = '';\n        this.pretty = false;\n      } else {\n        this.newline = this.newlinedefault;\n        this.pretty = this.prettydefault;\n      }\n      space = this.space(level);\n      r = '';\n      r += space + '<' + node.name;\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          r += '></' + node.name + '>' + this.newline;\n        } else {\n          r += this.spacebeforeslash + '/>' + this.newline;\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        r += '>';\n        r += node.children[0].value;\n        r += '</' + node.name + '>' + this.newline;\n      } else {\n        if (this.dontprettytextnodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if (child.value != null) {\n              this.textispresent++;\n              textispresentwasset = true;\n              break;\n            }\n          }\n        }\n        if (this.textispresent) {\n          this.newline = '';\n          this.pretty = false;\n          space = this.space(level);\n        }\n        r += '>' + this.newline;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLElement):\n                return this.element(child, level + 1);\n              case !(child instanceof XMLRaw):\n                return this.raw(child, level + 1);\n              case !(child instanceof XMLText):\n                return this.text(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        if (textispresentwasset) {\n          this.textispresent--;\n        }\n        if (!this.textispresent) {\n          this.newline = this.newlinedefault;\n          this.pretty = this.prettydefault;\n        }\n        r += space + '</' + node.name + '>' + this.newline;\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.processingInstruction = function(node, level) {\n      var r;\n      r = this.space(level) + '<?' + node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      r += this.spacebeforeslash + '?>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.raw = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.text = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdAttList = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdElement = function(node, level) {\n      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + this.spacebeforeslash + '>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdEntity = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ENTITY';\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdNotation = function(node, level) {\n      var r;\n      r = this.space(level) + '<!NOTATION ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.openNode = function(node, level) {\n      var att, name, r, ref;\n      level || (level = 0);\n      if (node instanceof XMLElement) {\n        r = this.space(level) + '<' + node.name;\n        ref = node.attributes;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          r += this.attribute(att);\n        }\n        r += (node.children ? '>' : '/>') + this.newline;\n        return r;\n      } else {\n        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        r += (node.children ? ' [' : '>') + this.newline;\n        return r;\n      }\n    };\n\n    XMLStringWriter.prototype.closeNode = function(node, level) {\n      level || (level = 0);\n      switch (false) {\n        case !(node instanceof XMLElement):\n          return this.space(level) + '</' + node.name + '>' + this.newline;\n        case !(node instanceof XMLDocType):\n          return this.space(level) + ']>' + this.newline;\n      }\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","import { camelcase } from \"../util\";\n\nexport const xml2jsParseSettings = {\n  mergeAttrs: true,\n  explicitRoot: false,\n  explicitArray: false,\n  attrNameProcessors: [camelcase],\n  tagNameProcessors: [camelcase]\n};\n","module.exports = require(\"os\");","module.exports = require(\"child_process\");","module.exports = require(\"events\");","module.exports = require(\"string_decoder\");","import * as xml2js from \"xml2js\";\nimport { ISvnInfo } from \"./common/types\";\nimport { camelcase } from \"./util\";\n\nexport async function parseInfoXml(content: string): Promise<ISvnInfo> {\n  return new Promise<ISvnInfo>((resolve, reject) => {\n    xml2js.parseString(\n      content,\n      {\n        mergeAttrs: true,\n        explicitRoot: false,\n        explicitArray: false,\n        attrNameProcessors: [camelcase],\n        tagNameProcessors: [camelcase]\n      },\n      (err, result) => {\n        if (err || typeof result.entry === \"undefined\") {\n          reject();\n        }\n\n        resolve(result.entry);\n      }\n    );\n  });\n}\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute;\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.options = parent.options;\n      this.stringify = parent.stringify;\n      if (name == null) {\n        throw new Error(\"Missing attribute name of element \" + parent.name);\n      }\n      if (value == null) {\n        throw new Error(\"Missing attribute value for attribute \" + name + \" of element \" + parent.name);\n      }\n      this.name = this.stringify.attName(name);\n      this.value = this.stringify.attValue(value);\n    }\n\n    XMLAttribute.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLAttribute.prototype.toString = function(options) {\n      return this.options.writer.set(options).attribute(this);\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.noDoubleEncoding = options.noDoubleEncoding;\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.eleName = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.eleText = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(this.elEscape(val));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attName = function(val) {\n      return val = '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      val = '' + val || '';\n      return this.attEscape(val);\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (val != null) {\n        return '' + val || '';\n      } else {\n        return val;\n      }\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var res;\n      res = str.match(/[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/);\n      if (res) {\n        throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.elEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLWriterBase,\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;\n      options || (options = {});\n      this.pretty = options.pretty || false;\n      this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;\n      if (this.pretty) {\n        this.indent = (ref1 = options.indent) != null ? ref1 : '  ';\n        this.newline = (ref2 = options.newline) != null ? ref2 : '\\n';\n        this.offset = (ref3 = options.offset) != null ? ref3 : 0;\n        this.dontprettytextnodes = (ref4 = options.dontprettytextnodes) != null ? ref4 : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = (ref5 = options.spacebeforeslash) != null ? ref5 : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref6 = options.writer || {};\n      for (key in ref6) {\n        if (!hasProp.call(ref6, key)) continue;\n        value = ref6[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.set = function(options) {\n      var key, ref, value;\n      options || (options = {});\n      if (\"pretty\" in options) {\n        this.pretty = options.pretty;\n      }\n      if (\"allowEmpty\" in options) {\n        this.allowEmpty = options.allowEmpty;\n      }\n      if (this.pretty) {\n        this.indent = \"indent\" in options ? options.indent : '  ';\n        this.newline = \"newline\" in options ? options.newline : '\\n';\n        this.offset = \"offset\" in options ? options.offset : 0;\n        this.dontprettytextnodes = \"dontprettytextnodes\" in options ? options.dontprettytextnodes : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = \"spacebeforeslash\" in options ? options.spacebeforeslash : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n      return this;\n    };\n\n    XMLWriterBase.prototype.space = function(level) {\n      var indent;\n      if (this.pretty) {\n        indent = (level || 0) + this.offset + 1;\n        if (indent > 0) {\n          return new Array(indent).join(this.indent);\n        } else {\n          return '';\n        }\n      } else {\n        return '';\n      }\n    };\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var prefixMatch;\n\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n  exports.normalize = function(str) {\n    return str.toLowerCase();\n  };\n\n  exports.firstCharLowerCase = function(str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n\n  exports.stripPrefix = function(str) {\n    return str.replace(prefixMatch, '');\n  };\n\n  exports.parseNumbers = function(str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n\n  exports.parseBooleans = function(str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n\n}).call(this);\n","module.exports = require(\"timers\");","import { ISvnErrorData } from \"./common/types\";\n\nexport default class SvnError {\n  public error?: Error;\n  public message: string;\n  public stdout?: string;\n  public stderr?: string;\n  public stderrFormated?: string;\n  public exitCode?: number;\n  public svnErrorCode?: string;\n  public svnCommand?: string;\n\n  constructor(data: ISvnErrorData) {\n    if (data.error) {\n      this.error = data.error;\n      this.message = data.error.message;\n    } else {\n      this.error = void 0;\n    }\n\n    this.message = data.message || \"SVN error\";\n    this.stdout = data.stdout;\n    this.stderr = data.stderr;\n    this.stderrFormated = data.stderrFormated;\n    this.exitCode = data.exitCode;\n    this.svnErrorCode = data.svnErrorCode;\n    this.svnCommand = data.svnCommand;\n  }\n\n  public toString(): string {\n    let result =\n      this.message +\n      \" \" +\n      JSON.stringify(\n        {\n          exitCode: this.exitCode,\n          svnErrorCode: this.svnErrorCode,\n          svnCommand: this.svnCommand,\n          stdout: this.stdout,\n          stderr: this.stderr\n        },\n        null,\n        2\n      );\n\n    if (this.error) {\n      result += (this.error as any).stack;\n    }\n\n    return result;\n  }\n}\n","module.exports = require(\"crypto\");","import { window } from \"vscode\";\n\nexport function noChangesToCommit() {\n  return window.showInformationMessage(\"There are no changes to commit.\");\n}\n\nexport async function inputCommitMessage(\n  message?: string,\n  promptNew: boolean = true\n): Promise<string | undefined> {\n  if (promptNew) {\n    message = await window.showInputBox({\n      value: message,\n      placeHolder: \"Commit message\",\n      prompt: \"Please enter a commit message\",\n      ignoreFocusOut: true\n    });\n  }\n\n  if (message === \"\") {\n    const allowEmpty = await window.showWarningMessage(\n      \"Do you really want to commit an empty message?\",\n      { modal: true },\n      \"Yes\"\n    );\n\n    if (allowEmpty === \"Yes\") {\n      return \"\";\n    } else {\n      return undefined;\n    }\n  }\n  return message;\n}\n","/* tslint:disable:max-line-length */\n\nimport { QuickPickItem } from \"vscode\";\nimport { IConflictOption } from \"./common/types\";\n\nconst conflictOptions = [\n  {\n    label: \"base\",\n    description:\n      \"Choose the file that was the (unmodified) BASE revision before you tried to integrate changes\"\n  },\n  {\n    label: \"working\",\n    description:\n      \"Assuming that you've manually handled the conflict resolution, choose the version of the file as it currently stands in your working copy.\"\n  },\n  {\n    label: \"mine-full\",\n    description:\n      \"Preserve all local modifications and discarding all changes fetched\"\n  },\n  {\n    label: \"theirs-full\",\n    description:\n      \"Discard all local modifications and integrating all changes fetched\"\n  },\n  {\n    label: \"mine-conflict\",\n    description:\n      \"Resolve conflicted files by preferring local modifications over the changes fetched\"\n  },\n  {\n    label: \"theirs-conflict\",\n    description:\n      \"Resolve conflicted files by preferring the changes fetched from the server over local modifications\"\n  }\n];\n\nclass ConflictItem implements QuickPickItem {\n  constructor(private option: IConflictOption) {}\n\n  get label(): string {\n    return this.option.label;\n  }\n\n  get description(): string {\n    return this.option.description;\n  }\n}\n\nexport function getConflictPickOptions() {\n  return conflictOptions.map(option => new ConflictItem(option));\n}\n","// use import { promises as fs } from \"fs\"; when nodejs will be updated\nimport * as fs from \"fs\";\nimport * as os from \"os\";\nimport * as path from \"path\";\nimport * as util from \"util\";\nimport { Uri } from \"vscode\";\n\nconst writeFile = util.promisify(fs.writeFile);\n\nexport const tempdir = path.join(os.tmpdir(), \"vscode-svn\");\n\nexport async function dumpSvnFile(\n  snvUri: Uri,\n  revision: string,\n  payload: string\n): Promise<Uri> {\n  if (!fs.existsSync(tempdir)) {\n    await fs.mkdirSync(tempdir);\n  }\n  const fname = `r${revision}_${path.basename(snvUri.fsPath)}`;\n  const fpath = path.join(tempdir, fname);\n  await writeFile(fpath, payload);\n  return Uri.file(fpath);\n}\n","import { createHash } from \"crypto\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport {\n  commands,\n  env,\n  TextDocumentShowOptions,\n  TreeItem,\n  Uri,\n  window\n} from \"vscode\";\nimport { ISvnLogEntry, ISvnLogEntryPath } from \"../common/types\";\nimport { configuration } from \"../helpers/configuration\";\nimport { IRemoteRepository } from \"../remoteRepository\";\nimport { SvnRI } from \"../svnRI\";\nimport { dumpSvnFile } from \"../tempFiles\";\n\nexport enum LogTreeItemKind {\n  Repo = 1,\n  Commit,\n  CommitDetail,\n  TItem\n}\n\n// svn:// or ^/ or WC-path\nexport class SvnPath {\n  constructor(private path: string) {}\n  public toString(): string {\n    return this.path;\n  }\n}\n\nexport interface ICachedLog {\n  entries: ISvnLogEntry[];\n  // Uri of svn repository\n  svnTarget: Uri;\n  isComplete: boolean;\n  repo: IRemoteRepository;\n  persisted: {\n    readonly commitFrom: string;\n    baseRevision?: number;\n    readonly userAdded?: boolean;\n  };\n  order: number;\n}\n\ntype TreeItemData = ISvnLogEntry | ISvnLogEntryPath | SvnPath | TreeItem;\n\nexport interface ILogTreeItem {\n  readonly kind: LogTreeItemKind;\n  data: TreeItemData;\n  readonly parent?: ILogTreeItem;\n}\n\nexport function transform(\n  array: TreeItemData[],\n  kind: LogTreeItemKind,\n  parent?: ILogTreeItem\n): ILogTreeItem[] {\n  return array.map(data => {\n    return { kind, data, parent };\n  });\n}\n\nexport function getIconObject(iconName: string): { light: Uri; dark: Uri } {\n  // XXX Maybe use full path to extension?\n  const iconsRootPath = path.join(__dirname, \"..\", \"..\", \"icons\");\n  const toUri = (theme: string) =>\n    Uri.file(path.join(iconsRootPath, theme, `${iconName}.svg`));\n  return {\n    light: toUri(\"light\"),\n    dark: toUri(\"dark\")\n  };\n}\n\nexport async function copyCommitToClipboard(what: string, item: ILogTreeItem) {\n  const clipboard = (env as any).clipboard;\n  if (clipboard === undefined) {\n    window.showErrorMessage(\"Clipboard is supported in VS Code 1.30 and newer\");\n    return;\n  }\n  if (item.kind === LogTreeItemKind.Commit) {\n    const commit = item.data as ISvnLogEntry;\n    switch (what) {\n      case \"msg\":\n      case \"revision\":\n        await clipboard.writeText(commit[what]);\n    }\n  }\n}\n\nfunction needFetch(\n  cached: ISvnLogEntry[],\n  fetched: ISvnLogEntry[],\n  limit: number\n): boolean {\n  if (cached.length && cached[cached.length - 1].revision === \"1\") {\n    return false;\n  }\n  if (fetched.length === 0 || fetched[fetched.length - 1].revision === \"1\") {\n    return false;\n  }\n  if (fetched.length < limit) {\n    return false;\n  }\n  return true;\n}\n\nexport function insertBaseMarker(\n  item: ICachedLog,\n  entries: ISvnLogEntry[],\n  out: ILogTreeItem[]\n): TreeItem | undefined {\n  const baseRev = item.persisted.baseRevision;\n  if (\n    entries.length &&\n    baseRev &&\n    parseInt(entries[0].revision, 10) > baseRev\n  ) {\n    let i = 1;\n    while (entries.length > i && parseInt(entries[i].revision, 10) > baseRev) {\n      i++;\n    }\n    const titem = new TreeItem(\"BASE\");\n    titem.tooltip = \"Log entries above do not exist in working copy\";\n    out.splice(i, 0, { kind: LogTreeItemKind.TItem, data: titem });\n  }\n  return undefined;\n}\n\nexport function checkIfFile(e: SvnRI, local: boolean): boolean | undefined {\n  if (e.localFullPath === undefined) {\n    if (local) {\n      window.showErrorMessage(\"No working copy for this path\");\n    }\n    return undefined;\n  }\n  let stat;\n  try {\n    stat = fs.lstatSync(e.localFullPath.fsPath);\n  } catch {\n    window.showWarningMessage(\n      \"Not available from this working copy: \" + e.localFullPath\n    );\n    return false;\n  }\n  if (!stat.isFile()) {\n    window.showErrorMessage(\"This target is not a file\");\n    return false;\n  }\n  return true;\n}\n\n/// @note: cached.svnTarget should be valid\nexport async function fetchMore(cached: ICachedLog) {\n  let rfrom = cached.persisted.commitFrom;\n  const entries = cached.entries;\n  if (entries.length) {\n    rfrom = entries[entries.length - 1].revision;\n    rfrom = (Number.parseInt(rfrom, 10) - 1).toString();\n  }\n  let moreCommits: ISvnLogEntry[] = [];\n  const limit = getLimit();\n  try {\n    moreCommits = await cached.repo.log(rfrom, \"1\", limit, cached.svnTarget);\n  } catch {\n    // Item didn't exist\n  }\n  if (!needFetch(entries, moreCommits, limit)) {\n    cached.isComplete = true;\n  }\n  entries.push(...moreCommits);\n}\n\nexport function getLimit(): number {\n  const limit = Number.parseInt(\n    configuration.get<string>(\"log.length\") || \"50\",\n    10\n  );\n  if (isNaN(limit) || limit <= 0) {\n    throw new Error(\"Invalid log.length setting value\");\n  }\n  return limit;\n}\n\nconst gravatarCache: Map<string, Uri> = new Map();\n\nfunction md5(s: string): string {\n  const data = createHash(\"md5\");\n  data.write(s);\n  return data.digest().toString(\"hex\");\n}\n\nexport function getCommitIcon(\n  author: string,\n  size: number = 16\n): Uri | { light: Uri; dark: Uri } {\n  if (!configuration.get(\"gravatars.enabled\", true) as boolean) {\n    return getIconObject(\"icon-commit\");\n  }\n\n  let gravatar = gravatarCache.get(author);\n  if (gravatar !== undefined) {\n    return gravatar;\n  }\n\n  gravatar = Uri.parse(\n    `https://www.gravatar.com/avatar/${md5(author)}.jpg?s=${size}&d=robohash`\n  );\n\n  gravatarCache.set(author, gravatar);\n\n  return gravatar;\n}\n\nexport function getCommitLabel(commit: ISvnLogEntry): string {\n  const fstLine = commit.msg.split(/\\r?\\n/, 1)[0];\n  return `${fstLine} • r${commit.revision}`;\n}\n\nexport function getCommitToolTip(commit: ISvnLogEntry): string {\n  let date = commit.date;\n  if (!isNaN(Date.parse(date))) {\n    date = new Date(date).toString();\n  }\n  return `Author: ${commit.author}\n${date}\nRevision: ${commit.revision}\nMessage: ${commit.msg}`;\n}\n\nasync function downloadFile(\n  repo: IRemoteRepository,\n  arg: Uri,\n  revision: string\n): Promise<Uri> {\n  if (revision === \"BASE\") {\n    const nm = repo.getPathNormalizer();\n    const ri = nm.parse(arg.toString(true));\n    const localPath = ri.localFullPath;\n    if (localPath === undefined || !fs.existsSync(localPath.path)) {\n      const errorMsg =\n        \"BASE revision doesn't exist for \" +\n        (localPath ? localPath.path : \"remote path\");\n      window.showErrorMessage(errorMsg);\n      throw new Error(errorMsg);\n    }\n    return localPath;\n  }\n  let out;\n  try {\n    out = await repo.show(arg, revision);\n  } catch (e) {\n    window.showErrorMessage(\"Failed to open path\");\n    throw e;\n  }\n  return dumpSvnFile(arg, revision, out);\n}\n\nexport async function openDiff(\n  repo: IRemoteRepository,\n  arg: Uri,\n  r1: string,\n  r2: string\n) {\n  const uri1 = await downloadFile(repo, arg, r1);\n  const uri2 = await downloadFile(repo, arg, r2);\n  const opts: TextDocumentShowOptions = {\n    preview: true\n  };\n  const title = `${path.basename(arg.path)} (${r1} : ${r2})`;\n  return commands.executeCommand<void>(\"vscode.diff\", uri1, uri2, title, opts);\n}\n\nexport async function openFileRemote(\n  repo: IRemoteRepository,\n  arg: Uri,\n  against: string\n) {\n  let out;\n  try {\n    out = await repo.show(arg, against);\n  } catch {\n    window.showErrorMessage(\"Failed to open path\");\n    return;\n  }\n  const localUri = await dumpSvnFile(arg, against, out);\n  const opts: TextDocumentShowOptions = {\n    preview: true\n  };\n  return commands.executeCommand<void>(\"vscode.open\", localUri, opts);\n}\n","import * as path from \"path\";\nimport { clearInterval, setInterval } from \"timers\";\nimport {\n  commands,\n  Disposable,\n  Event,\n  EventEmitter,\n  ProgressLocation,\n  scm,\n  SourceControl,\n  SourceControlInputBox,\n  TextDocument,\n  Uri,\n  window,\n  workspace\n} from \"vscode\";\nimport {\n  IAuth,\n  IFileStatus,\n  IOperations,\n  ISvnInfo,\n  ISvnResourceGroup,\n  Operation,\n  RepositoryState,\n  Status,\n  SvnUriAction\n} from \"./common/types\";\nimport { debounce, memoize, throttle } from \"./decorators\";\nimport { configuration } from \"./helpers/configuration\";\nimport OperationsImpl from \"./operationsImpl\";\nimport { PathNormalizer } from \"./pathNormalizer\";\nimport { IRemoteRepository } from \"./remoteRepository\";\nimport { Resource } from \"./resource\";\nimport { SvnStatusBar } from \"./statusBar\";\nimport { svnErrorCodes } from \"./svn\";\nimport { Repository as BaseRepository } from \"./svnRepository\";\nimport { toSvnUri } from \"./uri\";\nimport {\n  anyEvent,\n  dispose,\n  eventToPromise,\n  filterEvent,\n  isDescendant,\n  isReadOnly,\n  timeout,\n  toDisposable\n} from \"./util\";\nimport { match, matchAll } from \"./util/globMatch\";\n\nfunction shouldShowProgress(operation: Operation): boolean {\n  switch (operation) {\n    case Operation.CurrentBranch:\n    case Operation.Show:\n    case Operation.Info:\n      return false;\n    default:\n      return true;\n  }\n}\n\nexport class Repository implements IRemoteRepository {\n  public sourceControl: SourceControl;\n  public statusBar: SvnStatusBar;\n  public changes: ISvnResourceGroup;\n  public unversioned: ISvnResourceGroup;\n  public remoteChanges?: ISvnResourceGroup;\n  public changelists: Map<string, ISvnResourceGroup> = new Map();\n  public conflicts: ISvnResourceGroup;\n  public statusIgnored: IFileStatus[] = [];\n  public statusExternal: IFileStatus[] = [];\n  private disposables: Disposable[] = [];\n  public currentBranch = \"\";\n  public remoteChangedFiles: number = 0;\n  public isIncomplete: boolean = false;\n  public needCleanUp: boolean = false;\n  private remoteChangedUpdateInterval?: NodeJS.Timer;\n  private deletedUris: Uri[] = [];\n\n  private lastPromptAuth?: Thenable<IAuth | undefined>;\n\n  private _onDidChangeRepository = new EventEmitter<Uri>();\n  public readonly onDidChangeRepository: Event<Uri> = this\n    ._onDidChangeRepository.event;\n\n  private _onDidChangeState = new EventEmitter<RepositoryState>();\n  public readonly onDidChangeState: Event<RepositoryState> = this\n    ._onDidChangeState.event;\n\n  private _onDidChangeStatus = new EventEmitter<void>();\n  public readonly onDidChangeStatus: Event<void> = this._onDidChangeStatus\n    .event;\n\n  private _onDidChangeRemoteChangedFiles = new EventEmitter<void>();\n  public readonly onDidChangeRemoteChangedFile: Event<void> = this\n    ._onDidChangeRemoteChangedFiles.event;\n\n  private _onRunOperation = new EventEmitter<Operation>();\n  public readonly onRunOperation: Event<Operation> = this._onRunOperation.event;\n\n  private _onDidRunOperation = new EventEmitter<Operation>();\n  public readonly onDidRunOperation: Event<Operation> = this._onDidRunOperation\n    .event;\n\n  @memoize\n  get onDidChangeOperations(): Event<void> {\n    return anyEvent(\n      this.onRunOperation as Event<any>,\n      this.onDidRunOperation as Event<any>\n    );\n  }\n\n  private _operations = new OperationsImpl();\n  get operations(): IOperations {\n    return this._operations;\n  }\n\n  private _state = RepositoryState.Idle;\n  get state(): RepositoryState {\n    return this._state;\n  }\n  set state(state: RepositoryState) {\n    this._state = state;\n    this._onDidChangeState.fire(state);\n\n    this.changes.resourceStates = [];\n    this.unversioned.resourceStates = [];\n    this.conflicts.resourceStates = [];\n    this.changelists.forEach((group, changelist) => {\n      group.resourceStates = [];\n    });\n\n    if (this.remoteChanges) {\n      this.remoteChanges.dispose();\n    }\n\n    this.isIncomplete = false;\n    this.needCleanUp = false;\n  }\n\n  get root(): string {\n    return this.repository.root;\n  }\n\n  get workspaceRoot(): string {\n    return this.repository.workspaceRoot;\n  }\n\n  /** 'svn://repo.x/branches/b1' e.g. */\n  get branchRoot(): Uri {\n    return Uri.parse(this.repository.info.url);\n  }\n\n  get inputBox(): SourceControlInputBox {\n    return this.sourceControl.inputBox;\n  }\n\n  get username(): string | undefined {\n    return this.repository.username;\n  }\n\n  set username(username: string | undefined) {\n    this.repository.username = username;\n  }\n\n  get password(): string | undefined {\n    return this.repository.password;\n  }\n\n  set password(password: string | undefined) {\n    this.repository.password = password;\n  }\n\n  constructor(public repository: BaseRepository) {\n    const fsWatcher = workspace.createFileSystemWatcher(\"**\");\n    this.disposables.push(fsWatcher);\n\n    const onWorkspaceChange = anyEvent(\n      fsWatcher.onDidChange,\n      fsWatcher.onDidCreate,\n      fsWatcher.onDidDelete\n    );\n\n    const onRepositoryChange = filterEvent(\n      onWorkspaceChange,\n      uri => !/^\\.\\./.test(path.relative(repository.root, uri.fsPath))\n    );\n    const onRelevantRepositoryChange = filterEvent(\n      onRepositoryChange,\n      uri => !/[\\\\\\/]\\.svn[\\\\\\/]tmp/.test(uri.path)\n    );\n\n    onRelevantRepositoryChange(this.onFSChange, this, this.disposables);\n\n    const onRelevantSvnChange = filterEvent(onRelevantRepositoryChange, uri =>\n      /[\\\\\\/]\\.svn[\\\\\\/]/.test(uri.path)\n    );\n\n    // TODO on svn switch event fired two times since two files were changed\n    onRelevantSvnChange(\n      async (e: Uri) => {\n        await this.repository.updateInfo();\n        this._onDidChangeRepository.fire(e);\n      },\n      this,\n      this.disposables\n    );\n\n    this.sourceControl = scm.createSourceControl(\n      \"svn\",\n      \"SVN\",\n      Uri.file(repository.workspaceRoot)\n    );\n\n    this.sourceControl.count = 0;\n    this.sourceControl.inputBox.placeholder =\n      \"Message (press Ctrl+Enter to commit)\";\n    this.sourceControl.acceptInputCommand = {\n      command: \"svn.commitWithMessage\",\n      title: \"commit\",\n      arguments: [this.sourceControl]\n    };\n    this.sourceControl.quickDiffProvider = this;\n    this.disposables.push(this.sourceControl);\n\n    this.statusBar = new SvnStatusBar(this);\n    this.disposables.push(this.statusBar);\n    this.statusBar.onDidChange(\n      () => (this.sourceControl.statusBarCommands = this.statusBar.commands),\n      null,\n      this.disposables\n    );\n\n    this.changes = this.sourceControl.createResourceGroup(\n      \"changes\",\n      \"Changes\"\n    ) as ISvnResourceGroup;\n    this.conflicts = this.sourceControl.createResourceGroup(\n      \"conflicts\",\n      \"conflicts\"\n    ) as ISvnResourceGroup;\n    this.unversioned = this.sourceControl.createResourceGroup(\n      \"unversioned\",\n      \"Unversioned\"\n    ) as ISvnResourceGroup;\n\n    this.changes.hideWhenEmpty = true;\n    this.unversioned.hideWhenEmpty = true;\n    this.conflicts.hideWhenEmpty = true;\n\n    this.disposables.push(this.changes);\n    this.disposables.push(this.conflicts);\n\n    // The this.unversioned can recreated by update state model\n    this.disposables.push(toDisposable(() => this.unversioned.dispose()));\n\n    // Dispose the setInterval of Remote Changes\n    this.disposables.push(\n      toDisposable(() => {\n        if (this.remoteChangedUpdateInterval) {\n          clearInterval(this.remoteChangedUpdateInterval);\n        }\n      })\n    );\n\n    // For each deleted file, append to list\n    const onFsDelete = filterEvent(\n      fsWatcher.onDidDelete,\n      uri => !/[\\\\\\/]\\.svn[\\\\\\/]/.test(uri.path)\n    );\n\n    onFsDelete(uri => this.deletedUris.push(uri), this, this.disposables);\n\n    // Only check deleted files after the status list is fully updated\n    this.onDidChangeStatus(this.actionForDeletedFiles, this, this.disposables);\n\n    this.createRemoteChangedInterval();\n\n    this.updateRemoteChangedFiles();\n\n    // On change config, dispose current interval and create a new.\n    configuration.onDidChange(e => {\n      if (e.affectsConfiguration(\"svn.remoteChanges.checkFrequency\")) {\n        if (this.remoteChangedUpdateInterval) {\n          clearInterval(this.remoteChangedUpdateInterval);\n        }\n\n        this.createRemoteChangedInterval();\n\n        this.updateRemoteChangedFiles();\n      }\n    });\n\n    this.status();\n\n    this.disposables.push(\n      workspace.onDidSaveTextDocument(document => {\n        this.onDidSaveTextDocument(document);\n      })\n    );\n  }\n\n  private createRemoteChangedInterval() {\n    const updateFreq = configuration.get<number>(\n      \"remoteChanges.checkFrequency\",\n      300\n    );\n\n    if (!updateFreq) {\n      return;\n    }\n\n    this.remoteChangedUpdateInterval = setInterval(() => {\n      this.updateRemoteChangedFiles();\n    }, 1000 * updateFreq);\n  }\n\n  /**\n   * Check all recently deleted files and compare with svn status \"missing\"\n   */\n  @debounce(1000)\n  private async actionForDeletedFiles() {\n    if (!this.deletedUris.length) {\n      return;\n    }\n\n    const allUris = this.deletedUris;\n    this.deletedUris = [];\n\n    const actionForDeletedFiles = configuration.get<string>(\n      \"delete.actionForDeletedFiles\",\n      \"prompt\"\n    );\n\n    if (actionForDeletedFiles === \"none\") {\n      return;\n    }\n\n    const resources = allUris\n      .map(uri => this.getResourceFromFile(uri))\n      .filter(\n        resource => resource && resource.type === Status.MISSING\n      ) as Resource[];\n\n    let uris = resources.map(resource => resource.resourceUri);\n\n    if (!uris.length) {\n      return;\n    }\n\n    const ignoredRulesForDeletedFiles = configuration.get<string[]>(\n      \"delete.ignoredRulesForDeletedFiles\",\n      []\n    );\n    const rules = ignoredRulesForDeletedFiles.map(ignored => match(ignored));\n\n    if (rules.length) {\n      uris = uris.filter(uri => {\n        // Check first for relative URL (Better for workspace configuration)\n        const relativePath = this.repository.removeAbsolutePath(uri.fsPath);\n\n        // If some match, remove from list\n        return !rules.some(\n          rule => rule.match(relativePath) || rule.match(uri.fsPath)\n        );\n      });\n    }\n\n    if (!uris.length) {\n      return;\n    }\n\n    if (actionForDeletedFiles === \"remove\") {\n      return await this.removeFiles(uris.map(uri => uri.fsPath), false);\n    } else if (actionForDeletedFiles === \"prompt\") {\n      return await commands.executeCommand(\"svn.promptRemove\", ...uris);\n    }\n  }\n\n  @debounce(1000)\n  public async updateRemoteChangedFiles() {\n    const updateFreq = configuration.get<number>(\n      \"remoteChanges.checkFrequency\",\n      300\n    );\n\n    if (updateFreq) {\n      this.run(Operation.StatusRemote);\n    } else {\n      // Remove list of remote changes\n      if (this.remoteChanges) {\n        this.remoteChanges.dispose();\n        this.remoteChanges = undefined;\n      }\n    }\n  }\n\n  private onFSChange(uri: Uri): void {\n    const autorefresh = configuration.get<boolean>(\"autorefresh\");\n\n    if (!autorefresh) {\n      return;\n    }\n\n    if (!this.operations.isIdle()) {\n      return;\n    }\n\n    this.eventuallyUpdateWhenIdleAndWait();\n  }\n\n  @debounce(1000)\n  private eventuallyUpdateWhenIdleAndWait(): void {\n    this.updateWhenIdleAndWait();\n  }\n\n  @throttle\n  private async updateWhenIdleAndWait(): Promise<void> {\n    await this.whenIdleAndFocused();\n    await this.status();\n    await timeout(5000);\n  }\n\n  public async whenIdleAndFocused(): Promise<void> {\n    while (true) {\n      if (!this.operations.isIdle()) {\n        await eventToPromise(this.onDidRunOperation);\n        continue;\n      }\n\n      if (!window.state.focused) {\n        const onDidFocusWindow = filterEvent(\n          window.onDidChangeWindowState,\n          e => e.focused\n        );\n        await eventToPromise(onDidFocusWindow);\n        continue;\n      }\n\n      return;\n    }\n  }\n\n  @throttle\n  public async updateModelState(checkRemoteChanges: boolean = false) {\n    const changes: any[] = [];\n    const unversioned: any[] = [];\n    const external: any[] = [];\n    const conflicts: any[] = [];\n    const changelists: Map<string, Resource[]> = new Map();\n    const remoteChanges: any[] = [];\n\n    this.statusExternal = [];\n    this.statusIgnored = [];\n    this.isIncomplete = false;\n    this.needCleanUp = false;\n\n    const combineExternal = configuration.get<boolean>(\n      \"sourceControl.combineExternalIfSameServer\",\n      false\n    );\n\n    const statuses =\n      (await this.retryRun(async () => {\n        return await this.repository.getStatus({\n          includeIgnored: true,\n          includeExternals: combineExternal,\n          checkRemoteChanges\n        });\n      })) || [];\n\n    const fileConfig = workspace.getConfiguration(\"files\", Uri.file(this.root));\n\n    const filesToExclude = fileConfig.get<any>(\"exclude\");\n\n    const excludeList: string[] = [];\n    for (const pattern in filesToExclude) {\n      if (filesToExclude.hasOwnProperty(pattern)) {\n        const negate = !filesToExclude[pattern];\n        excludeList.push((negate ? \"!\" : \"\") + pattern);\n      }\n    }\n\n    this.statusExternal = statuses.filter(\n      status => status.status === Status.EXTERNAL\n    );\n\n    if (combineExternal && this.statusExternal.length) {\n      const repositoryUuid = await this.repository.getRepositoryUuid();\n      this.statusExternal = this.statusExternal.filter(\n        status => repositoryUuid !== status.repositoryUuid\n      );\n    }\n\n    const statusesRepository = statuses.filter(status => {\n      if (status.status === Status.EXTERNAL) {\n        return false;\n      }\n\n      return !this.statusExternal.some(external =>\n        isDescendant(external.path, status.path)\n      );\n    });\n\n    const hideUnversioned = configuration.get<boolean>(\n      \"sourceControl.hideUnversioned\"\n    );\n\n    for (const status of statusesRepository) {\n      if (status.path === \".\") {\n        this.isIncomplete = status.status === Status.INCOMPLETE;\n        this.needCleanUp = status.wcStatus.locked;\n      }\n\n      // If exists a switched item, the repository is incomplete\n      // To simulate, run \"svn switch\" and kill \"svn\" proccess\n      // After, run \"svn update\"\n      if (status.wcStatus.switched) {\n        this.isIncomplete = true;\n      }\n\n      if (\n        status.wcStatus.locked ||\n        status.wcStatus.switched ||\n        status.status === Status.INCOMPLETE\n      ) {\n        // On commit, `svn status` return all locked files with status=\"normal\" and props=\"none\"\n        continue;\n      }\n\n      if (matchAll(status.path, excludeList, { dot: true })) {\n        continue;\n      }\n\n      const uri = Uri.file(path.join(this.workspaceRoot, status.path));\n      const renameUri = status.rename\n        ? Uri.file(path.join(this.workspaceRoot, status.rename))\n        : undefined;\n\n      if (status.reposStatus) {\n        remoteChanges.push(\n          new Resource(\n            uri,\n            status.reposStatus.item,\n            undefined,\n            status.reposStatus.props,\n            true\n          )\n        );\n      }\n\n      const resource = new Resource(\n        uri,\n        status.status,\n        renameUri,\n        status.props\n      );\n\n      if (\n        (status.status === Status.NORMAL || status.status === Status.NONE) &&\n        (status.props === Status.NORMAL || status.props === Status.NONE) &&\n        !status.changelist\n      ) {\n        // Ignore non changed itens\n        continue;\n      } else if (status.status === Status.IGNORED) {\n        this.statusIgnored.push(status);\n      } else if (status.status === Status.CONFLICTED) {\n        conflicts.push(resource);\n      } else if (status.status === Status.UNVERSIONED) {\n        if (hideUnversioned) {\n          continue;\n        }\n\n        const matches = status.path.match(\n          /(.+?)\\.(mine|working|merge-\\w+\\.r\\d+|r\\d+)$/\n        );\n\n        // If file end with (mine, working, merge, etc..) and has file without extension\n        if (\n          matches &&\n          matches[1] &&\n          statuses.some(s => s.path === matches[1])\n        ) {\n          continue;\n        } else {\n          unversioned.push(resource);\n        }\n      } else if (status.changelist) {\n        let changelist = changelists.get(status.changelist);\n        if (!changelist) {\n          changelist = [];\n        }\n        changelist.push(resource);\n        changelists.set(status.changelist, changelist);\n      } else {\n        changes.push(resource);\n      }\n    }\n\n    this.changes.resourceStates = changes;\n    this.conflicts.resourceStates = conflicts;\n\n    const prevChangelistsSize = this.changelists.size;\n\n    this.changelists.forEach((group, changelist) => {\n      group.resourceStates = [];\n    });\n\n    const counts = [this.changes, this.conflicts];\n\n    const ignoreOnCommitList = configuration.get<string[]>(\n      \"sourceControl.ignoreOnCommit\"\n    );\n\n    const ignoreOnStatusCountList = configuration.get<string[]>(\n      \"sourceControl.ignoreOnStatusCount\"\n    );\n\n    changelists.forEach((resources, changelist) => {\n      let group = this.changelists.get(changelist);\n      if (!group) {\n        // Prefix 'changelist-' to prevent double id with 'change' or 'external'\n        group = this.sourceControl.createResourceGroup(\n          `changelist-${changelist}`,\n          `Changelist \"${changelist}\"`\n        ) as ISvnResourceGroup;\n        group.hideWhenEmpty = true;\n        this.disposables.push(group);\n\n        this.changelists.set(changelist, group);\n      }\n\n      group.resourceStates = resources;\n\n      if (!ignoreOnStatusCountList.includes(changelist)) {\n        counts.push(group);\n      }\n    });\n\n    // Recreate unversioned group to move after changelists\n    if (prevChangelistsSize !== this.changelists.size) {\n      this.unversioned.dispose();\n\n      this.unversioned = this.sourceControl.createResourceGroup(\n        \"unversioned\",\n        \"Unversioned\"\n      ) as ISvnResourceGroup;\n\n      this.unversioned.hideWhenEmpty = true;\n    }\n\n    this.unversioned.resourceStates = unversioned;\n\n    if (configuration.get<boolean>(\"sourceControl.countUnversioned\", false)) {\n      counts.push(this.unversioned);\n    }\n\n    this.sourceControl.count = counts.reduce(\n      (a, b) => a + b.resourceStates.length,\n      0\n    );\n\n    // Recreate remoteChanges group to move after unversioned\n    if (!this.remoteChanges || prevChangelistsSize !== this.changelists.size) {\n      /**\n       * Destroy and create for keep at last position\n       */\n      let tempResourceStates: Resource[] = [];\n      if (this.remoteChanges) {\n        tempResourceStates = this.remoteChanges.resourceStates;\n        this.remoteChanges.dispose();\n      }\n\n      this.remoteChanges = this.sourceControl.createResourceGroup(\n        \"remotechanges\",\n        \"Remote Changes\"\n      ) as ISvnResourceGroup;\n\n      this.remoteChanges.repository = this;\n      this.remoteChanges.hideWhenEmpty = true;\n      this.remoteChanges.resourceStates = tempResourceStates;\n    }\n\n    // Update remote changes group\n    if (checkRemoteChanges) {\n      this.remoteChanges.resourceStates = remoteChanges;\n\n      if (remoteChanges.length !== this.remoteChangedFiles) {\n        this.remoteChangedFiles = remoteChanges.length;\n        this._onDidChangeRemoteChangedFiles.fire();\n      }\n    }\n\n    this._onDidChangeStatus.fire();\n\n    this.currentBranch = await this.getCurrentBranch();\n\n    return Promise.resolve();\n  }\n\n  public getResourceFromFile(uri: string | Uri): Resource | undefined {\n    if (typeof uri === \"string\") {\n      uri = Uri.file(uri);\n    }\n\n    const groups = [\n      this.changes,\n      this.conflicts,\n      this.unversioned,\n      ...this.changelists.values()\n    ];\n\n    const uriString = uri.toString();\n\n    for (const group of groups) {\n      for (const resource of group.resourceStates) {\n        if (\n          uriString === resource.resourceUri.toString() &&\n          resource instanceof Resource\n        ) {\n          return resource;\n        }\n      }\n    }\n\n    return undefined;\n  }\n\n  public provideOriginalResource(uri: Uri): Uri | undefined {\n    if (uri.scheme !== \"file\") {\n      return;\n    }\n\n    // Not has original resource for content of \".svn\" folder\n    if (isDescendant(path.join(this.root, \".svn\"), uri.fsPath)) {\n      return;\n    }\n\n    return toSvnUri(uri, SvnUriAction.SHOW, {}, true);\n  }\n\n  public async getBranches() {\n    try {\n      return await this.repository.getBranches();\n    } catch (error) {\n      return [];\n    }\n  }\n\n  @throttle\n  public async status() {\n    return this.run(Operation.Status);\n  }\n\n  public async show(\n    filePath: string | Uri,\n    revision?: string\n  ): Promise<string> {\n    return this.run<string>(Operation.Show, () => {\n      return this.repository.show(filePath, revision);\n    });\n  }\n\n  public async addFiles(files: string[]) {\n    return this.run(Operation.Add, () => this.repository.addFiles(files));\n  }\n\n  public async addChangelist(files: string[], changelist: string) {\n    return this.run(Operation.AddChangelist, () =>\n      this.repository.addChangelist(files, changelist)\n    );\n  }\n\n  public async removeChangelist(files: string[]) {\n    return this.run(Operation.RemoveChangelist, () =>\n      this.repository.removeChangelist(files)\n    );\n  }\n\n  public async getCurrentBranch() {\n    return this.run(Operation.CurrentBranch, async () => {\n      return this.repository.getCurrentBranch();\n    });\n  }\n\n  public async newBranch(\n    name: string,\n    commitMessage: string = \"Created new branch\"\n  ) {\n    return this.run(Operation.NewBranch, async () => {\n      await this.repository.newBranch(name, commitMessage);\n      this.updateRemoteChangedFiles();\n    });\n  }\n\n  public async switchBranch(name: string, force: boolean = false) {\n    await this.run(Operation.SwitchBranch, async () => {\n      await this.repository.switchBranch(name, force);\n      this.updateRemoteChangedFiles();\n    });\n  }\n\n  public async updateRevision(\n    ignoreExternals: boolean = false\n  ): Promise<string> {\n    return this.run<string>(Operation.Update, async () => {\n      const response = await this.repository.update(ignoreExternals);\n      this.updateRemoteChangedFiles();\n      return response;\n    });\n  }\n\n  public async pullIncomingChange(path: string) {\n    return this.run<string>(Operation.Update, async () => {\n      const response = await this.repository.pullIncomingChange(path);\n      this.updateRemoteChangedFiles();\n      return response;\n    });\n  }\n\n  public async resolve(files: string[], action: string) {\n    return this.run(Operation.Resolve, () =>\n      this.repository.resolve(files, action)\n    );\n  }\n\n  public async commitFiles(message: string, files: any[]) {\n    return this.run(Operation.Commit, () =>\n      this.repository.commitFiles(message, files)\n    );\n  }\n\n  public async revert(files: string[]) {\n    return this.run(Operation.Revert, () => this.repository.revert(files));\n  }\n\n  public async info(path: string) {\n    return this.run(Operation.Info, () => this.repository.getInfo(path));\n  }\n\n  public async patch(files: string[]) {\n    return this.run(Operation.Patch, () => this.repository.patch(files));\n  }\n\n  public async patchChangelist(changelistName: string) {\n    return this.run(Operation.Patch, () =>\n      this.repository.patchChangelist(changelistName)\n    );\n  }\n\n  public async removeFiles(files: string[], keepLocal: boolean) {\n    return this.run(Operation.Remove, () =>\n      this.repository.removeFiles(files, keepLocal)\n    );\n  }\n\n  public async plainLog() {\n    return this.run(Operation.Log, () => this.repository.plainLog());\n  }\n\n  public async log(\n    rfrom: string,\n    rto: string,\n    limit: number,\n    target?: string | Uri\n  ) {\n    return this.run(Operation.Log, () =>\n      this.repository.log(rfrom, rto, limit, target)\n    );\n  }\n\n  public async cleanup() {\n    return this.run(Operation.CleanUp, () => this.repository.cleanup());\n  }\n\n  public async getInfo(path: string, revision?: string): Promise<ISvnInfo> {\n    return this.run(Operation.Info, () =>\n      this.repository.getInfo(path, revision, true)\n    );\n  }\n\n  public async finishCheckout() {\n    return this.run(Operation.SwitchBranch, () =>\n      this.repository.finishCheckout()\n    );\n  }\n\n  public async addToIgnore(\n    expressions: string[],\n    directory: string,\n    recursive: boolean = false\n  ) {\n    return this.run(Operation.Ignore, () =>\n      this.repository.addToIgnore(expressions, directory, recursive)\n    );\n  }\n\n  public async rename(oldFile: string, newFile: string) {\n    return this.run(Operation.Rename, () =>\n      this.repository.rename(oldFile, newFile)\n    );\n  }\n\n  public getPathNormalizer(): PathNormalizer {\n    return new PathNormalizer(this.repository.info);\n  }\n\n  public async promptAuth(): Promise<IAuth | undefined> {\n    // Prevent multiple prompts for auth\n    if (this.lastPromptAuth) {\n      return this.lastPromptAuth;\n    }\n\n    this.lastPromptAuth = commands.executeCommand(\"svn.promptAuth\");\n    const result = await this.lastPromptAuth;\n\n    if (result) {\n      this.username = result.username;\n      this.password = result.password;\n    }\n\n    this.lastPromptAuth = undefined;\n    return result;\n  }\n\n  public onDidSaveTextDocument(document: TextDocument) {\n    const uriString = document.uri.toString();\n    const conflict = this.conflicts.resourceStates.find(\n      resource => resource.resourceUri.toString() === uriString\n    );\n    if (!conflict) {\n      return;\n    }\n\n    const text = document.getText();\n\n    // Check for lines begin with \"<<<<<<\", \"=======\", \">>>>>>>\"\n    if (!/^<{7}[^]+^={7}[^]+^>{7}/m.test(text)) {\n      commands.executeCommand(\"svn.resolved\", conflict.resourceUri);\n    }\n  }\n\n  private async run<T>(\n    operation: Operation,\n    runOperation: () => Promise<T> = () => Promise.resolve<any>(null)\n  ): Promise<T> {\n    if (this.state !== RepositoryState.Idle) {\n      throw new Error(\"Repository not initialized\");\n    }\n\n    const run = async () => {\n      this._operations.start(operation);\n      this._onRunOperation.fire(operation);\n\n      try {\n        const result = await this.retryRun(runOperation);\n\n        const checkRemote = operation === Operation.StatusRemote;\n\n        if (!isReadOnly(operation)) {\n          await this.updateModelState(checkRemote);\n        }\n\n        return result;\n      } catch (err) {\n        if (err.svnErrorCode === svnErrorCodes.NotASvnRepository) {\n          this.state = RepositoryState.Disposed;\n        }\n\n        throw err;\n      } finally {\n        this._operations.end(operation);\n        this._onDidRunOperation.fire(operation);\n      }\n    };\n\n    return shouldShowProgress(operation)\n      ? window.withProgress({ location: ProgressLocation.SourceControl }, run)\n      : run();\n  }\n\n  private async retryRun<T>(\n    runOperation: () => Promise<T> = () => Promise.resolve<any>(null)\n  ): Promise<T> {\n    let attempt = 0;\n\n    while (true) {\n      try {\n        attempt++;\n        return await runOperation();\n      } catch (err) {\n        if (\n          err.svnErrorCode === svnErrorCodes.RepositoryIsLocked &&\n          attempt <= 10\n        ) {\n          // quatratic backoff\n          await timeout(Math.pow(attempt, 2) * 50);\n        } else if (\n          err.svnErrorCode === svnErrorCodes.AuthorizationFailed &&\n          attempt <= 3\n        ) {\n          const result = await this.promptAuth();\n          if (!result) {\n            throw err;\n          }\n        } else {\n          throw err;\n        }\n      }\n    }\n  }\n\n  public dispose(): void {\n    this.disposables = dispose(this.disposables);\n  }\n}\n","import * as path from \"path\";\nimport { Uri } from \"vscode\";\nimport { ISvnInfo } from \"./common/types\";\nimport { memoize } from \"./decorators\";\nimport { SvnRI } from \"./svnRI\";\n\nenum ResourceKind {\n  LocalRelative,\n  LocalFull,\n  RemoteFull\n}\n\n/**\n * create from Repository class\n */\nexport class PathNormalizer {\n  public readonly repoRoot: Uri;\n  public readonly branchRoot: Uri;\n  public readonly checkoutRoot?: Uri;\n\n  constructor(public readonly repoInfo: ISvnInfo) {\n    this.repoRoot = Uri.parse(repoInfo.repository.root);\n    this.branchRoot = Uri.parse(repoInfo.url);\n    if (repoInfo.wcInfo) {\n      this.checkoutRoot = Uri.file(repoInfo.wcInfo.wcrootAbspath);\n    }\n  }\n\n  /** svn://foo.org/domain/trunk/x -> trunk/x */\n  private getFullRepoPathFromUrl(fpath: string): string {\n    if (fpath.startsWith(\"/\")) {\n      return fpath.substr(1);\n    } else if (fpath.startsWith(\"svn://\") || fpath.startsWith(\"file://\")) {\n      const target = Uri.parse(fpath).path;\n      return path.relative(this.repoRoot.path, target);\n    } else {\n      throw new Error(\"unknown path\");\n    }\n  }\n\n  public parse(\n    fpath: string,\n    kind = ResourceKind.RemoteFull,\n    rev?: string\n  ): SvnRI {\n    let target: string;\n    if (kind === ResourceKind.RemoteFull) {\n      target = this.getFullRepoPathFromUrl(fpath);\n    } else if (kind === ResourceKind.LocalFull) {\n      if (!path.isAbsolute(fpath)) {\n        throw new Error(\"Path isn't absolute\");\n      }\n      if (this.checkoutRoot === undefined) {\n        throw new Error(\"Local paths are not\");\n      }\n      target = path.join(\n        this.fromRootToBranch(),\n        path.relative(this.checkoutRoot.path, fpath)\n      );\n    } else if (kind === ResourceKind.LocalRelative) {\n      if (path.isAbsolute(fpath)) {\n        throw new Error(\"Path is absolute\");\n      }\n      if (this.checkoutRoot === undefined) {\n        throw new Error(\"Local paths are not\");\n      }\n      target = path.join(this.fromRootToBranch(), fpath);\n    } else {\n      throw new Error(\"unsupported kind\");\n    }\n\n    return new SvnRI(\n      this.repoRoot,\n      this.branchRoot,\n      this.checkoutRoot,\n      target,\n      rev\n    );\n  }\n\n  @memoize\n  public fromRootToBranch(): string {\n    return path.relative(this.repoRoot.path, this.branchRoot.path);\n  }\n\n  @memoize\n  public fromBranchToRoot(): string {\n    return path.relative(this.branchRoot.path, this.repoRoot.path);\n  }\n}\n","import * as minimatch from \"minimatch\";\n\nexport function matchAll(\n  path: string,\n  patterns: string[],\n  opts: minimatch.IOptions = {}\n): boolean {\n  let match = false;\n\n  patterns.forEach(pattern => {\n    const isExclusion = pattern[0] === \"!\";\n\n    // If we've got a match, only re-test for exclusions.\n    // if we don't have a match, only re-test for inclusions.\n    if (match !== isExclusion) {\n      return;\n    }\n\n    match = minimatch(path, pattern, opts);\n  });\n\n  return match;\n}\n\nexport function match(pattern: string) {\n  return new minimatch.Minimatch(pattern);\n}\n","import * as path from \"path\";\nimport {\n  commands,\n  Disposable,\n  ExtensionContext,\n  OutputChannel,\n  Uri,\n  window\n} from \"vscode\";\nimport { registerCommands } from \"./commands\";\nimport { ConstructorPolicy } from \"./common/types\";\nimport SvnDecorations from \"./decorations/svnDecorations\";\nimport { configuration } from \"./helpers/configuration\";\nimport { ItemLogProvider } from \"./historyView/itemLogProvider\";\nimport { RepoLogProvider } from \"./historyView/repoLogProvider\";\nimport { Model } from \"./model\";\nimport { Svn } from \"./svn\";\nimport { SvnContentProvider } from \"./svnContentProvider\";\nimport { SvnFinder } from \"./svnFinder\";\nimport SvnProvider from \"./treeView/dataProviders/svnProvider\";\nimport {\n  hasSupportToDecorationProvider,\n  hasSupportToRegisterDiffCommand,\n  toDisposable\n} from \"./util\";\n\nasync function init(\n  context: ExtensionContext,\n  outputChannel: OutputChannel,\n  disposables: Disposable[]\n) {\n  commands.executeCommand(\"setContext\", \"svnOpenRepositoryCount\", \"0\");\n\n  const pathHint = configuration.get<string>(\"path\");\n  const svnFinder = new SvnFinder();\n\n  const info = await svnFinder.findSvn(pathHint);\n  const svn = new Svn({ svnPath: info.path, version: info.version });\n  const model = await new Model(svn, ConstructorPolicy.Async);\n  const contentProvider = new SvnContentProvider(model);\n\n  registerCommands(model, disposables);\n\n  disposables.push(model, contentProvider);\n\n  const svnProvider = new SvnProvider(model);\n\n  window.registerTreeDataProvider(\"svn\", svnProvider);\n\n  const repoLogProvider = new RepoLogProvider(model);\n  disposables.push(repoLogProvider);\n  window.registerTreeDataProvider(\"repolog\", repoLogProvider);\n\n  const itemLogProvider = new ItemLogProvider(model);\n  disposables.push(itemLogProvider);\n  window.registerTreeDataProvider(\"itemlog\", itemLogProvider);\n\n  // First, check the vscode has support to DecorationProvider\n  if (hasSupportToDecorationProvider()) {\n    const decoration = new SvnDecorations(model);\n    disposables.push(decoration);\n  }\n  const onRepository = () =>\n    commands.executeCommand(\n      \"setContext\",\n      \"svnOpenRepositoryCount\",\n      `${model.repositories.length}`\n    );\n  model.onDidOpenRepository(onRepository, null, disposables);\n  model.onDidCloseRepository(onRepository, null, disposables);\n  onRepository();\n\n  commands.executeCommand(\n    \"setContext\",\n    \"svnHasSupportToRegisterDiffCommand\",\n    hasSupportToRegisterDiffCommand() ? \"1\" : \"0\"\n  );\n\n  outputChannel.appendLine(`Using svn \"${info.version}\" from \"${info.path}\"`);\n\n  const onOutput = (str: string) => outputChannel.append(str);\n  svn.onOutput.addListener(\"log\", onOutput);\n  disposables.push(\n    toDisposable(() => svn.onOutput.removeListener(\"log\", onOutput))\n  );\n}\n\nasync function _activate(context: ExtensionContext, disposables: Disposable[]) {\n  const outputChannel = window.createOutputChannel(\"Svn\");\n  commands.registerCommand(\"svn.showOutput\", () => outputChannel.show());\n  disposables.push(outputChannel);\n\n  const showOutput = configuration.get<boolean>(\"showOutput\");\n\n  if (showOutput) {\n    outputChannel.show();\n  }\n\n  const tryInit = async () => {\n    try {\n      await init(context, outputChannel, disposables);\n    } catch (err) {\n      if (!/Svn installation not found/.test(err.message || \"\")) {\n        throw err;\n      }\n\n      const shouldIgnore =\n        configuration.get<boolean>(\"ignoreMissingSvnWarning\") === true;\n\n      if (shouldIgnore) {\n        return;\n      }\n\n      console.warn(err.message);\n      outputChannel.appendLine(err.message);\n      outputChannel.show();\n\n      const findSvnExecutable = \"Find SVN executable\";\n      const download = \"Download SVN\";\n      const neverShowAgain = \"Don't Show Again\";\n      const choice = await window.showWarningMessage(\n        \"SVN not found. Install it or configure it using the 'svn.path' setting.\",\n        findSvnExecutable,\n        download,\n        neverShowAgain\n      );\n\n      if (choice === findSvnExecutable) {\n        let filters: { [name: string]: string[] } | undefined;\n\n        // For windows, limit to executable files\n        if (path.sep === \"\\\\\") {\n          filters = {\n            svn: [\"exe\", \"bat\"]\n          };\n        }\n\n        const executable = await window.showOpenDialog({\n          canSelectFiles: true,\n          canSelectFolders: false,\n          canSelectMany: false,\n          filters\n        });\n\n        if (executable && executable[0]) {\n          const file = executable[0].fsPath;\n\n          outputChannel.appendLine(`Updated \"svn.path\" with \"${file}\"`);\n\n          await configuration.update(\"path\", file);\n\n          // Try Re-init after select the executable\n          await tryInit();\n        }\n      } else if (choice === download) {\n        commands.executeCommand(\n          \"vscode.open\",\n          Uri.parse(\"https://subversion.apache.org/packages.html\")\n        );\n      } else if (choice === neverShowAgain) {\n        await configuration.update(\"ignoreMissingSvnWarning\", true);\n      }\n    }\n  };\n\n  await tryInit();\n}\n\nexport async function activate(context: ExtensionContext) {\n  const disposables: Disposable[] = [];\n  context.subscriptions.push(\n    new Disposable(() => Disposable.from(...disposables).dispose())\n  );\n\n  await _activate(context, disposables).catch(err => console.error(err));\n}\n\n// this method is called when your extension is deactivated\n/* tslint:disable:no-empty */\nfunction deactivate() {}\nexports.deactivate = deactivate;\n","import { Disposable } from \"vscode\";\nimport { Add } from \"./commands/add\";\nimport { AddToIgnoreExplorer } from \"./commands/addToIgnoreExplorer\";\nimport { AddToIgnoreSCM } from \"./commands/addToIgnoreSCM\";\nimport { ChangeList } from \"./commands/changeList\";\nimport { Checkout } from \"./commands/checkout\";\nimport { Cleanup } from \"./commands/cleanup\";\nimport { Close } from \"./commands/close\";\nimport { Commit } from \"./commands/commit\";\nimport { CommitWithMessage } from \"./commands/commitWithMessage\";\nimport { DeleteUnversioned } from \"./commands/deleteUnversioned\";\nimport { FileOpen } from \"./commands/fileOpen\";\nimport { FinishCheckout } from \"./commands/finishCheckout\";\nimport { GetModel } from \"./commands/getModel\";\nimport { Log } from \"./commands/log\";\nimport { OpenChangeBase } from \"./commands/openChangeBase\";\nimport { OpenChangeHead } from \"./commands/openChangeHead\";\nimport { OpenChangePrev } from \"./commands/openChangePrev\";\nimport { OpenFile } from \"./commands/openFile\";\nimport { OpenHeadFile } from \"./commands/openHeadFile\";\nimport { OpenResourceBase } from \"./commands/openResourceBase\";\nimport { OpenResourceHead } from \"./commands/openResourceHead\";\nimport { Patch } from \"./commands/patch\";\nimport { PatchAll } from \"./commands/patchAll\";\nimport { PatchChangeList } from \"./commands/patchChangeList\";\nimport { PromptAuth } from \"./commands/promptAuth\";\nimport { PromptRemove } from \"./commands/promptRemove\";\nimport { PullIncommingChange } from \"./commands/pullIncomingChange\";\nimport { Refresh } from \"./commands/refresh\";\nimport { RefreshRemoteChanges } from \"./commands/refreshRemoteChanges\";\nimport { Remove } from \"./commands/remove\";\nimport { RenameExplorer } from \"./commands/renameExplorer\";\nimport { Resolve } from \"./commands/resolve\";\nimport { ResolveAll } from \"./commands/resolveAll\";\nimport { Resolved } from \"./commands/resolved\";\nimport { Revert } from \"./commands/revert\";\nimport { RevertChange } from \"./commands/revertChange\";\nimport { RevertSelectedRanges } from \"./commands/revertSelectedRanges\";\nimport { SwitchBranch } from \"./commands/switchBranch\";\nimport { Update } from \"./commands/update\";\nimport { Upgrade } from \"./commands/upgrade\";\nimport { Model } from \"./model\";\n\nexport function registerCommands(model: Model, disposables: Disposable[]) {\n  disposables.push(new GetModel(model));\n  disposables.push(new FileOpen());\n  disposables.push(new OpenFile());\n  disposables.push(new PromptAuth());\n  disposables.push(new CommitWithMessage());\n  disposables.push(new Add());\n  disposables.push(new ChangeList());\n  disposables.push(new Refresh());\n  disposables.push(new Commit());\n  disposables.push(new OpenResourceBase());\n  disposables.push(new OpenResourceHead());\n  disposables.push(new OpenChangeBase());\n  disposables.push(new SwitchBranch());\n  disposables.push(new Revert());\n  disposables.push(new Update());\n  disposables.push(new PullIncommingChange());\n  disposables.push(new PatchAll());\n  disposables.push(new Patch());\n  disposables.push(new PatchChangeList());\n  disposables.push(new Remove());\n  disposables.push(new ResolveAll());\n  disposables.push(new Resolve());\n  disposables.push(new Resolved());\n  disposables.push(new Log());\n  disposables.push(new RevertChange());\n  disposables.push(new Close());\n  disposables.push(new Cleanup());\n  disposables.push(new FinishCheckout());\n  disposables.push(new AddToIgnoreSCM());\n  disposables.push(new AddToIgnoreExplorer());\n  disposables.push(new RenameExplorer());\n  disposables.push(new Upgrade());\n  disposables.push(new RevertSelectedRanges());\n  disposables.push(new OpenChangePrev());\n  disposables.push(new PromptRemove());\n  disposables.push(new Checkout());\n  disposables.push(new RefreshRemoteChanges());\n  disposables.push(new DeleteUnversioned());\n  disposables.push(new OpenChangeHead());\n  disposables.push(new OpenHeadFile());\n}\n","import { SourceControlResourceState, window } from \"vscode\";\nimport { Command } from \"./command\";\n\nexport class Add extends Command {\n  constructor() {\n    super(\"svn.add\");\n  }\n\n  public async execute(...resourceStates: SourceControlResourceState[]) {\n    const selection = await this.getResourceStates(resourceStates);\n\n    if (selection.length === 0) {\n      return;\n    }\n\n    const uris = selection.map(resource => resource.resourceUri);\n\n    await this.runByRepository(uris, async (repository, resources) => {\n      if (!repository) {\n        return;\n      }\n\n      const paths = resources.map(resource => resource.fsPath);\n\n      try {\n        await repository.addFiles(paths);\n      } catch (error) {\n        console.log(error);\n        window.showErrorMessage(\"Unable to add file\");\n      }\n    });\n  }\n}\n","import * as path from \"path\";\nimport { QuickPickItem, Uri, window } from \"vscode\";\nimport { Repository } from \"./repository\";\n\nexport class IgnoreSingleItem implements QuickPickItem {\n  constructor(public expression: string, public recursive: boolean = false) {}\n\n  get label(): string {\n    const text = this.recursive ? \" (Recursive)\" : \"\";\n    return `${this.expression}${text}`;\n  }\n\n  get description(): string {\n    const text = this.recursive ? \" (Recursive)\" : \"\";\n    return `Add '${this.expression}' to 'svn:ignore'${text}`;\n  }\n}\n\nexport async function inputIgnoreList(repository: Repository, uris: Uri[]) {\n  if (uris.length === 0) {\n    return false;\n  }\n\n  const regexExtension = new RegExp(\"\\\\.[^\\\\.]+(\\\\.map)?$\", \"i\");\n\n  if (uris.length === 1) {\n    const uri = uris[0];\n    const matchExt = uri.fsPath.match(regexExtension);\n    const ext = matchExt && matchExt[0] ? matchExt[0] : \"\";\n    const fileName = path.basename(uri.fsPath);\n    const dirName = path.dirname(uri.fsPath);\n\n    const picks: IgnoreSingleItem[] = [];\n    picks.push(new IgnoreSingleItem(fileName));\n    if (ext) {\n      picks.push(new IgnoreSingleItem(\"*\" + ext));\n    }\n    picks.push(new IgnoreSingleItem(fileName, true));\n    if (ext) {\n      picks.push(new IgnoreSingleItem(\"*\" + ext, true));\n    }\n\n    const pick = await window.showQuickPick(picks);\n\n    if (!pick) {\n      return false;\n    }\n\n    return repository.addToIgnore([pick.expression], dirName, pick.recursive);\n  }\n\n  const count = uris.length;\n  const recursive = \"(Recursive)\";\n\n  const ignoreByFileName = `Ignore ${count} by filename`;\n  const ignoreByExtension = `Ignore ${count} by extension`;\n  const ignoreByFileNameRecursive = `Ignore ${count} by filename ${recursive}`;\n  const ignoreByExtensionRecursive = `Ignore ${count} by extension ${recursive}`;\n\n  const picks: string[] = [\n    ignoreByFileName,\n    ignoreByExtension,\n    ignoreByFileNameRecursive,\n    ignoreByExtensionRecursive\n  ];\n\n  const pick = await window.showQuickPick(picks);\n\n  if (!pick) {\n    return false;\n  }\n\n  const isByFile = pick.startsWith(ignoreByFileName);\n  const isRecursive = pick.endsWith(recursive);\n\n  const byDir: { [key: string]: string[] } = {};\n\n  for (const uri of uris) {\n    const dirname = path.dirname(uri.fsPath);\n    const filename = path.basename(uri.fsPath);\n    const matchExt = uri.fsPath.match(regexExtension);\n    const ext = matchExt && matchExt[0] ? matchExt[0] : \"\";\n\n    if (typeof byDir[dirname] === \"undefined\") {\n      byDir[dirname] = [];\n    }\n\n    if (isByFile) {\n      byDir[dirname].push(filename);\n    } else if (ext) {\n      byDir[dirname].push(\"*\" + ext);\n    }\n  }\n\n  for (const dir in byDir) {\n    if (byDir.hasOwnProperty(dir)) {\n      const files = [...new Set(byDir[dir])]; // Unique list\n      await repository.addToIgnore(files, dir, isRecursive);\n    }\n  }\n\n  return true;\n}\n","import { LineChange, Range, TextDocument } from \"vscode\";\n\nexport function applyLineChanges(\n  original: TextDocument,\n  modified: TextDocument,\n  diffs: LineChange[]\n): string {\n  const result: string[] = [];\n  let currentLine = 0;\n\n  for (const diff of diffs) {\n    const isInsertion = diff.originalEndLineNumber === 0;\n    const isDeletion = diff.modifiedEndLineNumber === 0;\n\n    result.push(\n      original.getText(\n        new Range(\n          currentLine,\n          0,\n          isInsertion\n            ? diff.originalStartLineNumber\n            : diff.originalStartLineNumber - 1,\n          0\n        )\n      )\n    );\n\n    if (!isDeletion) {\n      let fromLine = diff.modifiedStartLineNumber - 1;\n      let fromCharacter = 0;\n\n      if (isInsertion && diff.originalStartLineNumber === original.lineCount) {\n        fromLine = original.lineCount - 1;\n        fromCharacter = original.lineAt(fromLine).range.end.character;\n      }\n\n      result.push(\n        modified.getText(\n          new Range(fromLine, fromCharacter, diff.modifiedEndLineNumber, 0)\n        )\n      );\n    }\n\n    currentLine = isInsertion\n      ? diff.originalStartLineNumber\n      : diff.originalEndLineNumber;\n  }\n\n  result.push(\n    original.getText(new Range(currentLine, 0, original.lineCount, 0))\n  );\n\n  return result.join(\"\");\n}\n","import { Uri } from \"vscode\";\nimport { Command } from \"./command\";\n\nexport class AddToIgnoreExplorer extends Command {\n  constructor() {\n    super(\"svn.addToIgnoreExplorer\", { repository: true });\n  }\n\n  public async execute(mainUri?: Uri, allUris?: Uri[]) {\n    if (!allUris || allUris.length === 0) {\n      return;\n    }\n\n    return this.addToIgnore(allUris);\n  }\n}\n","import { SourceControlResourceState } from \"vscode\";\nimport { Command } from \"./command\";\n\nexport class AddToIgnoreSCM extends Command {\n  constructor() {\n    super(\"svn.addToIgnoreSCM\");\n  }\n\n  public async execute(...resourceStates: SourceControlResourceState[]) {\n    const selection = await this.getResourceStates(resourceStates);\n\n    if (selection.length === 0) {\n      return;\n    }\n\n    const uris = selection.map(resource => resource.resourceUri);\n\n    return this.addToIgnore(uris);\n  }\n}\n","import { commands, SourceControlResourceState, Uri, window } from \"vscode\";\nimport { inputSwitchChangelist } from \"../changelistItems\";\nimport { Model } from \"../model\";\nimport { Resource } from \"../resource\";\nimport { normalizePath } from \"../util\";\nimport { Command } from \"./command\";\n\nexport class ChangeList extends Command {\n  constructor() {\n    super(\"svn.changelist\");\n  }\n\n  public async execute(...args: any[]) {\n    let uris: Uri[];\n\n    if (args[0] instanceof Resource) {\n      uris = (args as Resource[]).map(resource => resource.resourceUri);\n    } else if (args[0] instanceof Uri) {\n      uris = args[1] as Uri[];\n    } else {\n      console.error(\"Unhandled type for changelist command\");\n      return;\n    }\n\n    const model = (await commands.executeCommand(\"svn.getModel\", \"\")) as Model;\n\n    const promiseArray = uris.map(\n      async uri => await model.getRepositoryFromUri(uri)\n    );\n    let repositories = await Promise.all(promiseArray);\n    repositories = repositories.filter(repository => repository);\n\n    if (repositories.length === 0) {\n      window.showErrorMessage(\n        \"Files are not under version control and cannot be added to a change list\"\n      );\n      return;\n    }\n\n    const uniqueRepositories = Array.from(new Set(repositories));\n\n    if (uniqueRepositories.length !== 1) {\n      window.showErrorMessage(\n        \"Unable to add files from different repositories to change list\"\n      );\n      return;\n    }\n\n    if (repositories.length !== uris.length) {\n      window.showErrorMessage(\n        \"Some Files are not under version control and cannot be added to a change list\"\n      );\n      return;\n    }\n\n    const repository = repositories[0];\n\n    if (!repository) {\n      return;\n    }\n\n    const paths = uris.map(uri => uri.fsPath);\n    let canRemove = false;\n\n    repository.changelists.forEach((group, changelist) => {\n      if (\n        group.resourceStates.some(state => {\n          return paths.some(path => {\n            return (\n              normalizePath(path) === normalizePath(state.resourceUri.path)\n            );\n          });\n        })\n      ) {\n        canRemove = true;\n        return false;\n      }\n    });\n\n    const changelistName = await inputSwitchChangelist(repository, canRemove);\n\n    if (!changelistName && changelistName !== false) {\n      return;\n    }\n\n    if (changelistName === false) {\n      try {\n        await repository.removeChangelist(paths);\n      } catch (error) {\n        console.log(error);\n        window.showErrorMessage(\n          `Unable to remove file \"${paths.join(\",\")}\" from changelist`\n        );\n      }\n    } else {\n      try {\n        await repository.addChangelist(paths, changelistName);\n        window.showInformationMessage(\n          `Added files \"${paths.join(\",\")}\" to changelist \"${changelistName}\"`\n        );\n      } catch (error) {\n        console.log(error);\n        window.showErrorMessage(\n          `Unable to add file \"${paths.join(\n            \",\"\n          )}\" to changelist \"${changelistName}\"`\n        );\n      }\n    }\n  }\n}\n","import { QuickPickItem, SourceControlResourceGroup } from \"vscode\";\n\nexport default class ChangeListItem implements QuickPickItem {\n  constructor(protected group: SourceControlResourceGroup) {}\n\n  get label(): string {\n    return this.group.id.replace(/^changelist-/, \"\");\n  }\n\n  get description(): string {\n    return this.group.label;\n  }\n  get resourceGroup(): SourceControlResourceGroup {\n    return this.group;\n  }\n}\n","import { QuickPickItem } from \"vscode\";\n\nexport default class IgnoredChangeListItem implements QuickPickItem {\n  constructor(protected _id: string) {}\n\n  get label(): string {\n    return this._id;\n  }\n\n  get description(): string {\n    return \"Ignored on commit\";\n  }\n}\n","import { QuickPickItem } from \"vscode\";\n\nexport default class NewChangeListItem implements QuickPickItem {\n  get label(): string {\n    return \"$(plus) New changelist\";\n  }\n\n  get description(): string {\n    return \"Create a new change list\";\n  }\n}\n","import { QuickPickItem } from \"vscode\";\n\nexport default class RemoveChangeListItem implements QuickPickItem {\n  get label(): string {\n    return \"$(dash) Remove changelist\";\n  }\n\n  get description(): string {\n    return \"Remove changelist of file(s)\";\n  }\n}\n","import * as os from \"os\";\nimport * as path from \"path\";\nimport { commands, ProgressLocation, Uri, window, workspace } from \"vscode\";\nimport { IAuth, ICpOptions } from \"../common/types\";\nimport { getBranchName } from \"../helpers/branch\";\nimport { configuration } from \"../helpers/configuration\";\nimport { Model } from \"../model\";\nimport { svnErrorCodes } from \"../svn\";\nimport { Command } from \"./command\";\n\nexport class Checkout extends Command {\n  constructor() {\n    super(\"svn.checkout\");\n  }\n\n  public async execute(url?: string) {\n    if (!url) {\n      url = await window.showInputBox({\n        prompt: \"Repository URL\",\n        ignoreFocusOut: true\n      });\n    }\n\n    if (!url) {\n      return;\n    }\n\n    let defaultCheckoutDirectory =\n      configuration.get<string>(\"defaultCheckoutDirectory\") || os.homedir();\n    defaultCheckoutDirectory = defaultCheckoutDirectory.replace(\n      /^~/,\n      os.homedir()\n    );\n\n    const uris = await window.showOpenDialog({\n      canSelectFiles: false,\n      canSelectFolders: true,\n      canSelectMany: false,\n      defaultUri: Uri.file(defaultCheckoutDirectory),\n      openLabel: \"Select Repository Location\"\n    });\n\n    if (!uris || uris.length === 0) {\n      return;\n    }\n\n    const uri = uris[0];\n    const parentPath = uri.fsPath;\n\n    let folderName: string | undefined;\n\n    // Get folder name from branch\n    const branch = getBranchName(url);\n    if (branch) {\n      const baseUrl = url.replace(/\\//g, \"/\").replace(branch.path, \"\");\n      folderName = path.basename(baseUrl);\n    }\n\n    folderName = await window.showInputBox({\n      prompt: \"Folder name\",\n      value: folderName,\n      ignoreFocusOut: true\n    });\n\n    if (!folderName) {\n      return;\n    }\n\n    const repositoryPath = path.join(parentPath, folderName);\n\n    // Use Notification location if supported\n    let location = ProgressLocation.Window;\n    if ((ProgressLocation as any).Notification) {\n      location = (ProgressLocation as any).Notification;\n    }\n\n    const progressOptions = {\n      location,\n      title: `Checkout svn repository '${url}'...`,\n      cancellable: true\n    };\n\n    let attempt = 0;\n\n    const opt: ICpOptions = {};\n\n    while (true) {\n      attempt++;\n      try {\n        await window.withProgress(progressOptions, async () => {\n          const model = (await commands.executeCommand(\n            \"svn.getModel\",\n            \"\"\n          )) as Model;\n          const args = [\"checkout\", url, repositoryPath];\n          await model.svn.exec(parentPath, args, opt);\n        });\n        break;\n      } catch (err) {\n        if (\n          err.svnErrorCode === svnErrorCodes.AuthorizationFailed &&\n          attempt <= 3\n        ) {\n          const auth = (await commands.executeCommand(\n            \"svn.promptAuth\",\n            opt.username\n          )) as IAuth;\n          if (auth) {\n            opt.username = auth.username;\n            opt.password = auth.password;\n            continue;\n          }\n        }\n        throw err;\n      }\n    }\n\n    const choices = [];\n    let message = \"Would you like to open the checked out repository?\";\n    const open = \"Open Repository\";\n    choices.push(open);\n\n    const addToWorkspace = \"Add to Workspace\";\n    if (\n      workspace.workspaceFolders &&\n      (workspace as any).updateWorkspaceFolders // For VSCode >= 1.21\n    ) {\n      message =\n        \"Would you like to open the checked out repository, or add it to the current workspace?\";\n      choices.push(addToWorkspace);\n    }\n\n    const result = await window.showInformationMessage(message, ...choices);\n\n    const openFolder = result === open;\n\n    if (openFolder) {\n      commands.executeCommand(\"vscode.openFolder\", Uri.file(repositoryPath));\n    } else if (result === addToWorkspace) {\n      // For VSCode >= 1.21\n      (workspace as any).updateWorkspaceFolders(\n        workspace.workspaceFolders!.length,\n        0,\n        {\n          uri: Uri.file(repositoryPath)\n        }\n      );\n    }\n  }\n}\n","import { QuickPickItem } from \"vscode\";\nimport { IBranchItem } from \"../common/types\";\nimport { ISvnListItem } from \"../common/types\";\nimport { memoize } from \"../decorators\";\nimport { getBranchName } from \"../helpers/branch\";\n\nexport default class FolderItem implements QuickPickItem {\n  constructor(protected dir: ISvnListItem, protected parent?: string) {}\n\n  get label(): string {\n    if (this.branch) {\n      return `$(git-branch) ${this.dir.name}`;\n    }\n    return `$(file-directory) ${this.dir.name}`;\n  }\n\n  get description(): string {\n    return `r${this.dir.commit.revision} | ${\n      this.dir.commit.author\n    } | ${new Date(this.dir.commit.date).toLocaleString()}`;\n  }\n\n  get path(): string {\n    if (this.parent) {\n      return `${this.parent}/${this.dir.name}`;\n    }\n    return this.dir.name;\n  }\n\n  @memoize\n  get branch(): IBranchItem | undefined {\n    return getBranchName(this.path);\n  }\n}\n","import { QuickPickItem } from \"vscode\";\n\nexport default class NewFolderItem implements QuickPickItem {\n  constructor(protected _parent: string) {}\n\n  get label(): string {\n    return `$(plus) Create new branch`;\n  }\n\n  get description(): string {\n    return `Create new branch in \"${this._parent}\"`;\n  }\n}\n","import { QuickPickItem } from \"vscode\";\n\nexport default class ParentFolderItem implements QuickPickItem {\n  constructor(public path?: string) {}\n\n  get label(): string {\n    return `$(arrow-left) back to /${this.path}`;\n  }\n  get description(): string {\n    return `Back to parent`;\n  }\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","\nexports = module.exports = function(bytes)\n{\n    var i = 0;\n    while(i < bytes.length)\n    {\n        if(     (// ASCII\n                    bytes[i] == 0x09 ||\n                    bytes[i] == 0x0A ||\n                    bytes[i] == 0x0D ||\n                    (0x20 <= bytes[i] && bytes[i] <= 0x7E)\n                )\n          ) {\n              i += 1;\n              continue;\n          }\n\n        if(     (// non-overlong 2-byte\n                    (0xC2 <= bytes[i] && bytes[i] <= 0xDF) &&\n                    (0x80 <= bytes[i+1] && bytes[i+1] <= 0xBF)\n                )\n          ) {\n              i += 2;\n              continue;\n          }\n\n        if(     (// excluding overlongs\n                    bytes[i] == 0xE0 &&\n                    (0xA0 <= bytes[i + 1] && bytes[i + 1] <= 0xBF) &&\n                    (0x80 <= bytes[i + 2] && bytes[i + 2] <= 0xBF)\n                ) ||\n                (// straight 3-byte\n                 ((0xE1 <= bytes[i] && bytes[i] <= 0xEC) ||\n                  bytes[i] == 0xEE ||\n                  bytes[i] == 0xEF) &&\n                 (0x80 <= bytes[i + 1] && bytes[i+1] <= 0xBF) &&\n                 (0x80 <= bytes[i+2] && bytes[i+2] <= 0xBF)\n                ) ||\n                (// excluding surrogates\n                 bytes[i] == 0xED &&\n                 (0x80 <= bytes[i+1] && bytes[i+1] <= 0x9F) &&\n                 (0x80 <= bytes[i+2] && bytes[i+2] <= 0xBF)\n                )\n          ) {\n              i += 3;\n              continue;\n          }\n\n        if(     (// planes 1-3\n                    bytes[i] == 0xF0 &&\n                    (0x90 <= bytes[i + 1] && bytes[i + 1] <= 0xBF) &&\n                    (0x80 <= bytes[i + 2] && bytes[i + 2] <= 0xBF) &&\n                    (0x80 <= bytes[i + 3] && bytes[i + 3] <= 0xBF)\n                ) ||\n                (// planes 4-15\n                 (0xF1 <= bytes[i] && bytes[i] <= 0xF3) &&\n                 (0x80 <= bytes[i + 1] && bytes[i + 1] <= 0xBF) &&\n                 (0x80 <= bytes[i + 2] && bytes[i + 2] <= 0xBF) &&\n                 (0x80 <= bytes[i + 3] && bytes[i + 3] <= 0xBF)\n                ) ||\n                (// plane 16\n                 bytes[i] == 0xF4 &&\n                 (0x80 <= bytes[i + 1] && bytes[i + 1] <= 0x8F) &&\n                 (0x80 <= bytes[i + 2] && bytes[i + 2] <= 0xBF) &&\n                 (0x80 <= bytes[i + 3] && bytes[i + 3] <= 0xBF)\n                )\n          ) {\n              i += 4;\n              continue;\n          }\n\n        return false;\n    }\n\n    return true;\n}\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.Constants = {\n    _debug      : false,\n\n    detecting   : 0,\n    foundIt     : 1,\n    notMe       : 2,\n\n    start       : 0,\n    error       : 1,\n    itsMe       : 2,\n\n    MINIMUM_THRESHOLD   : 0.20,\n    SHORTCUT_THRESHOLD  : 0.95\n};\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.CodingStateMachine = function(sm) {\n    var self = this;\n\n    function init(sm) {\n        self._mModel = sm;\n        self._mCurrentBytePos = 0;\n        self._mCurrentCharLen = 0;\n        self.reset();\n    }\n\n    this.reset = function() {\n        this._mCurrentState = jschardet.Constants.start;\n    }\n\n    this.nextState = function(c) {\n        // for each byte we get its class\n        // if it is first byte, we also get byte length\n        var byteCls = this._mModel.classTable[c.charCodeAt(0)];\n        if( this._mCurrentState == jschardet.Constants.start ) {\n            this._mCurrentBytePos = 0;\n            this._mCurrentCharLen = this._mModel.charLenTable[byteCls];\n        }\n        // from byte's class and stateTable, we get its next state\n        this._mCurrentState = this._mModel.stateTable[this._mCurrentState * this._mModel.classFactor + byteCls];\n        this._mCurrentBytePos++;\n        return this._mCurrentState;\n    }\n\n    this.getCurrentCharLen = function() {\n        return this._mCurrentCharLen;\n    }\n\n    this.getCodingStateMachine = function() {\n        return this._mModel.name;\n    }\n\n    init(sm);\n}\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\nvar consts = jschardet.Constants;\n\njschardet.HZ_cls = [\n    1,0,0,0,0,0,0,0,  // 00 - 07\n    0,0,0,0,0,0,0,0,  // 08 - 0f\n    0,0,0,0,0,0,0,0,  // 10 - 17\n    0,0,0,1,0,0,0,0,  // 18 - 1f\n    0,0,0,0,0,0,0,0,  // 20 - 27\n    0,0,0,0,0,0,0,0,  // 28 - 2f\n    0,0,0,0,0,0,0,0,  // 30 - 37\n    0,0,0,0,0,0,0,0,  // 38 - 3f\n    0,0,0,0,0,0,0,0,  // 40 - 47\n    0,0,0,0,0,0,0,0,  // 48 - 4f\n    0,0,0,0,0,0,0,0,  // 50 - 57\n    0,0,0,0,0,0,0,0,  // 58 - 5f\n    0,0,0,0,0,0,0,0,  // 60 - 67\n    0,0,0,0,0,0,0,0,  // 68 - 6f\n    0,0,0,0,0,0,0,0,  // 70 - 77\n    0,0,0,4,0,5,2,0,  // 78 - 7f\n    1,1,1,1,1,1,1,1,  // 80 - 87\n    1,1,1,1,1,1,1,1,  // 88 - 8f\n    1,1,1,1,1,1,1,1,  // 90 - 97\n    1,1,1,1,1,1,1,1,  // 98 - 9f\n    1,1,1,1,1,1,1,1,  // a0 - a7\n    1,1,1,1,1,1,1,1,  // a8 - af\n    1,1,1,1,1,1,1,1,  // b0 - b7\n    1,1,1,1,1,1,1,1,  // b8 - bf\n    1,1,1,1,1,1,1,1,  // c0 - c7\n    1,1,1,1,1,1,1,1,  // c8 - cf\n    1,1,1,1,1,1,1,1,  // d0 - d7\n    1,1,1,1,1,1,1,1,  // d8 - df\n    1,1,1,1,1,1,1,1,  // e0 - e7\n    1,1,1,1,1,1,1,1,  // e8 - ef\n    1,1,1,1,1,1,1,1,  // f0 - f7\n    1,1,1,1,1,1,1,1   // f8 - ff\n];\n\njschardet.HZ_st = [\n    consts.start,consts.error,    3,consts.start,consts.start,consts.start,consts.error,consts.error, // 00-07\n    consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, // 08-0f\n    consts.itsMe,consts.itsMe,consts.error,consts.error,consts.start,consts.start,    4,consts.error, // 10-17\n        5,consts.error,    6,consts.error,    5,    5,    4,consts.error, // 18-1f\n        4,consts.error,    4,    4,    4,consts.error,    4,consts.error, // 20-27\n        4,consts.itsMe,consts.start,consts.start,consts.start,consts.start,consts.start,consts.start  // 28-2f\n];\n\njschardet.HZCharLenTable = [0, 0, 0, 0, 0, 0];\n\njschardet.HZSMModel = {\n    \"classTable\"    : jschardet.HZ_cls,\n    \"classFactor\"   : 6,\n    \"stateTable\"    : jschardet.HZ_st,\n    \"charLenTable\"  : jschardet.HZCharLenTable,\n    \"name\"          : \"HZ-GB-2312\"\n};\n\njschardet.ISO2022CN_cls = [\n    2,0,0,0,0,0,0,0,  // 00 - 07\n    0,0,0,0,0,0,0,0,  // 08 - 0f\n    0,0,0,0,0,0,0,0,  // 10 - 17\n    0,0,0,1,0,0,0,0,  // 18 - 1f\n    0,0,0,0,0,0,0,0,  // 20 - 27\n    0,3,0,0,0,0,0,0,  // 28 - 2f\n    0,0,0,0,0,0,0,0,  // 30 - 37\n    0,0,0,0,0,0,0,0,  // 38 - 3f\n    0,0,0,4,0,0,0,0,  // 40 - 47\n    0,0,0,0,0,0,0,0,  // 48 - 4f\n    0,0,0,0,0,0,0,0,  // 50 - 57\n    0,0,0,0,0,0,0,0,  // 58 - 5f\n    0,0,0,0,0,0,0,0,  // 60 - 67\n    0,0,0,0,0,0,0,0,  // 68 - 6f\n    0,0,0,0,0,0,0,0,  // 70 - 77\n    0,0,0,0,0,0,0,0,  // 78 - 7f\n    2,2,2,2,2,2,2,2,  // 80 - 87\n    2,2,2,2,2,2,2,2,  // 88 - 8f\n    2,2,2,2,2,2,2,2,  // 90 - 97\n    2,2,2,2,2,2,2,2,  // 98 - 9f\n    2,2,2,2,2,2,2,2,  // a0 - a7\n    2,2,2,2,2,2,2,2,  // a8 - af\n    2,2,2,2,2,2,2,2,  // b0 - b7\n    2,2,2,2,2,2,2,2,  // b8 - bf\n    2,2,2,2,2,2,2,2,  // c0 - c7\n    2,2,2,2,2,2,2,2,  // c8 - cf\n    2,2,2,2,2,2,2,2,  // d0 - d7\n    2,2,2,2,2,2,2,2,  // d8 - df\n    2,2,2,2,2,2,2,2,  // e0 - e7\n    2,2,2,2,2,2,2,2,  // e8 - ef\n    2,2,2,2,2,2,2,2,  // f0 - f7\n    2,2,2,2,2,2,2,2   // f8 - ff\n];\n\njschardet.ISO2022CN_st = [\n    consts.start,    3,consts.error,consts.start,consts.start,consts.start,consts.start,consts.start, // 00-07\n    consts.start,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, // 08-0f\n    consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, // 10-17\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.error,consts.error,consts.error,    4,consts.error, // 18-1f\n    consts.error,consts.error,consts.error,consts.itsMe,consts.error,consts.error,consts.error,consts.error, // 20-27\n        5,    6,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, // 28-2f\n    consts.error,consts.error,consts.error,consts.itsMe,consts.error,consts.error,consts.error,consts.error, // 30-37\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.error,consts.start  // 38-3f\n];\n\njschardet.ISO2022CNCharLenTable = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\njschardet.ISO2022CNSMModel = {\n    \"classTable\"    : jschardet.ISO2022CN_cls,\n    \"classFactor\"   : 9,\n    \"stateTable\"    : jschardet.ISO2022CN_st,\n    \"charLenTable\"  : jschardet.ISO2022CNCharLenTable,\n    \"name\"          : \"ISO-2022-CN\"\n};\n\njschardet.ISO2022JP_cls = [\n    2,0,0,0,0,0,0,0,  // 00 - 07\n    0,0,0,0,0,0,2,2,  // 08 - 0f\n    0,0,0,0,0,0,0,0,  // 10 - 17\n    0,0,0,1,0,0,0,0,  // 18 - 1f\n    0,0,0,0,7,0,0,0,  // 20 - 27\n    3,0,0,0,0,0,0,0,  // 28 - 2f\n    0,0,0,0,0,0,0,0,  // 30 - 37\n    0,0,0,0,0,0,0,0,  // 38 - 3f\n    6,0,4,0,8,0,0,0,  // 40 - 47\n    0,9,5,0,0,0,0,0,  // 48 - 4f\n    0,0,0,0,0,0,0,0,  // 50 - 57\n    0,0,0,0,0,0,0,0,  // 58 - 5f\n    0,0,0,0,0,0,0,0,  // 60 - 67\n    0,0,0,0,0,0,0,0,  // 68 - 6f\n    0,0,0,0,0,0,0,0,  // 70 - 77\n    0,0,0,0,0,0,0,0,  // 78 - 7f\n    2,2,2,2,2,2,2,2,  // 80 - 87\n    2,2,2,2,2,2,2,2,  // 88 - 8f\n    2,2,2,2,2,2,2,2,  // 90 - 97\n    2,2,2,2,2,2,2,2,  // 98 - 9f\n    2,2,2,2,2,2,2,2,  // a0 - a7\n    2,2,2,2,2,2,2,2,  // a8 - af\n    2,2,2,2,2,2,2,2,  // b0 - b7\n    2,2,2,2,2,2,2,2,  // b8 - bf\n    2,2,2,2,2,2,2,2,  // c0 - c7\n    2,2,2,2,2,2,2,2,  // c8 - cf\n    2,2,2,2,2,2,2,2,  // d0 - d7\n    2,2,2,2,2,2,2,2,  // d8 - df\n    2,2,2,2,2,2,2,2,  // e0 - e7\n    2,2,2,2,2,2,2,2,  // e8 - ef\n    2,2,2,2,2,2,2,2,  // f0 - f7\n    2,2,2,2,2,2,2,2   // f8 - ff\n];\n\njschardet.ISO2022JP_st = [\n    consts.start,    3,consts.error,consts.start,consts.start,consts.start,consts.start,consts.start, // 00-07\n    consts.start,consts.start,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, // 08-0f\n    consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, // 10-17\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.error,consts.error, // 18-1f\n    consts.error,    5,consts.error,consts.error,consts.error,    4,consts.error,consts.error, // 20-27\n    consts.error,consts.error,consts.error,    6,consts.itsMe,consts.error,consts.itsMe,consts.error, // 28-2f\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe, // 30-37\n    consts.error,consts.error,consts.error,consts.itsMe,consts.error,consts.error,consts.error,consts.error, // 38-3f\n    consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.error,consts.start,consts.start  // 40-47\n];\n\njschardet.ISO2022JPCharLenTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\njschardet.ISO2022JPSMModel = {\n    \"classTable\"    : jschardet.ISO2022JP_cls,\n    \"classFactor\"   : 10,\n    \"stateTable\"    : jschardet.ISO2022JP_st,\n    \"charLenTable\"  : jschardet.ISO2022JPCharLenTable,\n    \"name\"          : \"ISO-2022-JP\"\n};\n\njschardet.ISO2022KR_cls = [\n    2,0,0,0,0,0,0,0,  // 00 - 07\n    0,0,0,0,0,0,0,0,  // 08 - 0f\n    0,0,0,0,0,0,0,0,  // 10 - 17\n    0,0,0,1,0,0,0,0,  // 18 - 1f\n    0,0,0,0,3,0,0,0,  // 20 - 27\n    0,4,0,0,0,0,0,0,  // 28 - 2f\n    0,0,0,0,0,0,0,0,  // 30 - 37\n    0,0,0,0,0,0,0,0,  // 38 - 3f\n    0,0,0,5,0,0,0,0,  // 40 - 47\n    0,0,0,0,0,0,0,0,  // 48 - 4f\n    0,0,0,0,0,0,0,0,  // 50 - 57\n    0,0,0,0,0,0,0,0,  // 58 - 5f\n    0,0,0,0,0,0,0,0,  // 60 - 67\n    0,0,0,0,0,0,0,0,  // 68 - 6f\n    0,0,0,0,0,0,0,0,  // 70 - 77\n    0,0,0,0,0,0,0,0,  // 78 - 7f\n    2,2,2,2,2,2,2,2,  // 80 - 87\n    2,2,2,2,2,2,2,2,  // 88 - 8f\n    2,2,2,2,2,2,2,2,  // 90 - 97\n    2,2,2,2,2,2,2,2,  // 98 - 9f\n    2,2,2,2,2,2,2,2,  // a0 - a7\n    2,2,2,2,2,2,2,2,  // a8 - af\n    2,2,2,2,2,2,2,2,  // b0 - b7\n    2,2,2,2,2,2,2,2,  // b8 - bf\n    2,2,2,2,2,2,2,2,  // c0 - c7\n    2,2,2,2,2,2,2,2,  // c8 - cf\n    2,2,2,2,2,2,2,2,  // d0 - d7\n    2,2,2,2,2,2,2,2,  // d8 - df\n    2,2,2,2,2,2,2,2,  // e0 - e7\n    2,2,2,2,2,2,2,2,  // e8 - ef\n    2,2,2,2,2,2,2,2,  // f0 - f7\n    2,2,2,2,2,2,2,2   // f8 - ff\n];\n\njschardet.ISO2022KR_st = [\n    consts.start,    3,consts.error,consts.start,consts.start,consts.start,consts.error,consts.error, // 00-07\n    consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, // 08-0f\n    consts.itsMe,consts.itsMe,consts.error,consts.error,consts.error,    4,consts.error,consts.error, // 10-17\n    consts.error,consts.error,consts.error,consts.error,    5,consts.error,consts.error,consts.error, // 18-1f\n    consts.error,consts.error,consts.error,consts.itsMe,consts.start,consts.start,consts.start,consts.start  // 20-27\n];\n\njschardet.ISO2022KRCharLenTable = [0, 0, 0, 0, 0, 0];\n\njschardet.ISO2022KRSMModel = {\n    \"classTable\"    : jschardet.ISO2022KR_cls,\n    \"classFactor\"   : 6,\n    \"stateTable\"    : jschardet.ISO2022KR_st,\n    \"charLenTable\"  : jschardet.ISO2022KRCharLenTable,\n    \"name\"          : \"ISO-2022-KR\"\n};\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\nvar consts = jschardet.Constants;\n\n// BIG5\n\njschardet.BIG5_cls = [\n    1,1,1,1,1,1,1,1,  // 00 - 07    //allow 0x00 as legal value\n    1,1,1,1,1,1,0,0,  // 08 - 0f\n    1,1,1,1,1,1,1,1,  // 10 - 17\n    1,1,1,0,1,1,1,1,  // 18 - 1f\n    1,1,1,1,1,1,1,1,  // 20 - 27\n    1,1,1,1,1,1,1,1,  // 28 - 2f\n    1,1,1,1,1,1,1,1,  // 30 - 37\n    1,1,1,1,1,1,1,1,  // 38 - 3f\n    2,2,2,2,2,2,2,2,  // 40 - 47\n    2,2,2,2,2,2,2,2,  // 48 - 4f\n    2,2,2,2,2,2,2,2,  // 50 - 57\n    2,2,2,2,2,2,2,2,  // 58 - 5f\n    2,2,2,2,2,2,2,2,  // 60 - 67\n    2,2,2,2,2,2,2,2,  // 68 - 6f\n    2,2,2,2,2,2,2,2,  // 70 - 77\n    2,2,2,2,2,2,2,1,  // 78 - 7f\n    4,4,4,4,4,4,4,4,  // 80 - 87\n    4,4,4,4,4,4,4,4,  // 88 - 8f\n    4,4,4,4,4,4,4,4,  // 90 - 97\n    4,4,4,4,4,4,4,4,  // 98 - 9f\n    4,3,3,3,3,3,3,3,  // a0 - a7\n    3,3,3,3,3,3,3,3,  // a8 - af\n    3,3,3,3,3,3,3,3,  // b0 - b7\n    3,3,3,3,3,3,3,3,  // b8 - bf\n    3,3,3,3,3,3,3,3,  // c0 - c7\n    3,3,3,3,3,3,3,3,  // c8 - cf\n    3,3,3,3,3,3,3,3,  // d0 - d7\n    3,3,3,3,3,3,3,3,  // d8 - df\n    3,3,3,3,3,3,3,3,  // e0 - e7\n    3,3,3,3,3,3,3,3,  // e8 - ef\n    3,3,3,3,3,3,3,3,  // f0 - f7\n    3,3,3,3,3,3,3,0   // f8 - ff\n];\n\njschardet.BIG5_st = [\n    consts.error,consts.start,consts.start,    3,consts.error,consts.error,consts.error,consts.error, //00-07\n    consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.error, //08-0f\n    consts.error,consts.start,consts.start,consts.start,consts.start,consts.start,consts.start,consts.start  //10-17\n];\n\njschardet.Big5CharLenTable = [0, 1, 1, 2, 0];\n\njschardet.Big5SMModel = {\n    \"classTable\"    : jschardet.BIG5_cls,\n    \"classFactor\"   : 5,\n    \"stateTable\"    : jschardet.BIG5_st,\n    \"charLenTable\"  : jschardet.Big5CharLenTable,\n    \"name\"          : \"Big5\"\n};\n\n// EUC-JP\n\njschardet.EUCJP_cls = [\n    4,4,4,4,4,4,4,4,  // 00 - 07\n    4,4,4,4,4,4,5,5,  // 08 - 0f\n    4,4,4,4,4,4,4,4,  // 10 - 17\n    4,4,4,5,4,4,4,4,  // 18 - 1f\n    4,4,4,4,4,4,4,4,  // 20 - 27\n    4,4,4,4,4,4,4,4,  // 28 - 2f\n    4,4,4,4,4,4,4,4,  // 30 - 37\n    4,4,4,4,4,4,4,4,  // 38 - 3f\n    4,4,4,4,4,4,4,4,  // 40 - 47\n    4,4,4,4,4,4,4,4,  // 48 - 4f\n    4,4,4,4,4,4,4,4,  // 50 - 57\n    4,4,4,4,4,4,4,4,  // 58 - 5f\n    4,4,4,4,4,4,4,4,  // 60 - 67\n    4,4,4,4,4,4,4,4,  // 68 - 6f\n    4,4,4,4,4,4,4,4,  // 70 - 77\n    4,4,4,4,4,4,4,4,  // 78 - 7f\n    5,5,5,5,5,5,5,5,  // 80 - 87\n    5,5,5,5,5,5,1,3,  // 88 - 8f\n    5,5,5,5,5,5,5,5,  // 90 - 97\n    5,5,5,5,5,5,5,5,  // 98 - 9f\n    5,2,2,2,2,2,2,2,  // a0 - a7\n    2,2,2,2,2,2,2,2,  // a8 - af\n    2,2,2,2,2,2,2,2,  // b0 - b7\n    2,2,2,2,2,2,2,2,  // b8 - bf\n    2,2,2,2,2,2,2,2,  // c0 - c7\n    2,2,2,2,2,2,2,2,  // c8 - cf\n    2,2,2,2,2,2,2,2,  // d0 - d7\n    2,2,2,2,2,2,2,2,  // d8 - df\n    0,0,0,0,0,0,0,0,  // e0 - e7\n    0,0,0,0,0,0,0,0,  // e8 - ef\n    0,0,0,0,0,0,0,0,  // f0 - f7\n    0,0,0,0,0,0,0,5   // f8 - ff\n];\n\njschardet.EUCJP_st = [\n         3,    4,    3,    5,consts.start,consts.error,consts.error,consts.error, //00-07\n     consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, //08-0f\n     consts.itsMe,consts.itsMe,consts.start,consts.error,consts.start,consts.error,consts.error,consts.error, //10-17\n     consts.error,consts.error,consts.start,consts.error,consts.error,consts.error,    3,consts.error, //18-1f\n         3,consts.error,consts.error,consts.error,consts.start,consts.start,consts.start,consts.start  //20-27\n];\n\njschardet.EUCJPCharLenTable = [2, 2, 2, 3, 1, 0];\n\njschardet.EUCJPSMModel = {\n    \"classTable\"    : jschardet.EUCJP_cls,\n    \"classFactor\"   : 6,\n    \"stateTable\"    : jschardet.EUCJP_st,\n    \"charLenTable\"  : jschardet.EUCJPCharLenTable,\n    \"name\"          : \"EUC-JP\"\n};\n\n// EUC-KR\n\njschardet.EUCKR_cls  = [\n    1,1,1,1,1,1,1,1,  // 00 - 07\n    1,1,1,1,1,1,0,0,  // 08 - 0f\n    1,1,1,1,1,1,1,1,  // 10 - 17\n    1,1,1,0,1,1,1,1,  // 18 - 1f\n    1,1,1,1,1,1,1,1,  // 20 - 27\n    1,1,1,1,1,1,1,1,  // 28 - 2f\n    1,1,1,1,1,1,1,1,  // 30 - 37\n    1,1,1,1,1,1,1,1,  // 38 - 3f\n    1,1,1,1,1,1,1,1,  // 40 - 47\n    1,1,1,1,1,1,1,1,  // 48 - 4f\n    1,1,1,1,1,1,1,1,  // 50 - 57\n    1,1,1,1,1,1,1,1,  // 58 - 5f\n    1,1,1,1,1,1,1,1,  // 60 - 67\n    1,1,1,1,1,1,1,1,  // 68 - 6f\n    1,1,1,1,1,1,1,1,  // 70 - 77\n    1,1,1,1,1,1,1,1,  // 78 - 7f\n    0,0,0,0,0,0,0,0,  // 80 - 87\n    0,0,0,0,0,0,0,0,  // 88 - 8f\n    0,0,0,0,0,0,0,0,  // 90 - 97\n    0,0,0,0,0,0,0,0,  // 98 - 9f\n    0,2,2,2,2,2,2,2,  // a0 - a7\n    2,2,2,2,2,3,3,3,  // a8 - af\n    2,2,2,2,2,2,2,2,  // b0 - b7\n    2,2,2,2,2,2,2,2,  // b8 - bf\n    2,2,2,2,2,2,2,2,  // c0 - c7\n    2,3,2,2,2,2,2,2,  // c8 - cf\n    2,2,2,2,2,2,2,2,  // d0 - d7\n    2,2,2,2,2,2,2,2,  // d8 - df\n    2,2,2,2,2,2,2,2,  // e0 - e7\n    2,2,2,2,2,2,2,2,  // e8 - ef\n    2,2,2,2,2,2,2,2,  // f0 - f7\n    2,2,2,2,2,2,2,0   // f8 - ff\n];\n\njschardet.EUCKR_st = [\n    consts.error,consts.start,    3,consts.error,consts.error,consts.error,consts.error,consts.error, //00-07\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.error,consts.error,consts.start,consts.start  //08-0f\n];\n\njschardet.EUCKRCharLenTable = [0, 1, 2, 0];\n\njschardet.EUCKRSMModel = {\n    \"classTable\"    : jschardet.EUCKR_cls,\n    \"classFactor\"   : 4,\n    \"stateTable\"    : jschardet.EUCKR_st,\n    \"charLenTable\"  : jschardet.EUCKRCharLenTable,\n    \"name\"          : \"EUC-KR\"\n};\n\n// EUC-TW\n\njschardet.EUCTW_cls = [\n    2,2,2,2,2,2,2,2,  // 00 - 07\n    2,2,2,2,2,2,0,0,  // 08 - 0f\n    2,2,2,2,2,2,2,2,  // 10 - 17\n    2,2,2,0,2,2,2,2,  // 18 - 1f\n    2,2,2,2,2,2,2,2,  // 20 - 27\n    2,2,2,2,2,2,2,2,  // 28 - 2f\n    2,2,2,2,2,2,2,2,  // 30 - 37\n    2,2,2,2,2,2,2,2,  // 38 - 3f\n    2,2,2,2,2,2,2,2,  // 40 - 47\n    2,2,2,2,2,2,2,2,  // 48 - 4f\n    2,2,2,2,2,2,2,2,  // 50 - 57\n    2,2,2,2,2,2,2,2,  // 58 - 5f\n    2,2,2,2,2,2,2,2,  // 60 - 67\n    2,2,2,2,2,2,2,2,  // 68 - 6f\n    2,2,2,2,2,2,2,2,  // 70 - 77\n    2,2,2,2,2,2,2,2,  // 78 - 7f\n    0,0,0,0,0,0,0,0,  // 80 - 87\n    0,0,0,0,0,0,6,0,  // 88 - 8f\n    0,0,0,0,0,0,0,0,  // 90 - 97\n    0,0,0,0,0,0,0,0,  // 98 - 9f\n    0,3,4,4,4,4,4,4,  // a0 - a7\n    5,5,1,1,1,1,1,1,  // a8 - af\n    1,1,1,1,1,1,1,1,  // b0 - b7\n    1,1,1,1,1,1,1,1,  // b8 - bf\n    1,1,3,1,3,3,3,3,  // c0 - c7\n    3,3,3,3,3,3,3,3,  // c8 - cf\n    3,3,3,3,3,3,3,3,  // d0 - d7\n    3,3,3,3,3,3,3,3,  // d8 - df\n    3,3,3,3,3,3,3,3,  // e0 - e7\n    3,3,3,3,3,3,3,3,  // e8 - ef\n    3,3,3,3,3,3,3,3,  // f0 - f7\n    3,3,3,3,3,3,3,0   // f8 - ff\n];\n\njschardet.EUCTW_st = [\n    consts.error,consts.error,consts.start,    3,    3,    3,    4,consts.error, //00-07\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe, //08-0f\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.error,consts.start,consts.error, //10-17\n    consts.start,consts.start,consts.start,consts.error,consts.error,consts.error,consts.error,consts.error, //18-1f\n        5,consts.error,consts.error,consts.error,consts.start,consts.error,consts.start,consts.start, //20-27\n    consts.start,consts.error,consts.start,consts.start,consts.start,consts.start,consts.start,consts.start  //28-2f\n];\n\njschardet.EUCTWCharLenTable = [0, 0, 1, 2, 2, 2, 3];\n\njschardet.EUCTWSMModel = {\n    \"classTable\"    : jschardet.EUCTW_cls,\n    \"classFactor\"   : 7,\n    \"stateTable\"    : jschardet.EUCTW_st,\n    \"charLenTable\"  : jschardet.EUCTWCharLenTable,\n    \"name\"          : \"x-euc-tw\"\n};\n\n// GB2312\n\njschardet.GB2312_cls = [\n    1,1,1,1,1,1,1,1,  // 00 - 07\n    1,1,1,1,1,1,0,0,  // 08 - 0f\n    1,1,1,1,1,1,1,1,  // 10 - 17\n    1,1,1,0,1,1,1,1,  // 18 - 1f\n    1,1,1,1,1,1,1,1,  // 20 - 27\n    1,1,1,1,1,1,1,1,  // 28 - 2f\n    3,3,3,3,3,3,3,3,  // 30 - 37\n    3,3,1,1,1,1,1,1,  // 38 - 3f\n    2,2,2,2,2,2,2,2,  // 40 - 47\n    2,2,2,2,2,2,2,2,  // 48 - 4f\n    2,2,2,2,2,2,2,2,  // 50 - 57\n    2,2,2,2,2,2,2,2,  // 58 - 5f\n    2,2,2,2,2,2,2,2,  // 60 - 67\n    2,2,2,2,2,2,2,2,  // 68 - 6f\n    2,2,2,2,2,2,2,2,  // 70 - 77\n    2,2,2,2,2,2,2,4,  // 78 - 7f\n    5,6,6,6,6,6,6,6,  // 80 - 87\n    6,6,6,6,6,6,6,6,  // 88 - 8f\n    6,6,6,6,6,6,6,6,  // 90 - 97\n    6,6,6,6,6,6,6,6,  // 98 - 9f\n    6,6,6,6,6,6,6,6,  // a0 - a7\n    6,6,6,6,6,6,6,6,  // a8 - af\n    6,6,6,6,6,6,6,6,  // b0 - b7\n    6,6,6,6,6,6,6,6,  // b8 - bf\n    6,6,6,6,6,6,6,6,  // c0 - c7\n    6,6,6,6,6,6,6,6,  // c8 - cf\n    6,6,6,6,6,6,6,6,  // d0 - d7\n    6,6,6,6,6,6,6,6,  // d8 - df\n    6,6,6,6,6,6,6,6,  // e0 - e7\n    6,6,6,6,6,6,6,6,  // e8 - ef\n    6,6,6,6,6,6,6,6,  // f0 - f7\n    6,6,6,6,6,6,6,0   // f8 - ff\n];\n\njschardet.GB2312_st = [\n    consts.error,consts.start,consts.start,consts.start,consts.start,consts.start,    3,consts.error, //00-07\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe, //08-0f\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.error,consts.error,consts.start, //10-17\n        4,consts.error,consts.start,consts.start,consts.error,consts.error,consts.error,consts.error, //18-1f\n    consts.error,consts.error,    5,consts.error,consts.error,consts.error,consts.itsMe,consts.error, //20-27\n    consts.error,consts.error,consts.start,consts.start,consts.start,consts.start,consts.start,consts.start  //28-2f\n];\n\n// To be accurate, the length of class 6 can be either 2 or 4.\n// But it is not necessary to discriminate between the two since\n// it is used for frequency analysis only, and we are validing\n// each code range there as well. So it is safe to set it to be\n// 2 here.\njschardet.GB2312CharLenTable = [0, 1, 1, 1, 1, 1, 2];\n\njschardet.GB2312SMModel = {\n    \"classTable\"    : jschardet.GB2312_cls,\n    \"classFactor\"   : 7,\n    \"stateTable\"    : jschardet.GB2312_st,\n    \"charLenTable\"  : jschardet.GB2312CharLenTable,\n    \"name\"          : \"GB2312\"\n};\n\n// Shift_JIS\n\njschardet.SJIS_cls = [\n    1,1,1,1,1,1,1,1,  // 00 - 07\n    1,1,1,1,1,1,0,0,  // 08 - 0f\n    1,1,1,1,1,1,1,1,  // 10 - 17\n    1,1,1,0,1,1,1,1,  // 18 - 1f\n    1,1,1,1,1,1,1,1,  // 20 - 27\n    1,1,1,1,1,1,1,1,  // 28 - 2f\n    1,1,1,1,1,1,1,1,  // 30 - 37\n    1,1,1,1,1,1,1,1,  // 38 - 3f\n    2,2,2,2,2,2,2,2,  // 40 - 47\n    2,2,2,2,2,2,2,2,  // 48 - 4f\n    2,2,2,2,2,2,2,2,  // 50 - 57\n    2,2,2,2,2,2,2,2,  // 58 - 5f\n    2,2,2,2,2,2,2,2,  // 60 - 67\n    2,2,2,2,2,2,2,2,  // 68 - 6f\n    2,2,2,2,2,2,2,2,  // 70 - 77\n    2,2,2,2,2,2,2,1,  // 78 - 7f\n    3,3,3,3,3,3,3,3,  // 80 - 87\n    3,3,3,3,3,3,3,3,  // 88 - 8f\n    3,3,3,3,3,3,3,3,  // 90 - 97\n    3,3,3,3,3,3,3,3,  // 98 - 9f\n    // 0xa0 is illegal in sjis encoding, but some pages does\n    // contain such byte. We need to be more consts.error forgiven.\n    2,2,2,2,2,2,2,2,  // a0 - a7\n    2,2,2,2,2,2,2,2,  // a8 - af\n    2,2,2,2,2,2,2,2,  // b0 - b7\n    2,2,2,2,2,2,2,2,  // b8 - bf\n    2,2,2,2,2,2,2,2,  // c0 - c7\n    2,2,2,2,2,2,2,2,  // c8 - cf\n    2,2,2,2,2,2,2,2,  // d0 - d7\n    2,2,2,2,2,2,2,2,  // d8 - df\n    3,3,3,3,3,3,3,3,  // e0 - e7\n    3,3,3,3,3,4,4,4,  // e8 - ef\n    3,3,3,3,3,3,3,3,  // f0 - f7\n    3,3,3,3,3,0,0,0   // f8 - ff\n];\n\njschardet.SJIS_st = [\n    consts.error,consts.start,consts.start,    3,consts.error,consts.error,consts.error,consts.error, //00-07\n    consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, //08-0f\n    consts.itsMe,consts.itsMe,consts.error,consts.error,consts.start,consts.start,consts.start,consts.start  //10-17\n];\n\njschardet.SJISCharLenTable = [0, 1, 1, 2, 0, 0];\n\njschardet.SJISSMModel = {\n    \"classTable\"    : jschardet.SJIS_cls,\n    \"classFactor\"   : 6,\n    \"stateTable\"    : jschardet.SJIS_st,\n    \"charLenTable\"  : jschardet.SJISCharLenTable,\n    \"name\"          : \"Shift_JIS\"\n};\n\n//UCS2-BE\n\njschardet.UCS2BE_cls = [\n    0,0,0,0,0,0,0,0,  // 00 - 07\n    0,0,1,0,0,2,0,0,  // 08 - 0f\n    0,0,0,0,0,0,0,0,  // 10 - 17\n    0,0,0,3,0,0,0,0,  // 18 - 1f\n    0,0,0,0,0,0,0,0,  // 20 - 27\n    0,3,3,3,3,3,0,0,  // 28 - 2f\n    0,0,0,0,0,0,0,0,  // 30 - 37\n    0,0,0,0,0,0,0,0,  // 38 - 3f\n    0,0,0,0,0,0,0,0,  // 40 - 47\n    0,0,0,0,0,0,0,0,  // 48 - 4f\n    0,0,0,0,0,0,0,0,  // 50 - 57\n    0,0,0,0,0,0,0,0,  // 58 - 5f\n    0,0,0,0,0,0,0,0,  // 60 - 67\n    0,0,0,0,0,0,0,0,  // 68 - 6f\n    0,0,0,0,0,0,0,0,  // 70 - 77\n    0,0,0,0,0,0,0,0,  // 78 - 7f\n    0,0,0,0,0,0,0,0,  // 80 - 87\n    0,0,0,0,0,0,0,0,  // 88 - 8f\n    0,0,0,0,0,0,0,0,  // 90 - 97\n    0,0,0,0,0,0,0,0,  // 98 - 9f\n    0,0,0,0,0,0,0,0,  // a0 - a7\n    0,0,0,0,0,0,0,0,  // a8 - af\n    0,0,0,0,0,0,0,0,  // b0 - b7\n    0,0,0,0,0,0,0,0,  // b8 - bf\n    0,0,0,0,0,0,0,0,  // c0 - c7\n    0,0,0,0,0,0,0,0,  // c8 - cf\n    0,0,0,0,0,0,0,0,  // d0 - d7\n    0,0,0,0,0,0,0,0,  // d8 - df\n    0,0,0,0,0,0,0,0,  // e0 - e7\n    0,0,0,0,0,0,0,0,  // e8 - ef\n    0,0,0,0,0,0,0,0,  // f0 - f7\n    0,0,0,0,0,0,4,5   // f8 - ff\n];\n\njschardet.UCS2BE_st  = [\n         5,    7,    7,consts.error,    4,    3,consts.error,consts.error, //00-07\n     consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, //08-0f\n     consts.itsMe,consts.itsMe,    6,    6,    6,    6,consts.error,consts.error, //10-17\n         6,    6,    6,    6,    6,consts.itsMe,    6,    6, //18-1f\n         6,    6,    6,    6,    5,    7,    7,consts.error, //20-27\n         5,    8,    6,    6,consts.error,    6,    6,    6, //28-2f\n         6,    6,    6,    6,consts.error,consts.error,consts.start,consts.start  //30-37\n];\n\njschardet.UCS2BECharLenTable = [2, 2, 2, 0, 2, 2];\n\njschardet.UCS2BESMModel = {\n    \"classTable\"    : jschardet.UCS2BE_cls,\n    \"classFactor\"   : 6,\n    \"stateTable\"    : jschardet.UCS2BE_st,\n    \"charLenTable\"  : jschardet.UCS2BECharLenTable,\n    \"name\"          : \"UTF-16BE\"\n};\n\n// UCS2-LE\n\njschardet.UCS2LE_cls = [\n    0,0,0,0,0,0,0,0,  // 00 - 07\n    0,0,1,0,0,2,0,0,  // 08 - 0f\n    0,0,0,0,0,0,0,0,  // 10 - 17\n    0,0,0,3,0,0,0,0,  // 18 - 1f\n    0,0,0,0,0,0,0,0,  // 20 - 27\n    0,3,3,3,3,3,0,0,  // 28 - 2f\n    0,0,0,0,0,0,0,0,  // 30 - 37\n    0,0,0,0,0,0,0,0,  // 38 - 3f\n    0,0,0,0,0,0,0,0,  // 40 - 47\n    0,0,0,0,0,0,0,0,  // 48 - 4f\n    0,0,0,0,0,0,0,0,  // 50 - 57\n    0,0,0,0,0,0,0,0,  // 58 - 5f\n    0,0,0,0,0,0,0,0,  // 60 - 67\n    0,0,0,0,0,0,0,0,  // 68 - 6f\n    0,0,0,0,0,0,0,0,  // 70 - 77\n    0,0,0,0,0,0,0,0,  // 78 - 7f\n    0,0,0,0,0,0,0,0,  // 80 - 87\n    0,0,0,0,0,0,0,0,  // 88 - 8f\n    0,0,0,0,0,0,0,0,  // 90 - 97\n    0,0,0,0,0,0,0,0,  // 98 - 9f\n    0,0,0,0,0,0,0,0,  // a0 - a7\n    0,0,0,0,0,0,0,0,  // a8 - af\n    0,0,0,0,0,0,0,0,  // b0 - b7\n    0,0,0,0,0,0,0,0,  // b8 - bf\n    0,0,0,0,0,0,0,0,  // c0 - c7\n    0,0,0,0,0,0,0,0,  // c8 - cf\n    0,0,0,0,0,0,0,0,  // d0 - d7\n    0,0,0,0,0,0,0,0,  // d8 - df\n    0,0,0,0,0,0,0,0,  // e0 - e7\n    0,0,0,0,0,0,0,0,  // e8 - ef\n    0,0,0,0,0,0,0,0,  // f0 - f7\n    0,0,0,0,0,0,4,5   // f8 - ff\n];\n\njschardet.UCS2LE_st = [\n         6,    6,    7,    6,    4,    3,consts.error,consts.error, //00-07\n     consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, //08-0f\n     consts.itsMe,consts.itsMe,    5,    5,    5,consts.error,consts.itsMe,consts.error, //10-17\n         5,    5,    5,consts.error,    5,consts.error,    6,    6, //18-1f\n         7,    6,    8,    8,    5,    5,    5,consts.error, //20-27\n         5,    5,    5,consts.error,consts.error,consts.error,    5,    5, //28-2f\n         5,    5,    5,consts.error,    5,consts.error,consts.start,consts.start  //30-37\n];\n\njschardet.UCS2LECharLenTable = [2, 2, 2, 2, 2, 2];\n\njschardet.UCS2LESMModel = {\n    \"classTable\"    : jschardet.UCS2LE_cls,\n    \"classFactor\"   : 6,\n    \"stateTable\"    : jschardet.UCS2LE_st,\n    \"charLenTable\"  : jschardet.UCS2LECharLenTable,\n    \"name\"          : \"UTF-16LE\"\n};\n\n// UTF-8\n\njschardet.UTF8_cls = [\n    1,1,1,1,1,1,1,1,  // 00 - 07  //allow 0x00 as a legal value\n    1,1,1,1,1,1,0,0,  // 08 - 0f\n    1,1,1,1,1,1,1,1,  // 10 - 17\n    1,1,1,0,1,1,1,1,  // 18 - 1f\n    1,1,1,1,1,1,1,1,  // 20 - 27\n    1,1,1,1,1,1,1,1,  // 28 - 2f\n    1,1,1,1,1,1,1,1,  // 30 - 37\n    1,1,1,1,1,1,1,1,  // 38 - 3f\n    1,1,1,1,1,1,1,1,  // 40 - 47\n    1,1,1,1,1,1,1,1,  // 48 - 4f\n    1,1,1,1,1,1,1,1,  // 50 - 57\n    1,1,1,1,1,1,1,1,  // 58 - 5f\n    1,1,1,1,1,1,1,1,  // 60 - 67\n    1,1,1,1,1,1,1,1,  // 68 - 6f\n    1,1,1,1,1,1,1,1,  // 70 - 77\n    1,1,1,1,1,1,1,1,  // 78 - 7f\n    2,2,2,2,3,3,3,3,  // 80 - 87\n    4,4,4,4,4,4,4,4,  // 88 - 8f\n    4,4,4,4,4,4,4,4,  // 90 - 97\n    4,4,4,4,4,4,4,4,  // 98 - 9f\n    5,5,5,5,5,5,5,5,  // a0 - a7\n    5,5,5,5,5,5,5,5,  // a8 - af\n    5,5,5,5,5,5,5,5,  // b0 - b7\n    5,5,5,5,5,5,5,5,  // b8 - bf\n    0,0,6,6,6,6,6,6,  // c0 - c7\n    6,6,6,6,6,6,6,6,  // c8 - cf\n    6,6,6,6,6,6,6,6,  // d0 - d7\n    6,6,6,6,6,6,6,6,  // d8 - df\n    7,8,8,8,8,8,8,8,  // e0 - e7\n    8,8,8,8,8,9,8,8,  // e8 - ef\n    10,11,11,11,11,11,11,11,  // f0 - f7\n    12,13,13,13,14,15,0,0    // f8 - ff\n];\n\njschardet.UTF8_st = [\n    consts.error,consts.start,consts.error,consts.error,consts.error,consts.error,    12,  10, //00-07\n        9,    11,    8,    7,    6,    5,    4,   3, //08-0f\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //10-17\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //18-1f\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, //20-27\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, //28-2f\n    consts.error,consts.error,    5,    5,    5,    5,consts.error,consts.error, //30-37\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //38-3f\n    consts.error,consts.error,consts.error,    5,    5,    5,consts.error,consts.error, //40-47\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //48-4f\n    consts.error,consts.error,    7,    7,    7,    7,consts.error,consts.error, //50-57\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //58-5f\n    consts.error,consts.error,consts.error,consts.error,    7,    7,consts.error,consts.error, //60-67\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //68-6f\n    consts.error,consts.error,    9,    9,    9,    9,consts.error,consts.error, //70-77\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //78-7f\n    consts.error,consts.error,consts.error,consts.error,consts.error,    9,consts.error,consts.error, //80-87\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //88-8f\n    consts.error,consts.error,   12,   12,   12,   12,consts.error,consts.error, //90-97\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //98-9f\n    consts.error,consts.error,consts.error,consts.error,consts.error,   12,consts.error,consts.error, //a0-a7\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //a8-af\n    consts.error,consts.error,   12,   12,   12,consts.error,consts.error,consts.error, //b0-b7\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //b8-bf\n    consts.error,consts.error,consts.start,consts.start,consts.start,consts.start,consts.error,consts.error, //c0-c7\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error  //c8-cf\n];\n\njschardet.UTF8CharLenTable = [0, 1, 0, 0, 0, 0, 2, 3, 3, 3, 4, 4, 5, 5, 6, 6];\n\njschardet.UTF8SMModel = {\n    \"classTable\"    : jschardet.UTF8_cls,\n    \"classFactor\"   : 16,\n    \"stateTable\"    : jschardet.UTF8_st,\n    \"charLenTable\"  : jschardet.UTF8CharLenTable,\n    \"name\"          : \"UTF-8\"\n};\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.CharSetProber = function() {\n    this.reset = function() {\n        this._mState = jschardet.Constants.detecting;\n    }\n\n    this.getCharsetName = function() {\n        return null;\n    }\n\n    this.feed = function(aBuf) {\n    }\n\n    this.getState = function() {\n        return this._mState;\n    }\n\n    this.getConfidence = function() {\n        return 0.0;\n    }\n\n    this.filterHighBitOnly = function(aBuf) {\n        aBuf = aBuf.replace(/[\\x00-\\x7F]+/g, \" \");\n        return aBuf;\n    }\n\n    this.filterWithoutEnglishLetters = function(aBuf) {\n        aBuf = aBuf.replace(/[A-Za-z]+/g, \" \");\n        return aBuf;\n    }\n\n    // Input: aBuf is a string containing all different types of characters\n    // Output: a string that contains all alphabetic letters, high-byte characters, and word immediately preceding `>`, but nothing else within `<>`\n    // Ex: input - '¡£º <div blah blah> abcdef</div> apples! * and oranges 9jd93jd>'\n    //     output - '¡£º blah div apples and oranges jd jd '\n    this.filterWithEnglishLetters = function(aBuf) {\n        var result = '';\n        var inTag = false;\n        var prev = 0;\n\n        for (var curr = 0; curr < aBuf.length; curr++) {\n          var c = aBuf[curr];\n\n          if (c == '>') {\n            inTag = false;\n          } else if (c == '<') {\n            inTag = true;\n          }\n\n          var isAlpha = /[a-zA-Z]/.test(c);\n          var isASCII = /^[\\x00-\\x7F]*$/.test(c);\n\n          if (isASCII && !isAlpha) {\n            if (curr > prev && !inTag) {\n              result = result + aBuf.substring(prev, curr) + ' ';\n            }\n\n            prev = curr + 1;\n          }\n        }\n\n        if (!inTag) {\n          result = result + aBuf.substring(prev);\n        }\n\n        return result;\n    }\n}\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.MultiByteCharSetProber = function() {\n    jschardet.CharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mDistributionAnalyzer = null;\n        self._mCodingSM = null;\n        //self._mLastChar = [\"\\x00\", \"\\x00\"];\n        self._mLastChar = \"\\x00\\x00\";\n    }\n\n    this.reset = function() {\n        jschardet.MultiByteCharSetProber.prototype.reset.apply(this);\n        if( this._mCodingSM ) {\n            this._mCodingSM.reset();\n        }\n        if( this._mDistributionAnalyzer ) {\n            this._mDistributionAnalyzer.reset();\n        }\n        //this._mLastChar = [\"\\x00\", \"\\x00\"];\n        this._mLastChar = \"\\x00\\x00\";\n    }\n\n    this.getCharsetName = function() {\n    }\n\n    this.feed = function(aBuf) {\n        var aLen = aBuf.length;\n        for( var i = 0; i < aLen; i++ ) {\n            var codingState = this._mCodingSM.nextState(aBuf[i]);\n            if( codingState == jschardet.Constants.error ) {\n                if( jschardet.Constants._debug ) {\n                    jschardet.log(this.getCharsetName() + \" prober hit error at byte \" + i + \"\\n\");\n                }\n                this._mState = jschardet.Constants.notMe;\n                break;\n            } else if( codingState == jschardet.Constants.itsMe ) {\n                this._mState = jschardet.Constants.foundIt;\n                break;\n            } else if( codingState == jschardet.Constants.start ) {\n                var charLen = this._mCodingSM.getCurrentCharLen();\n                if( i == 0 ) {\n                    this._mLastChar[1] = aBuf[0];\n                    this._mDistributionAnalyzer.feed(this._mLastChar, charLen);\n                } else {\n                    this._mDistributionAnalyzer.feed(aBuf.slice(i-1,i+1), charLen);\n                }\n            }\n        }\n\n        this._mLastChar[0] = aBuf[aLen - 1];\n\n        if( this.getState() == jschardet.Constants.detecting ) {\n            if( this._mDistributionAnalyzer.gotEnoughData() &&\n                this.getConfidence() > jschardet.Constants.SHORTCUT_THRESHOLD ) {\n                this._mState = jschardet.Constants.foundIt;\n            }\n        }\n\n        return this.getState();\n    }\n\n    this.getConfidence = function() {\n        return this._mDistributionAnalyzer.getConfidence();\n    }\n}\njschardet.MultiByteCharSetProber.prototype = new jschardet.CharSetProber();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\n// Sampling from about 20M text materials include literature and computer technology\n//\n// Japanese frequency table, applied to both S-JIS and EUC-JP\n// They are sorted in order.\n//\n// 128  --> 0.77094\n// 256  --> 0.85710\n// 512  --> 0.92635\n// 1024 --> 0.97130\n// 2048 --> 0.99431\n//\n// Ideal Distribution Ratio = 0.92635 / (1-0.92635) = 12.58\n// Random Distribution Ration = 512 / (2965+62+83+86-512) = 0.191\n//\n// Typical Distribution Ratio, 25% of IDR\n\njschardet.JIS_TYPICAL_DISTRIBUTION_RATIO = 3.0;\n\njschardet.JIS_TABLE_SIZE = 4368;\n\njschardet.JISCharToFreqOrder = [\n  40,   1,   6, 182, 152, 180, 295,2127, 285, 381,3295,4304,3068,4606,3165,3510, //   16\n3511,1822,2785,4607,1193,2226,5070,4608, 171,2996,1247,  18, 179,5071, 856,1661, //   32\n1262,5072, 619, 127,3431,3512,3230,1899,1700, 232, 228,1294,1298, 284, 283,2041, //   48\n2042,1061,1062,  48,  49,  44,  45, 433, 434,1040,1041, 996, 787,2997,1255,4305, //   64\n2108,4609,1684,1648,5073,5074,5075,5076,5077,5078,3687,5079,4610,5080,3927,3928, //   80\n5081,3296,3432, 290,2285,1471,2187,5082,2580,2825,1303,2140,1739,1445,2691,3375, //   96\n1691,3297,4306,4307,4611, 452,3376,1182,2713,3688,3069,4308,5083,5084,5085,5086, //  112\n5087,5088,5089,5090,5091,5092,5093,5094,5095,5096,5097,5098,5099,5100,5101,5102, //  128\n5103,5104,5105,5106,5107,5108,5109,5110,5111,5112,4097,5113,5114,5115,5116,5117, //  144\n5118,5119,5120,5121,5122,5123,5124,5125,5126,5127,5128,5129,5130,5131,5132,5133, //  160\n5134,5135,5136,5137,5138,5139,5140,5141,5142,5143,5144,5145,5146,5147,5148,5149, //  176\n5150,5151,5152,4612,5153,5154,5155,5156,5157,5158,5159,5160,5161,5162,5163,5164, //  192\n5165,5166,5167,5168,5169,5170,5171,5172,5173,5174,5175,1472, 598, 618, 820,1205, //  208\n1309,1412,1858,1307,1692,5176,5177,5178,5179,5180,5181,5182,1142,1452,1234,1172, //  224\n1875,2043,2149,1793,1382,2973, 925,2404,1067,1241, 960,1377,2935,1491, 919,1217, //  240\n1865,2030,1406,1499,2749,4098,5183,5184,5185,5186,5187,5188,2561,4099,3117,1804, //  256\n2049,3689,4309,3513,1663,5189,3166,3118,3298,1587,1561,3433,5190,3119,1625,2998, //  272\n3299,4613,1766,3690,2786,4614,5191,5192,5193,5194,2161,  26,3377,   2,3929,  20, //  288\n3691,  47,4100,  50,  17,  16,  35, 268,  27, 243,  42, 155,  24, 154,  29, 184, //  304\n   4,  91,  14,  92,  53, 396,  33, 289,   9,  37,  64, 620,  21,  39, 321,   5, //  320\n  12,  11,  52,  13,   3, 208, 138,   0,   7,  60, 526, 141, 151,1069, 181, 275, //  336\n1591,  83, 132,1475, 126, 331, 829,  15,  69, 160,  59,  22, 157,  55,1079, 312, //  352\n 109,  38,  23,  25,  10,  19,  79,5195,  61, 382,1124,   8,  30,5196,5197,5198, //  368\n5199,5200,5201,5202,5203,5204,5205,5206,  89,  62,  74,  34,2416, 112, 139, 196, //  384\n 271, 149,  84, 607, 131, 765,  46,  88, 153, 683,  76, 874, 101, 258,  57,  80, //  400\n  32, 364, 121,1508, 169,1547,  68, 235, 145,2999,  41, 360,3027,  70,  63,  31, //  416\n  43, 259, 262,1383,  99, 533, 194,  66,  93, 846, 217, 192,  56, 106,  58, 565, //  432\n 280, 272, 311, 256, 146,  82, 308,  71, 100, 128, 214, 655, 110, 261, 104,1140, //  448\n  54,  51,  36,  87,  67,3070, 185,2618,2936,2020,  28,1066,2390,2059,5207,5208, //  464\n5209,5210,5211,5212,5213,5214,5215,5216,4615,5217,5218,5219,5220,5221,5222,5223, //  480\n5224,5225,5226,5227,5228,5229,5230,5231,5232,5233,5234,5235,5236,3514,5237,5238, //  496\n5239,5240,5241,5242,5243,5244,2297,2031,4616,4310,3692,5245,3071,5246,3598,5247, //  512\n4617,3231,3515,5248,4101,4311,4618,3808,4312,4102,5249,4103,4104,3599,5250,5251, //  528\n5252,5253,5254,5255,5256,5257,5258,5259,5260,5261,5262,5263,5264,5265,5266,5267, //  544\n5268,5269,5270,5271,5272,5273,5274,5275,5276,5277,5278,5279,5280,5281,5282,5283, //  560\n5284,5285,5286,5287,5288,5289,5290,5291,5292,5293,5294,5295,5296,5297,5298,5299, //  576\n5300,5301,5302,5303,5304,5305,5306,5307,5308,5309,5310,5311,5312,5313,5314,5315, //  592\n5316,5317,5318,5319,5320,5321,5322,5323,5324,5325,5326,5327,5328,5329,5330,5331, //  608\n5332,5333,5334,5335,5336,5337,5338,5339,5340,5341,5342,5343,5344,5345,5346,5347, //  624\n5348,5349,5350,5351,5352,5353,5354,5355,5356,5357,5358,5359,5360,5361,5362,5363, //  640\n5364,5365,5366,5367,5368,5369,5370,5371,5372,5373,5374,5375,5376,5377,5378,5379, //  656\n5380,5381, 363, 642,2787,2878,2788,2789,2316,3232,2317,3434,2011, 165,1942,3930, //  672\n3931,3932,3933,5382,4619,5383,4620,5384,5385,5386,5387,5388,5389,5390,5391,5392, //  688\n5393,5394,5395,5396,5397,5398,5399,5400,5401,5402,5403,5404,5405,5406,5407,5408, //  704\n5409,5410,5411,5412,5413,5414,5415,5416,5417,5418,5419,5420,5421,5422,5423,5424, //  720\n5425,5426,5427,5428,5429,5430,5431,5432,5433,5434,5435,5436,5437,5438,5439,5440, //  736\n5441,5442,5443,5444,5445,5446,5447,5448,5449,5450,5451,5452,5453,5454,5455,5456, //  752\n5457,5458,5459,5460,5461,5462,5463,5464,5465,5466,5467,5468,5469,5470,5471,5472, //  768\n5473,5474,5475,5476,5477,5478,5479,5480,5481,5482,5483,5484,5485,5486,5487,5488, //  784\n5489,5490,5491,5492,5493,5494,5495,5496,5497,5498,5499,5500,5501,5502,5503,5504, //  800\n5505,5506,5507,5508,5509,5510,5511,5512,5513,5514,5515,5516,5517,5518,5519,5520, //  816\n5521,5522,5523,5524,5525,5526,5527,5528,5529,5530,5531,5532,5533,5534,5535,5536, //  832\n5537,5538,5539,5540,5541,5542,5543,5544,5545,5546,5547,5548,5549,5550,5551,5552, //  848\n5553,5554,5555,5556,5557,5558,5559,5560,5561,5562,5563,5564,5565,5566,5567,5568, //  864\n5569,5570,5571,5572,5573,5574,5575,5576,5577,5578,5579,5580,5581,5582,5583,5584, //  880\n5585,5586,5587,5588,5589,5590,5591,5592,5593,5594,5595,5596,5597,5598,5599,5600, //  896\n5601,5602,5603,5604,5605,5606,5607,5608,5609,5610,5611,5612,5613,5614,5615,5616, //  912\n5617,5618,5619,5620,5621,5622,5623,5624,5625,5626,5627,5628,5629,5630,5631,5632, //  928\n5633,5634,5635,5636,5637,5638,5639,5640,5641,5642,5643,5644,5645,5646,5647,5648, //  944\n5649,5650,5651,5652,5653,5654,5655,5656,5657,5658,5659,5660,5661,5662,5663,5664, //  960\n5665,5666,5667,5668,5669,5670,5671,5672,5673,5674,5675,5676,5677,5678,5679,5680, //  976\n5681,5682,5683,5684,5685,5686,5687,5688,5689,5690,5691,5692,5693,5694,5695,5696, //  992\n5697,5698,5699,5700,5701,5702,5703,5704,5705,5706,5707,5708,5709,5710,5711,5712, // 1008\n5713,5714,5715,5716,5717,5718,5719,5720,5721,5722,5723,5724,5725,5726,5727,5728, // 1024\n5729,5730,5731,5732,5733,5734,5735,5736,5737,5738,5739,5740,5741,5742,5743,5744, // 1040\n5745,5746,5747,5748,5749,5750,5751,5752,5753,5754,5755,5756,5757,5758,5759,5760, // 1056\n5761,5762,5763,5764,5765,5766,5767,5768,5769,5770,5771,5772,5773,5774,5775,5776, // 1072\n5777,5778,5779,5780,5781,5782,5783,5784,5785,5786,5787,5788,5789,5790,5791,5792, // 1088\n5793,5794,5795,5796,5797,5798,5799,5800,5801,5802,5803,5804,5805,5806,5807,5808, // 1104\n5809,5810,5811,5812,5813,5814,5815,5816,5817,5818,5819,5820,5821,5822,5823,5824, // 1120\n5825,5826,5827,5828,5829,5830,5831,5832,5833,5834,5835,5836,5837,5838,5839,5840, // 1136\n5841,5842,5843,5844,5845,5846,5847,5848,5849,5850,5851,5852,5853,5854,5855,5856, // 1152\n5857,5858,5859,5860,5861,5862,5863,5864,5865,5866,5867,5868,5869,5870,5871,5872, // 1168\n5873,5874,5875,5876,5877,5878,5879,5880,5881,5882,5883,5884,5885,5886,5887,5888, // 1184\n5889,5890,5891,5892,5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904, // 1200\n5905,5906,5907,5908,5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920, // 1216\n5921,5922,5923,5924,5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,5936, // 1232\n5937,5938,5939,5940,5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,5952, // 1248\n5953,5954,5955,5956,5957,5958,5959,5960,5961,5962,5963,5964,5965,5966,5967,5968, // 1264\n5969,5970,5971,5972,5973,5974,5975,5976,5977,5978,5979,5980,5981,5982,5983,5984, // 1280\n5985,5986,5987,5988,5989,5990,5991,5992,5993,5994,5995,5996,5997,5998,5999,6000, // 1296\n6001,6002,6003,6004,6005,6006,6007,6008,6009,6010,6011,6012,6013,6014,6015,6016, // 1312\n6017,6018,6019,6020,6021,6022,6023,6024,6025,6026,6027,6028,6029,6030,6031,6032, // 1328\n6033,6034,6035,6036,6037,6038,6039,6040,6041,6042,6043,6044,6045,6046,6047,6048, // 1344\n6049,6050,6051,6052,6053,6054,6055,6056,6057,6058,6059,6060,6061,6062,6063,6064, // 1360\n6065,6066,6067,6068,6069,6070,6071,6072,6073,6074,6075,6076,6077,6078,6079,6080, // 1376\n6081,6082,6083,6084,6085,6086,6087,6088,6089,6090,6091,6092,6093,6094,6095,6096, // 1392\n6097,6098,6099,6100,6101,6102,6103,6104,6105,6106,6107,6108,6109,6110,6111,6112, // 1408\n6113,6114,2044,2060,4621, 997,1235, 473,1186,4622, 920,3378,6115,6116, 379,1108, // 1424\n4313,2657,2735,3934,6117,3809, 636,3233, 573,1026,3693,3435,2974,3300,2298,4105, // 1440\n 854,2937,2463, 393,2581,2417, 539, 752,1280,2750,2480, 140,1161, 440, 708,1569, // 1456\n 665,2497,1746,1291,1523,3000, 164,1603, 847,1331, 537,1997, 486, 508,1693,2418, // 1472\n1970,2227, 878,1220, 299,1030, 969, 652,2751, 624,1137,3301,2619,  65,3302,2045, // 1488\n1761,1859,3120,1930,3694,3516, 663,1767, 852, 835,3695, 269, 767,2826,2339,1305, // 1504\n 896,1150, 770,1616,6118, 506,1502,2075,1012,2519, 775,2520,2975,2340,2938,4314, // 1520\n3028,2086,1224,1943,2286,6119,3072,4315,2240,1273,1987,3935,1557, 175, 597, 985, // 1536\n3517,2419,2521,1416,3029, 585, 938,1931,1007,1052,1932,1685,6120,3379,4316,4623, // 1552\n 804, 599,3121,1333,2128,2539,1159,1554,2032,3810, 687,2033,2904, 952, 675,1467, // 1568\n3436,6121,2241,1096,1786,2440,1543,1924, 980,1813,2228, 781,2692,1879, 728,1918, // 1584\n3696,4624, 548,1950,4625,1809,1088,1356,3303,2522,1944, 502, 972, 373, 513,2827, // 1600\n 586,2377,2391,1003,1976,1631,6122,2464,1084, 648,1776,4626,2141, 324, 962,2012, // 1616\n2177,2076,1384, 742,2178,1448,1173,1810, 222, 102, 301, 445, 125,2420, 662,2498, // 1632\n 277, 200,1476,1165,1068, 224,2562,1378,1446, 450,1880, 659, 791, 582,4627,2939, // 1648\n3936,1516,1274, 555,2099,3697,1020,1389,1526,3380,1762,1723,1787,2229, 412,2114, // 1664\n1900,2392,3518, 512,2597, 427,1925,2341,3122,1653,1686,2465,2499, 697, 330, 273, // 1680\n 380,2162, 951, 832, 780, 991,1301,3073, 965,2270,3519, 668,2523,2636,1286, 535, // 1696\n1407, 518, 671, 957,2658,2378, 267, 611,2197,3030,6123, 248,2299, 967,1799,2356, // 1712\n 850,1418,3437,1876,1256,1480,2828,1718,6124,6125,1755,1664,2405,6126,4628,2879, // 1728\n2829, 499,2179, 676,4629, 557,2329,2214,2090, 325,3234, 464, 811,3001, 992,2342, // 1744\n2481,1232,1469, 303,2242, 466,1070,2163, 603,1777,2091,4630,2752,4631,2714, 322, // 1760\n2659,1964,1768, 481,2188,1463,2330,2857,3600,2092,3031,2421,4632,2318,2070,1849, // 1776\n2598,4633,1302,2254,1668,1701,2422,3811,2905,3032,3123,2046,4106,1763,1694,4634, // 1792\n1604, 943,1724,1454, 917, 868,2215,1169,2940, 552,1145,1800,1228,1823,1955, 316, // 1808\n1080,2510, 361,1807,2830,4107,2660,3381,1346,1423,1134,4108,6127, 541,1263,1229, // 1824\n1148,2540, 545, 465,1833,2880,3438,1901,3074,2482, 816,3937, 713,1788,2500, 122, // 1840\n1575, 195,1451,2501,1111,6128, 859, 374,1225,2243,2483,4317, 390,1033,3439,3075, // 1856\n2524,1687, 266, 793,1440,2599, 946, 779, 802, 507, 897,1081, 528,2189,1292, 711, // 1872\n1866,1725,1167,1640, 753, 398,2661,1053, 246, 348,4318, 137,1024,3440,1600,2077, // 1888\n2129, 825,4319, 698, 238, 521, 187,2300,1157,2423,1641,1605,1464,1610,1097,2541, // 1904\n1260,1436, 759,2255,1814,2150, 705,3235, 409,2563,3304, 561,3033,2005,2564, 726, // 1920\n1956,2343,3698,4109, 949,3812,3813,3520,1669, 653,1379,2525, 881,2198, 632,2256, // 1936\n1027, 778,1074, 733,1957, 514,1481,2466, 554,2180, 702,3938,1606,1017,1398,6129, // 1952\n1380,3521, 921, 993,1313, 594, 449,1489,1617,1166, 768,1426,1360, 495,1794,3601, // 1968\n1177,3602,1170,4320,2344, 476, 425,3167,4635,3168,1424, 401,2662,1171,3382,1998, // 1984\n1089,4110, 477,3169, 474,6130,1909, 596,2831,1842, 494, 693,1051,1028,1207,3076, // 2000\n 606,2115, 727,2790,1473,1115, 743,3522, 630, 805,1532,4321,2021, 366,1057, 838, // 2016\n 684,1114,2142,4322,2050,1492,1892,1808,2271,3814,2424,1971,1447,1373,3305,1090, // 2032\n1536,3939,3523,3306,1455,2199, 336, 369,2331,1035, 584,2393, 902, 718,2600,6131, // 2048\n2753, 463,2151,1149,1611,2467, 715,1308,3124,1268, 343,1413,3236,1517,1347,2663, // 2064\n2093,3940,2022,1131,1553,2100,2941,1427,3441,2942,1323,2484,6132,1980, 872,2368, // 2080\n2441,2943, 320,2369,2116,1082, 679,1933,3941,2791,3815, 625,1143,2023, 422,2200, // 2096\n3816,6133, 730,1695, 356,2257,1626,2301,2858,2637,1627,1778, 937, 883,2906,2693, // 2112\n3002,1769,1086, 400,1063,1325,3307,2792,4111,3077, 456,2345,1046, 747,6134,1524, // 2128\n 884,1094,3383,1474,2164,1059, 974,1688,2181,2258,1047, 345,1665,1187, 358, 875, // 2144\n3170, 305, 660,3524,2190,1334,1135,3171,1540,1649,2542,1527, 927, 968,2793, 885, // 2160\n1972,1850, 482, 500,2638,1218,1109,1085,2543,1654,2034, 876,  78,2287,1482,1277, // 2176\n 861,1675,1083,1779, 724,2754, 454, 397,1132,1612,2332, 893, 672,1237, 257,2259, // 2192\n2370, 135,3384, 337,2244, 547, 352, 340, 709,2485,1400, 788,1138,2511, 540, 772, // 2208\n1682,2260,2272,2544,2013,1843,1902,4636,1999,1562,2288,4637,2201,1403,1533, 407, // 2224\n 576,3308,1254,2071, 978,3385, 170, 136,1201,3125,2664,3172,2394, 213, 912, 873, // 2240\n3603,1713,2202, 699,3604,3699, 813,3442, 493, 531,1054, 468,2907,1483, 304, 281, // 2256\n4112,1726,1252,2094, 339,2319,2130,2639, 756,1563,2944, 748, 571,2976,1588,2425, // 2272\n2715,1851,1460,2426,1528,1392,1973,3237, 288,3309, 685,3386, 296, 892,2716,2216, // 2288\n1570,2245, 722,1747,2217, 905,3238,1103,6135,1893,1441,1965, 251,1805,2371,3700, // 2304\n2601,1919,1078,  75,2182,1509,1592,1270,2640,4638,2152,6136,3310,3817, 524, 706, // 2320\n1075, 292,3818,1756,2602, 317,  98,3173,3605,3525,1844,2218,3819,2502, 814, 567, // 2336\n 385,2908,1534,6137, 534,1642,3239, 797,6138,1670,1529, 953,4323, 188,1071, 538, // 2352\n 178, 729,3240,2109,1226,1374,2000,2357,2977, 731,2468,1116,2014,2051,6139,1261, // 2368\n1593, 803,2859,2736,3443, 556, 682, 823,1541,6140,1369,2289,1706,2794, 845, 462, // 2384\n2603,2665,1361, 387, 162,2358,1740, 739,1770,1720,1304,1401,3241,1049, 627,1571, // 2400\n2427,3526,1877,3942,1852,1500, 431,1910,1503, 677, 297,2795, 286,1433,1038,1198, // 2416\n2290,1133,1596,4113,4639,2469,1510,1484,3943,6141,2442, 108, 712,4640,2372, 866, // 2432\n3701,2755,3242,1348, 834,1945,1408,3527,2395,3243,1811, 824, 994,1179,2110,1548, // 2448\n1453, 790,3003, 690,4324,4325,2832,2909,3820,1860,3821, 225,1748, 310, 346,1780, // 2464\n2470, 821,1993,2717,2796, 828, 877,3528,2860,2471,1702,2165,2910,2486,1789, 453, // 2480\n 359,2291,1676,  73,1164,1461,1127,3311, 421, 604, 314,1037, 589, 116,2487, 737, // 2496\n 837,1180, 111, 244, 735,6142,2261,1861,1362, 986, 523, 418, 581,2666,3822, 103, // 2512\n 855, 503,1414,1867,2488,1091, 657,1597, 979, 605,1316,4641,1021,2443,2078,2001, // 2528\n1209,  96, 587,2166,1032, 260,1072,2153, 173,  94, 226,3244, 819,2006,4642,4114, // 2544\n2203, 231,1744, 782,  97,2667, 786,3387, 887, 391, 442,2219,4326,1425,6143,2694, // 2560\n 633,1544,1202, 483,2015, 592,2052,1958,2472,1655, 419, 129,4327,3444,3312,1714, // 2576\n1257,3078,4328,1518,1098, 865,1310,1019,1885,1512,1734, 469,2444, 148, 773, 436, // 2592\n1815,1868,1128,1055,4329,1245,2756,3445,2154,1934,1039,4643, 579,1238, 932,2320, // 2608\n 353, 205, 801, 115,2428, 944,2321,1881, 399,2565,1211, 678, 766,3944, 335,2101, // 2624\n1459,1781,1402,3945,2737,2131,1010, 844, 981,1326,1013, 550,1816,1545,2620,1335, // 2640\n1008, 371,2881, 936,1419,1613,3529,1456,1395,2273,1834,2604,1317,2738,2503, 416, // 2656\n1643,4330, 806,1126, 229, 591,3946,1314,1981,1576,1837,1666, 347,1790, 977,3313, // 2672\n 764,2861,1853, 688,2429,1920,1462,  77, 595, 415,2002,3034, 798,1192,4115,6144, // 2688\n2978,4331,3035,2695,2582,2072,2566, 430,2430,1727, 842,1396,3947,3702, 613, 377, // 2704\n 278, 236,1417,3388,3314,3174, 757,1869, 107,3530,6145,1194, 623,2262, 207,1253, // 2720\n2167,3446,3948, 492,1117,1935, 536,1838,2757,1246,4332, 696,2095,2406,1393,1572, // 2736\n3175,1782, 583, 190, 253,1390,2230, 830,3126,3389, 934,3245,1703,1749,2979,1870, // 2752\n2545,1656,2204, 869,2346,4116,3176,1817, 496,1764,4644, 942,1504, 404,1903,1122, // 2768\n1580,3606,2945,1022, 515, 372,1735, 955,2431,3036,6146,2797,1110,2302,2798, 617, // 2784\n6147, 441, 762,1771,3447,3607,3608,1904, 840,3037,  86, 939,1385, 572,1370,2445, // 2800\n1336, 114,3703, 898, 294, 203,3315, 703,1583,2274, 429, 961,4333,1854,1951,3390, // 2816\n2373,3704,4334,1318,1381, 966,1911,2322,1006,1155, 309, 989, 458,2718,1795,1372, // 2832\n1203, 252,1689,1363,3177, 517,1936, 168,1490, 562, 193,3823,1042,4117,1835, 551, // 2848\n 470,4645, 395, 489,3448,1871,1465,2583,2641, 417,1493, 279,1295, 511,1236,1119, // 2864\n  72,1231,1982,1812,3004, 871,1564, 984,3449,1667,2696,2096,4646,2347,2833,1673, // 2880\n3609, 695,3246,2668, 807,1183,4647, 890, 388,2333,1801,1457,2911,1765,1477,1031, // 2896\n3316,3317,1278,3391,2799,2292,2526, 163,3450,4335,2669,1404,1802,6148,2323,2407, // 2912\n1584,1728,1494,1824,1269, 298, 909,3318,1034,1632, 375, 776,1683,2061, 291, 210, // 2928\n1123, 809,1249,1002,2642,3038, 206,1011,2132, 144, 975, 882,1565, 342, 667, 754, // 2944\n1442,2143,1299,2303,2062, 447, 626,2205,1221,2739,2912,1144,1214,2206,2584, 760, // 2960\n1715, 614, 950,1281,2670,2621, 810, 577,1287,2546,4648, 242,2168, 250,2643, 691, // 2976\n 123,2644, 647, 313,1029, 689,1357,2946,1650, 216, 771,1339,1306, 808,2063, 549, // 2992\n 913,1371,2913,2914,6149,1466,1092,1174,1196,1311,2605,2396,1783,1796,3079, 406, // 3008\n2671,2117,3949,4649, 487,1825,2220,6150,2915, 448,2348,1073,6151,2397,1707, 130, // 3024\n 900,1598, 329, 176,1959,2527,1620,6152,2275,4336,3319,1983,2191,3705,3610,2155, // 3040\n3706,1912,1513,1614,6153,1988, 646, 392,2304,1589,3320,3039,1826,1239,1352,1340, // 3056\n2916, 505,2567,1709,1437,2408,2547, 906,6154,2672, 384,1458,1594,1100,1329, 710, // 3072\n 423,3531,2064,2231,2622,1989,2673,1087,1882, 333, 841,3005,1296,2882,2379, 580, // 3088\n1937,1827,1293,2585, 601, 574, 249,1772,4118,2079,1120, 645, 901,1176,1690, 795, // 3104\n2207, 478,1434, 516,1190,1530, 761,2080, 930,1264, 355, 435,1552, 644,1791, 987, // 3120\n 220,1364,1163,1121,1538, 306,2169,1327,1222, 546,2645, 218, 241, 610,1704,3321, // 3136\n1984,1839,1966,2528, 451,6155,2586,3707,2568, 907,3178, 254,2947, 186,1845,4650, // 3152\n 745, 432,1757, 428,1633, 888,2246,2221,2489,3611,2118,1258,1265, 956,3127,1784, // 3168\n4337,2490, 319, 510, 119, 457,3612, 274,2035,2007,4651,1409,3128, 970,2758, 590, // 3184\n2800, 661,2247,4652,2008,3950,1420,1549,3080,3322,3951,1651,1375,2111, 485,2491, // 3200\n1429,1156,6156,2548,2183,1495, 831,1840,2529,2446, 501,1657, 307,1894,3247,1341, // 3216\n 666, 899,2156,1539,2549,1559, 886, 349,2208,3081,2305,1736,3824,2170,2759,1014, // 3232\n1913,1386, 542,1397,2948, 490, 368, 716, 362, 159, 282,2569,1129,1658,1288,1750, // 3248\n2674, 276, 649,2016, 751,1496, 658,1818,1284,1862,2209,2087,2512,3451, 622,2834, // 3264\n 376, 117,1060,2053,1208,1721,1101,1443, 247,1250,3179,1792,3952,2760,2398,3953, // 3280\n6157,2144,3708, 446,2432,1151,2570,3452,2447,2761,2835,1210,2448,3082, 424,2222, // 3296\n1251,2449,2119,2836, 504,1581,4338, 602, 817, 857,3825,2349,2306, 357,3826,1470, // 3312\n1883,2883, 255, 958, 929,2917,3248, 302,4653,1050,1271,1751,2307,1952,1430,2697, // 3328\n2719,2359, 354,3180, 777, 158,2036,4339,1659,4340,4654,2308,2949,2248,1146,2232, // 3344\n3532,2720,1696,2623,3827,6158,3129,1550,2698,1485,1297,1428, 637, 931,2721,2145, // 3360\n 914,2550,2587,  81,2450, 612, 827,2646,1242,4655,1118,2884, 472,1855,3181,3533, // 3376\n3534, 569,1353,2699,1244,1758,2588,4119,2009,2762,2171,3709,1312,1531,6159,1152, // 3392\n1938, 134,1830, 471,3710,2276,1112,1535,3323,3453,3535, 982,1337,2950, 488, 826, // 3408\n 674,1058,1628,4120,2017, 522,2399, 211, 568,1367,3454, 350, 293,1872,1139,3249, // 3424\n1399,1946,3006,1300,2360,3324, 588, 736,6160,2606, 744, 669,3536,3828,6161,1358, // 3440\n 199, 723, 848, 933, 851,1939,1505,1514,1338,1618,1831,4656,1634,3613, 443,2740, // 3456\n3829, 717,1947, 491,1914,6162,2551,1542,4121,1025,6163,1099,1223, 198,3040,2722, // 3472\n 370, 410,1905,2589, 998,1248,3182,2380, 519,1449,4122,1710, 947, 928,1153,4341, // 3488\n2277, 344,2624,1511, 615, 105, 161,1212,1076,1960,3130,2054,1926,1175,1906,2473, // 3504\n 414,1873,2801,6164,2309, 315,1319,3325, 318,2018,2146,2157, 963, 631, 223,4342, // 3520\n4343,2675, 479,3711,1197,2625,3712,2676,2361,6165,4344,4123,6166,2451,3183,1886, // 3536\n2184,1674,1330,1711,1635,1506, 799, 219,3250,3083,3954,1677,3713,3326,2081,3614, // 3552\n1652,2073,4657,1147,3041,1752, 643,1961, 147,1974,3955,6167,1716,2037, 918,3007, // 3568\n1994, 120,1537, 118, 609,3184,4345, 740,3455,1219, 332,1615,3830,6168,1621,2980, // 3584\n1582, 783, 212, 553,2350,3714,1349,2433,2082,4124, 889,6169,2310,1275,1410, 973, // 3600\n 166,1320,3456,1797,1215,3185,2885,1846,2590,2763,4658, 629, 822,3008, 763, 940, // 3616\n1990,2862, 439,2409,1566,1240,1622, 926,1282,1907,2764, 654,2210,1607, 327,1130, // 3632\n3956,1678,1623,6170,2434,2192, 686, 608,3831,3715, 903,3957,3042,6171,2741,1522, // 3648\n1915,1105,1555,2552,1359, 323,3251,4346,3457, 738,1354,2553,2311,2334,1828,2003, // 3664\n3832,1753,2351,1227,6172,1887,4125,1478,6173,2410,1874,1712,1847, 520,1204,2607, // 3680\n 264,4659, 836,2677,2102, 600,4660,3833,2278,3084,6174,4347,3615,1342, 640, 532, // 3696\n 543,2608,1888,2400,2591,1009,4348,1497, 341,1737,3616,2723,1394, 529,3252,1321, // 3712\n 983,4661,1515,2120, 971,2592, 924, 287,1662,3186,4349,2700,4350,1519, 908,1948, // 3728\n2452, 156, 796,1629,1486,2223,2055, 694,4126,1259,1036,3392,1213,2249,2742,1889, // 3744\n1230,3958,1015, 910, 408, 559,3617,4662, 746, 725, 935,4663,3959,3009,1289, 563, // 3760\n 867,4664,3960,1567,2981,2038,2626, 988,2263,2381,4351, 143,2374, 704,1895,6175, // 3776\n1188,3716,2088, 673,3085,2362,4352, 484,1608,1921,2765,2918, 215, 904,3618,3537, // 3792\n 894, 509, 976,3043,2701,3961,4353,2837,2982, 498,6176,6177,1102,3538,1332,3393, // 3808\n1487,1636,1637, 233, 245,3962, 383, 650, 995,3044, 460,1520,1206,2352, 749,3327, // 3824\n 530, 700, 389,1438,1560,1773,3963,2264, 719,2951,2724,3834, 870,1832,1644,1000, // 3840\n 839,2474,3717, 197,1630,3394, 365,2886,3964,1285,2133, 734, 922, 818,1106, 732, // 3856\n 480,2083,1774,3458, 923,2279,1350, 221,3086,  85,2233,2234,3835,1585,3010,2147, // 3872\n1387,1705,2382,1619,2475, 133, 239,2802,1991,1016,2084,2383, 411,2838,1113, 651, // 3888\n1985,1160,3328, 990,1863,3087,1048,1276,2647, 265,2627,1599,3253,2056, 150, 638, // 3904\n2019, 656, 853, 326,1479, 680,1439,4354,1001,1759, 413,3459,3395,2492,1431, 459, // 3920\n4355,1125,3329,2265,1953,1450,2065,2863, 849, 351,2678,3131,3254,3255,1104,1577, // 3936\n 227,1351,1645,2453,2193,1421,2887, 812,2121, 634,  95,2435, 201,2312,4665,1646, // 3952\n1671,2743,1601,2554,2702,2648,2280,1315,1366,2089,3132,1573,3718,3965,1729,1189, // 3968\n 328,2679,1077,1940,1136, 558,1283, 964,1195, 621,2074,1199,1743,3460,3619,1896, // 3984\n1916,1890,3836,2952,1154,2112,1064, 862, 378,3011,2066,2113,2803,1568,2839,6178, // 4000\n3088,2919,1941,1660,2004,1992,2194, 142, 707,1590,1708,1624,1922,1023,1836,1233, // 4016\n1004,2313, 789, 741,3620,6179,1609,2411,1200,4127,3719,3720,4666,2057,3721, 593, // 4032\n2840, 367,2920,1878,6180,3461,1521, 628,1168, 692,2211,2649, 300, 720,2067,2571, // 4048\n2953,3396, 959,2504,3966,3539,3462,1977, 701,6181, 954,1043, 800, 681, 183,3722, // 4064\n1803,1730,3540,4128,2103, 815,2314, 174, 467, 230,2454,1093,2134, 755,3541,3397, // 4080\n1141,1162,6182,1738,2039, 270,3256,2513,1005,1647,2185,3837, 858,1679,1897,1719, // 4096\n2954,2324,1806, 402, 670, 167,4129,1498,2158,2104, 750,6183, 915, 189,1680,1551, // 4112\n 455,4356,1501,2455, 405,1095,2955, 338,1586,1266,1819, 570, 641,1324, 237,1556, // 4128\n2650,1388,3723,6184,1368,2384,1343,1978,3089,2436, 879,3724, 792,1191, 758,3012, // 4144\n1411,2135,1322,4357, 240,4667,1848,3725,1574,6185, 420,3045,1546,1391, 714,4358, // 4160\n1967, 941,1864, 863, 664, 426, 560,1731,2680,1785,2864,1949,2363, 403,3330,1415, // 4176\n1279,2136,1697,2335, 204, 721,2097,3838,  90,6186,2085,2505, 191,3967, 124,2148, // 4192\n1376,1798,1178,1107,1898,1405, 860,4359,1243,1272,2375,2983,1558,2456,1638, 113, // 4208\n3621, 578,1923,2609, 880, 386,4130, 784,2186,2266,1422,2956,2172,1722, 497, 263, // 4224\n2514,1267,2412,2610, 177,2703,3542, 774,1927,1344, 616,1432,1595,1018, 172,4360, // 4240\n2325, 911,4361, 438,1468,3622, 794,3968,2024,2173,1681,1829,2957, 945, 895,3090, // 4256\n 575,2212,2476, 475,2401,2681, 785,2744,1745,2293,2555,1975,3133,2865, 394,4668, // 4272\n3839, 635,4131, 639, 202,1507,2195,2766,1345,1435,2572,3726,1908,1184,1181,2457, // 4288\n3727,3134,4362, 843,2611, 437, 916,4669, 234, 769,1884,3046,3047,3623, 833,6187, // 4304\n1639,2250,2402,1355,1185,2010,2047, 999, 525,1732,1290,1488,2612, 948,1578,3728, // 4320\n2413,2477,1216,2725,2159, 334,3840,1328,3624,2921,1525,4132, 564,1056, 891,4363, // 4336\n1444,1698,2385,2251,3729,1365,2281,2235,1717,6188, 864,3841,2515, 444, 527,2767, // 4352\n2922,3625, 544, 461,6189, 566, 209,2437,3398,2098,1065,2068,3331,3626,3257,2137, // 4368  //last 512\n//Everything below is of no interest for detection purpose\n2138,2122,3730,2888,1995,1820,1044,6190,6191,6192,6193,6194,6195,6196,6197,6198, // 4384\n6199,6200,6201,6202,6203,6204,6205,4670,6206,6207,6208,6209,6210,6211,6212,6213, // 4400\n6214,6215,6216,6217,6218,6219,6220,6221,6222,6223,6224,6225,6226,6227,6228,6229, // 4416\n6230,6231,6232,6233,6234,6235,6236,6237,3187,6238,6239,3969,6240,6241,6242,6243, // 4432\n6244,4671,6245,6246,4672,6247,6248,4133,6249,6250,4364,6251,2923,2556,2613,4673, // 4448\n4365,3970,6252,6253,6254,6255,4674,6256,6257,6258,2768,2353,4366,4675,4676,3188, // 4464\n4367,3463,6259,4134,4677,4678,6260,2267,6261,3842,3332,4368,3543,6262,6263,6264, // 4480\n3013,1954,1928,4135,4679,6265,6266,2478,3091,6267,4680,4369,6268,6269,1699,6270, // 4496\n3544,4136,4681,6271,4137,6272,4370,2804,6273,6274,2593,3971,3972,4682,6275,2236, // 4512\n4683,6276,6277,4684,6278,6279,4138,3973,4685,6280,6281,3258,6282,6283,6284,6285, // 4528\n3974,4686,2841,3975,6286,6287,3545,6288,6289,4139,4687,4140,6290,4141,6291,4142, // 4544\n6292,6293,3333,6294,6295,6296,4371,6297,3399,6298,6299,4372,3976,6300,6301,6302, // 4560\n4373,6303,6304,3843,3731,6305,4688,4374,6306,6307,3259,2294,6308,3732,2530,4143, // 4576\n6309,4689,6310,6311,6312,3048,6313,6314,4690,3733,2237,6315,6316,2282,3334,6317, // 4592\n6318,3844,6319,6320,4691,6321,3400,4692,6322,4693,6323,3049,6324,4375,6325,3977, // 4608\n6326,6327,6328,3546,6329,4694,3335,6330,4695,4696,6331,6332,6333,6334,4376,3978, // 4624\n6335,4697,3979,4144,6336,3980,4698,6337,6338,6339,6340,6341,4699,4700,4701,6342, // 4640\n6343,4702,6344,6345,4703,6346,6347,4704,6348,4705,4706,3135,6349,4707,6350,4708, // 4656\n6351,4377,6352,4709,3734,4145,6353,2506,4710,3189,6354,3050,4711,3981,6355,3547, // 4672\n3014,4146,4378,3735,2651,3845,3260,3136,2224,1986,6356,3401,6357,4712,2594,3627, // 4688\n3137,2573,3736,3982,4713,3628,4714,4715,2682,3629,4716,6358,3630,4379,3631,6359, // 4704\n6360,6361,3983,6362,6363,6364,6365,4147,3846,4717,6366,6367,3737,2842,6368,4718, // 4720\n2628,6369,3261,6370,2386,6371,6372,3738,3984,4719,3464,4720,3402,6373,2924,3336, // 4736\n4148,2866,6374,2805,3262,4380,2704,2069,2531,3138,2806,2984,6375,2769,6376,4721, // 4752\n4722,3403,6377,6378,3548,6379,6380,2705,3092,1979,4149,2629,3337,2889,6381,3338, // 4768\n4150,2557,3339,4381,6382,3190,3263,3739,6383,4151,4723,4152,2558,2574,3404,3191, // 4784\n6384,6385,4153,6386,4724,4382,6387,6388,4383,6389,6390,4154,6391,4725,3985,6392, // 4800\n3847,4155,6393,6394,6395,6396,6397,3465,6398,4384,6399,6400,6401,6402,6403,6404, // 4816\n4156,6405,6406,6407,6408,2123,6409,6410,2326,3192,4726,6411,6412,6413,6414,4385, // 4832\n4157,6415,6416,4158,6417,3093,3848,6418,3986,6419,6420,3849,6421,6422,6423,4159, // 4848\n6424,6425,4160,6426,3740,6427,6428,6429,6430,3987,6431,4727,6432,2238,6433,6434, // 4864\n4386,3988,6435,6436,3632,6437,6438,2843,6439,6440,6441,6442,3633,6443,2958,6444, // 4880\n6445,3466,6446,2364,4387,3850,6447,4388,2959,3340,6448,3851,6449,4728,6450,6451, // 4896\n3264,4729,6452,3193,6453,4389,4390,2706,3341,4730,6454,3139,6455,3194,6456,3051, // 4912\n2124,3852,1602,4391,4161,3853,1158,3854,4162,3989,4392,3990,4731,4732,4393,2040, // 4928\n4163,4394,3265,6457,2807,3467,3855,6458,6459,6460,3991,3468,4733,4734,6461,3140, // 4944\n2960,6462,4735,6463,6464,6465,6466,4736,4737,4738,4739,6467,6468,4164,2403,3856, // 4960\n6469,6470,2770,2844,6471,4740,6472,6473,6474,6475,6476,6477,6478,3195,6479,4741, // 4976\n4395,6480,2867,6481,4742,2808,6482,2493,4165,6483,6484,6485,6486,2295,4743,6487, // 4992\n6488,6489,3634,6490,6491,6492,6493,6494,6495,6496,2985,4744,6497,6498,4745,6499, // 5008\n6500,2925,3141,4166,6501,6502,4746,6503,6504,4747,6505,6506,6507,2890,6508,6509, // 5024\n6510,6511,6512,6513,6514,6515,6516,6517,6518,6519,3469,4167,6520,6521,6522,4748, // 5040\n4396,3741,4397,4749,4398,3342,2125,4750,6523,4751,4752,4753,3052,6524,2961,4168, // 5056\n6525,4754,6526,4755,4399,2926,4169,6527,3857,6528,4400,4170,6529,4171,6530,6531, // 5072\n2595,6532,6533,6534,6535,3635,6536,6537,6538,6539,6540,6541,6542,4756,6543,6544, // 5088\n6545,6546,6547,6548,4401,6549,6550,6551,6552,4402,3405,4757,4403,6553,6554,6555, // 5104\n4172,3742,6556,6557,6558,3992,3636,6559,6560,3053,2726,6561,3549,4173,3054,4404, // 5120\n6562,6563,3993,4405,3266,3550,2809,4406,6564,6565,6566,4758,4759,6567,3743,6568, // 5136\n4760,3744,4761,3470,6569,6570,6571,4407,6572,3745,4174,6573,4175,2810,4176,3196, // 5152\n4762,6574,4177,6575,6576,2494,2891,3551,6577,6578,3471,6579,4408,6580,3015,3197, // 5168\n6581,3343,2532,3994,3858,6582,3094,3406,4409,6583,2892,4178,4763,4410,3016,4411, // 5184\n6584,3995,3142,3017,2683,6585,4179,6586,6587,4764,4412,6588,6589,4413,6590,2986, // 5200\n6591,2962,3552,6592,2963,3472,6593,6594,4180,4765,6595,6596,2225,3267,4414,6597, // 5216\n3407,3637,4766,6598,6599,3198,6600,4415,6601,3859,3199,6602,3473,4767,2811,4416, // 5232\n1856,3268,3200,2575,3996,3997,3201,4417,6603,3095,2927,6604,3143,6605,2268,6606, // 5248\n3998,3860,3096,2771,6607,6608,3638,2495,4768,6609,3861,6610,3269,2745,4769,4181, // 5264\n3553,6611,2845,3270,6612,6613,6614,3862,6615,6616,4770,4771,6617,3474,3999,4418, // 5280\n4419,6618,3639,3344,6619,4772,4182,6620,2126,6621,6622,6623,4420,4773,6624,3018, // 5296\n6625,4774,3554,6626,4183,2025,3746,6627,4184,2707,6628,4421,4422,3097,1775,4185, // 5312\n3555,6629,6630,2868,6631,6632,4423,6633,6634,4424,2414,2533,2928,6635,4186,2387, // 5328\n6636,4775,6637,4187,6638,1891,4425,3202,3203,6639,6640,4776,6641,3345,6642,6643, // 5344\n3640,6644,3475,3346,3641,4000,6645,3144,6646,3098,2812,4188,3642,3204,6647,3863, // 5360\n3476,6648,3864,6649,4426,4001,6650,6651,6652,2576,6653,4189,4777,6654,6655,6656, // 5376\n2846,6657,3477,3205,4002,6658,4003,6659,3347,2252,6660,6661,6662,4778,6663,6664, // 5392\n6665,6666,6667,6668,6669,4779,4780,2048,6670,3478,3099,6671,3556,3747,4004,6672, // 5408\n6673,6674,3145,4005,3748,6675,6676,6677,6678,6679,3408,6680,6681,6682,6683,3206, // 5424\n3207,6684,6685,4781,4427,6686,4782,4783,4784,6687,6688,6689,4190,6690,6691,3479, // 5440\n6692,2746,6693,4428,6694,6695,6696,6697,6698,6699,4785,6700,6701,3208,2727,6702, // 5456\n3146,6703,6704,3409,2196,6705,4429,6706,6707,6708,2534,1996,6709,6710,6711,2747, // 5472\n6712,6713,6714,4786,3643,6715,4430,4431,6716,3557,6717,4432,4433,6718,6719,6720, // 5488\n6721,3749,6722,4006,4787,6723,6724,3644,4788,4434,6725,6726,4789,2772,6727,6728, // 5504\n6729,6730,6731,2708,3865,2813,4435,6732,6733,4790,4791,3480,6734,6735,6736,6737, // 5520\n4436,3348,6738,3410,4007,6739,6740,4008,6741,6742,4792,3411,4191,6743,6744,6745, // 5536\n6746,6747,3866,6748,3750,6749,6750,6751,6752,6753,6754,6755,3867,6756,4009,6757, // 5552\n4793,4794,6758,2814,2987,6759,6760,6761,4437,6762,6763,6764,6765,3645,6766,6767, // 5568\n3481,4192,6768,3751,6769,6770,2174,6771,3868,3752,6772,6773,6774,4193,4795,4438, // 5584\n3558,4796,4439,6775,4797,6776,6777,4798,6778,4799,3559,4800,6779,6780,6781,3482, // 5600\n6782,2893,6783,6784,4194,4801,4010,6785,6786,4440,6787,4011,6788,6789,6790,6791, // 5616\n6792,6793,4802,6794,6795,6796,4012,6797,6798,6799,6800,3349,4803,3483,6801,4804, // 5632\n4195,6802,4013,6803,6804,4196,6805,4014,4015,6806,2847,3271,2848,6807,3484,6808, // 5648\n6809,6810,4441,6811,4442,4197,4443,3272,4805,6812,3412,4016,1579,6813,6814,4017, // 5664\n6815,3869,6816,2964,6817,4806,6818,6819,4018,3646,6820,6821,4807,4019,4020,6822, // 5680\n6823,3560,6824,6825,4021,4444,6826,4198,6827,6828,4445,6829,6830,4199,4808,6831, // 5696\n6832,6833,3870,3019,2458,6834,3753,3413,3350,6835,4809,3871,4810,3561,4446,6836, // 5712\n6837,4447,4811,4812,6838,2459,4448,6839,4449,6840,6841,4022,3872,6842,4813,4814, // 5728\n6843,6844,4815,4200,4201,4202,6845,4023,6846,6847,4450,3562,3873,6848,6849,4816, // 5744\n4817,6850,4451,4818,2139,6851,3563,6852,6853,3351,6854,6855,3352,4024,2709,3414, // 5760\n4203,4452,6856,4204,6857,6858,3874,3875,6859,6860,4819,6861,6862,6863,6864,4453, // 5776\n3647,6865,6866,4820,6867,6868,6869,6870,4454,6871,2869,6872,6873,4821,6874,3754, // 5792\n6875,4822,4205,6876,6877,6878,3648,4206,4455,6879,4823,6880,4824,3876,6881,3055, // 5808\n4207,6882,3415,6883,6884,6885,4208,4209,6886,4210,3353,6887,3354,3564,3209,3485, // 5824\n2652,6888,2728,6889,3210,3755,6890,4025,4456,6891,4825,6892,6893,6894,6895,4211, // 5840\n6896,6897,6898,4826,6899,6900,4212,6901,4827,6902,2773,3565,6903,4828,6904,6905, // 5856\n6906,6907,3649,3650,6908,2849,3566,6909,3567,3100,6910,6911,6912,6913,6914,6915, // 5872\n4026,6916,3355,4829,3056,4457,3756,6917,3651,6918,4213,3652,2870,6919,4458,6920, // 5888\n2438,6921,6922,3757,2774,4830,6923,3356,4831,4832,6924,4833,4459,3653,2507,6925, // 5904\n4834,2535,6926,6927,3273,4027,3147,6928,3568,6929,6930,6931,4460,6932,3877,4461, // 5920\n2729,3654,6933,6934,6935,6936,2175,4835,2630,4214,4028,4462,4836,4215,6937,3148, // 5936\n4216,4463,4837,4838,4217,6938,6939,2850,4839,6940,4464,6941,6942,6943,4840,6944, // 5952\n4218,3274,4465,6945,6946,2710,6947,4841,4466,6948,6949,2894,6950,6951,4842,6952, // 5968\n4219,3057,2871,6953,6954,6955,6956,4467,6957,2711,6958,6959,6960,3275,3101,4843, // 5984\n6961,3357,3569,6962,4844,6963,6964,4468,4845,3570,6965,3102,4846,3758,6966,4847, // 6000\n3878,4848,4849,4029,6967,2929,3879,4850,4851,6968,6969,1733,6970,4220,6971,6972, // 6016\n6973,6974,6975,6976,4852,6977,6978,6979,6980,6981,6982,3759,6983,6984,6985,3486, // 6032\n3487,6986,3488,3416,6987,6988,6989,6990,6991,6992,6993,6994,6995,6996,6997,4853, // 6048\n6998,6999,4030,7000,7001,3211,7002,7003,4221,7004,7005,3571,4031,7006,3572,7007, // 6064\n2614,4854,2577,7008,7009,2965,3655,3656,4855,2775,3489,3880,4222,4856,3881,4032, // 6080\n3882,3657,2730,3490,4857,7010,3149,7011,4469,4858,2496,3491,4859,2283,7012,7013, // 6096\n7014,2365,4860,4470,7015,7016,3760,7017,7018,4223,1917,7019,7020,7021,4471,7022, // 6112\n2776,4472,7023,7024,7025,7026,4033,7027,3573,4224,4861,4034,4862,7028,7029,1929, // 6128\n3883,4035,7030,4473,3058,7031,2536,3761,3884,7032,4036,7033,2966,2895,1968,4474, // 6144\n3276,4225,3417,3492,4226,2105,7034,7035,1754,2596,3762,4227,4863,4475,3763,4864, // 6160\n3764,2615,2777,3103,3765,3658,3418,4865,2296,3766,2815,7036,7037,7038,3574,2872, // 6176\n3277,4476,7039,4037,4477,7040,7041,4038,7042,7043,7044,7045,7046,7047,2537,7048, // 6192\n7049,7050,7051,7052,7053,7054,4478,7055,7056,3767,3659,4228,3575,7057,7058,4229, // 6208\n7059,7060,7061,3660,7062,3212,7063,3885,4039,2460,7064,7065,7066,7067,7068,7069, // 6224\n7070,7071,7072,7073,7074,4866,3768,4867,7075,7076,7077,7078,4868,3358,3278,2653, // 6240\n7079,7080,4479,3886,7081,7082,4869,7083,7084,7085,7086,7087,7088,2538,7089,7090, // 6256\n7091,4040,3150,3769,4870,4041,2896,3359,4230,2930,7092,3279,7093,2967,4480,3213, // 6272\n4481,3661,7094,7095,7096,7097,7098,7099,7100,7101,7102,2461,3770,7103,7104,4231, // 6288\n3151,7105,7106,7107,4042,3662,7108,7109,4871,3663,4872,4043,3059,7110,7111,7112, // 6304\n3493,2988,7113,4873,7114,7115,7116,3771,4874,7117,7118,4232,4875,7119,3576,2336, // 6320\n4876,7120,4233,3419,4044,4877,4878,4482,4483,4879,4484,4234,7121,3772,4880,1045, // 6336\n3280,3664,4881,4882,7122,7123,7124,7125,4883,7126,2778,7127,4485,4486,7128,4884, // 6352\n3214,3887,7129,7130,3215,7131,4885,4045,7132,7133,4046,7134,7135,7136,7137,7138, // 6368\n7139,7140,7141,7142,7143,4235,7144,4886,7145,7146,7147,4887,7148,7149,7150,4487, // 6384\n4047,4488,7151,7152,4888,4048,2989,3888,7153,3665,7154,4049,7155,7156,7157,7158, // 6400\n7159,7160,2931,4889,4890,4489,7161,2631,3889,4236,2779,7162,7163,4891,7164,3060, // 6416\n7165,1672,4892,7166,4893,4237,3281,4894,7167,7168,3666,7169,3494,7170,7171,4050, // 6432\n7172,7173,3104,3360,3420,4490,4051,2684,4052,7174,4053,7175,7176,7177,2253,4054, // 6448\n7178,7179,4895,7180,3152,3890,3153,4491,3216,7181,7182,7183,2968,4238,4492,4055, // 6464\n7184,2990,7185,2479,7186,7187,4493,7188,7189,7190,7191,7192,4896,7193,4897,2969, // 6480\n4494,4898,7194,3495,7195,7196,4899,4495,7197,3105,2731,7198,4900,7199,7200,7201, // 6496\n4056,7202,3361,7203,7204,4496,4901,4902,7205,4497,7206,7207,2315,4903,7208,4904, // 6512\n7209,4905,2851,7210,7211,3577,7212,3578,4906,7213,4057,3667,4907,7214,4058,2354, // 6528\n3891,2376,3217,3773,7215,7216,7217,7218,7219,4498,7220,4908,3282,2685,7221,3496, // 6544\n4909,2632,3154,4910,7222,2337,7223,4911,7224,7225,7226,4912,4913,3283,4239,4499, // 6560\n7227,2816,7228,7229,7230,7231,7232,7233,7234,4914,4500,4501,7235,7236,7237,2686, // 6576\n7238,4915,7239,2897,4502,7240,4503,7241,2516,7242,4504,3362,3218,7243,7244,7245, // 6592\n4916,7246,7247,4505,3363,7248,7249,7250,7251,3774,4506,7252,7253,4917,7254,7255, // 6608\n3284,2991,4918,4919,3219,3892,4920,3106,3497,4921,7256,7257,7258,4922,7259,4923, // 6624\n3364,4507,4508,4059,7260,4240,3498,7261,7262,4924,7263,2992,3893,4060,3220,7264, // 6640\n7265,7266,7267,7268,7269,4509,3775,7270,2817,7271,4061,4925,4510,3776,7272,4241, // 6656\n4511,3285,7273,7274,3499,7275,7276,7277,4062,4512,4926,7278,3107,3894,7279,7280, // 6672\n4927,7281,4513,7282,7283,3668,7284,7285,4242,4514,4243,7286,2058,4515,4928,4929, // 6688\n4516,7287,3286,4244,7288,4517,7289,7290,7291,3669,7292,7293,4930,4931,4932,2355, // 6704\n4933,7294,2633,4518,7295,4245,7296,7297,4519,7298,7299,4520,4521,4934,7300,4246, // 6720\n4522,7301,7302,7303,3579,7304,4247,4935,7305,4936,7306,7307,7308,7309,3777,7310, // 6736\n4523,7311,7312,7313,4248,3580,7314,4524,3778,4249,7315,3581,7316,3287,7317,3221, // 6752\n7318,4937,7319,7320,7321,7322,7323,7324,4938,4939,7325,4525,7326,7327,7328,4063, // 6768\n7329,7330,4940,7331,7332,4941,7333,4526,7334,3500,2780,1741,4942,2026,1742,7335, // 6784\n7336,3582,4527,2388,7337,7338,7339,4528,7340,4250,4943,7341,7342,7343,4944,7344, // 6800\n7345,7346,3020,7347,4945,7348,7349,7350,7351,3895,7352,3896,4064,3897,7353,7354, // 6816\n7355,4251,7356,7357,3898,7358,3779,7359,3780,3288,7360,7361,4529,7362,4946,4530, // 6832\n2027,7363,3899,4531,4947,3222,3583,7364,4948,7365,7366,7367,7368,4949,3501,4950, // 6848\n3781,4951,4532,7369,2517,4952,4252,4953,3155,7370,4954,4955,4253,2518,4533,7371, // 6864\n7372,2712,4254,7373,7374,7375,3670,4956,3671,7376,2389,3502,4065,7377,2338,7378, // 6880\n7379,7380,7381,3061,7382,4957,7383,7384,7385,7386,4958,4534,7387,7388,2993,7389, // 6896\n3062,7390,4959,7391,7392,7393,4960,3108,4961,7394,4535,7395,4962,3421,4536,7396, // 6912\n4963,7397,4964,1857,7398,4965,7399,7400,2176,3584,4966,7401,7402,3422,4537,3900, // 6928\n3585,7403,3782,7404,2852,7405,7406,7407,4538,3783,2654,3423,4967,4539,7408,3784, // 6944\n3586,2853,4540,4541,7409,3901,7410,3902,7411,7412,3785,3109,2327,3903,7413,7414, // 6960\n2970,4066,2932,7415,7416,7417,3904,3672,3424,7418,4542,4543,4544,7419,4968,7420, // 6976\n7421,4255,7422,7423,7424,7425,7426,4067,7427,3673,3365,4545,7428,3110,2559,3674, // 6992\n7429,7430,3156,7431,7432,3503,7433,3425,4546,7434,3063,2873,7435,3223,4969,4547, // 7008\n4548,2898,4256,4068,7436,4069,3587,3786,2933,3787,4257,4970,4971,3788,7437,4972, // 7024\n3064,7438,4549,7439,7440,7441,7442,7443,4973,3905,7444,2874,7445,7446,7447,7448, // 7040\n3021,7449,4550,3906,3588,4974,7450,7451,3789,3675,7452,2578,7453,4070,7454,7455, // 7056\n7456,4258,3676,7457,4975,7458,4976,4259,3790,3504,2634,4977,3677,4551,4260,7459, // 7072\n7460,7461,7462,3907,4261,4978,7463,7464,7465,7466,4979,4980,7467,7468,2213,4262, // 7088\n7469,7470,7471,3678,4981,7472,2439,7473,4263,3224,3289,7474,3908,2415,4982,7475, // 7104\n4264,7476,4983,2655,7477,7478,2732,4552,2854,2875,7479,7480,4265,7481,4553,4984, // 7120\n7482,7483,4266,7484,3679,3366,3680,2818,2781,2782,3367,3589,4554,3065,7485,4071, // 7136\n2899,7486,7487,3157,2462,4072,4555,4073,4985,4986,3111,4267,2687,3368,4556,4074, // 7152\n3791,4268,7488,3909,2783,7489,2656,1962,3158,4557,4987,1963,3159,3160,7490,3112, // 7168\n4988,4989,3022,4990,4991,3792,2855,7491,7492,2971,4558,7493,7494,4992,7495,7496, // 7184\n7497,7498,4993,7499,3426,4559,4994,7500,3681,4560,4269,4270,3910,7501,4075,4995, // 7200\n4271,7502,7503,4076,7504,4996,7505,3225,4997,4272,4077,2819,3023,7506,7507,2733, // 7216\n4561,7508,4562,7509,3369,3793,7510,3590,2508,7511,7512,4273,3113,2994,2616,7513, // 7232\n7514,7515,7516,7517,7518,2820,3911,4078,2748,7519,7520,4563,4998,7521,7522,7523, // 7248\n7524,4999,4274,7525,4564,3682,2239,4079,4565,7526,7527,7528,7529,5000,7530,7531, // 7264\n5001,4275,3794,7532,7533,7534,3066,5002,4566,3161,7535,7536,4080,7537,3162,7538, // 7280\n7539,4567,7540,7541,7542,7543,7544,7545,5003,7546,4568,7547,7548,7549,7550,7551, // 7296\n7552,7553,7554,7555,7556,5004,7557,7558,7559,5005,7560,3795,7561,4569,7562,7563, // 7312\n7564,2821,3796,4276,4277,4081,7565,2876,7566,5006,7567,7568,2900,7569,3797,3912, // 7328\n7570,7571,7572,4278,7573,7574,7575,5007,7576,7577,5008,7578,7579,4279,2934,7580, // 7344\n7581,5009,7582,4570,7583,4280,7584,7585,7586,4571,4572,3913,7587,4573,3505,7588, // 7360\n5010,7589,7590,7591,7592,3798,4574,7593,7594,5011,7595,4281,7596,7597,7598,4282, // 7376\n5012,7599,7600,5013,3163,7601,5014,7602,3914,7603,7604,2734,4575,4576,4577,7605, // 7392\n7606,7607,7608,7609,3506,5015,4578,7610,4082,7611,2822,2901,2579,3683,3024,4579, // 7408\n3507,7612,4580,7613,3226,3799,5016,7614,7615,7616,7617,7618,7619,7620,2995,3290, // 7424\n7621,4083,7622,5017,7623,7624,7625,7626,7627,4581,3915,7628,3291,7629,5018,7630, // 7440\n7631,7632,7633,4084,7634,7635,3427,3800,7636,7637,4582,7638,5019,4583,5020,7639, // 7456\n3916,7640,3801,5021,4584,4283,7641,7642,3428,3591,2269,7643,2617,7644,4585,3592, // 7472\n7645,4586,2902,7646,7647,3227,5022,7648,4587,7649,4284,7650,7651,7652,4588,2284, // 7488\n7653,5023,7654,7655,7656,4589,5024,3802,7657,7658,5025,3508,4590,7659,7660,7661, // 7504\n1969,5026,7662,7663,3684,1821,2688,7664,2028,2509,4285,7665,2823,1841,7666,2689, // 7520\n3114,7667,3917,4085,2160,5027,5028,2972,7668,5029,7669,7670,7671,3593,4086,7672, // 7536\n4591,4087,5030,3803,7673,7674,7675,7676,7677,7678,7679,4286,2366,4592,4593,3067, // 7552\n2328,7680,7681,4594,3594,3918,2029,4287,7682,5031,3919,3370,4288,4595,2856,7683, // 7568\n3509,7684,7685,5032,5033,7686,7687,3804,2784,7688,7689,7690,7691,3371,7692,7693, // 7584\n2877,5034,7694,7695,3920,4289,4088,7696,7697,7698,5035,7699,5036,4290,5037,5038, // 7600\n5039,7700,7701,7702,5040,5041,3228,7703,1760,7704,5042,3229,4596,2106,4089,7705, // 7616\n4597,2824,5043,2107,3372,7706,4291,4090,5044,7707,4091,7708,5045,3025,3805,4598, // 7632\n4292,4293,4294,3373,7709,4599,7710,5046,7711,7712,5047,5048,3806,7713,7714,7715, // 7648\n5049,7716,7717,7718,7719,4600,5050,7720,7721,7722,5051,7723,4295,3429,7724,7725, // 7664\n7726,7727,3921,7728,3292,5052,4092,7729,7730,7731,7732,7733,7734,7735,5053,5054, // 7680\n7736,7737,7738,7739,3922,3685,7740,7741,7742,7743,2635,5055,7744,5056,4601,7745, // 7696\n7746,2560,7747,7748,7749,7750,3923,7751,7752,7753,7754,7755,4296,2903,7756,7757, // 7712\n7758,7759,7760,3924,7761,5057,4297,7762,7763,5058,4298,7764,4093,7765,7766,5059, // 7728\n3925,7767,7768,7769,7770,7771,7772,7773,7774,7775,7776,3595,7777,4299,5060,4094, // 7744\n7778,3293,5061,7779,7780,4300,7781,7782,4602,7783,3596,7784,7785,3430,2367,7786, // 7760\n3164,5062,5063,4301,7787,7788,4095,5064,5065,7789,3374,3115,7790,7791,7792,7793, // 7776\n7794,7795,7796,3597,4603,7797,7798,3686,3116,3807,5066,7799,7800,5067,7801,7802, // 7792\n4604,4302,5068,4303,4096,7803,7804,3294,7805,7806,5069,4605,2690,7807,3026,7808, // 7808\n7809,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,7824, // 7824\n7825,7826,7827,7828,7829,7830,7831,7832,7833,7834,7835,7836,7837,7838,7839,7840, // 7840\n7841,7842,7843,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7854,7855,7856, // 7856\n7857,7858,7859,7860,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870,7871,7872, // 7872\n7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886,7887,7888, // 7888\n7889,7890,7891,7892,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,7904, // 7904\n7905,7906,7907,7908,7909,7910,7911,7912,7913,7914,7915,7916,7917,7918,7919,7920, // 7920\n7921,7922,7923,7924,3926,7925,7926,7927,7928,7929,7930,7931,7932,7933,7934,7935, // 7936\n7936,7937,7938,7939,7940,7941,7942,7943,7944,7945,7946,7947,7948,7949,7950,7951, // 7952\n7952,7953,7954,7955,7956,7957,7958,7959,7960,7961,7962,7963,7964,7965,7966,7967, // 7968\n7968,7969,7970,7971,7972,7973,7974,7975,7976,7977,7978,7979,7980,7981,7982,7983, // 7984\n7984,7985,7986,7987,7988,7989,7990,7991,7992,7993,7994,7995,7996,7997,7998,7999, // 8000\n8000,8001,8002,8003,8004,8005,8006,8007,8008,8009,8010,8011,8012,8013,8014,8015, // 8016\n8016,8017,8018,8019,8020,8021,8022,8023,8024,8025,8026,8027,8028,8029,8030,8031, // 8032\n8032,8033,8034,8035,8036,8037,8038,8039,8040,8041,8042,8043,8044,8045,8046,8047, // 8048\n8048,8049,8050,8051,8052,8053,8054,8055,8056,8057,8058,8059,8060,8061,8062,8063, // 8064\n8064,8065,8066,8067,8068,8069,8070,8071,8072,8073,8074,8075,8076,8077,8078,8079, // 8080\n8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095, // 8096\n8096,8097,8098,8099,8100,8101,8102,8103,8104,8105,8106,8107,8108,8109,8110,8111, // 8112\n8112,8113,8114,8115,8116,8117,8118,8119,8120,8121,8122,8123,8124,8125,8126,8127, // 8128\n8128,8129,8130,8131,8132,8133,8134,8135,8136,8137,8138,8139,8140,8141,8142,8143, // 8144\n8144,8145,8146,8147,8148,8149,8150,8151,8152,8153,8154,8155,8156,8157,8158,8159, // 8160\n8160,8161,8162,8163,8164,8165,8166,8167,8168,8169,8170,8171,8172,8173,8174,8175, // 8176\n8176,8177,8178,8179,8180,8181,8182,8183,8184,8185,8186,8187,8188,8189,8190,8191, // 8192\n8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207, // 8208\n8208,8209,8210,8211,8212,8213,8214,8215,8216,8217,8218,8219,8220,8221,8222,8223, // 8224\n8224,8225,8226,8227,8228,8229,8230,8231,8232,8233,8234,8235,8236,8237,8238,8239, // 8240\n8240,8241,8242,8243,8244,8245,8246,8247,8248,8249,8250,8251,8252,8253,8254,8255, // 8256\n8256,8257,8258,8259,8260,8261,8262,8263,8264,8265,8266,8267,8268,8269,8270,8271 // 8272\n];\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\n// GB2312 most frequently used character table\n//\n// Char to FreqOrder table , from hz6763\n\n// 512  --> 0.79  -- 0.79\n// 1024 --> 0.92  -- 0.13\n// 2048 --> 0.98  -- 0.06\n// 6768 --> 1.00  -- 0.02\n//\n// Ideal Distribution Ratio = 0.79135/(1-0.79135) = 3.79\n// Random Distribution Ration = 512 / (3755 - 512) = 0.157\n//\n// Typical Distribution Ratio about 25% of Ideal one, still much higher that RDR\n\njschardet.GB2312_TYPICAL_DISTRIBUTION_RATIO = 0.9;\n\njschardet.GB2312_TABLE_SIZE = 3760;\n\njschardet.GB2312CharToFreqOrder = [\n1671, 749,1443,2364,3924,3807,2330,3921,1704,3463,2691,1511,1515, 572,3191,2205,\n2361, 224,2558, 479,1711, 963,3162, 440,4060,1905,2966,2947,3580,2647,3961,3842,\n2204, 869,4207, 970,2678,5626,2944,2956,1479,4048, 514,3595, 588,1346,2820,3409,\n 249,4088,1746,1873,2047,1774, 581,1813, 358,1174,3590,1014,1561,4844,2245, 670,\n1636,3112, 889,1286, 953, 556,2327,3060,1290,3141, 613, 185,3477,1367, 850,3820,\n1715,2428,2642,2303,2732,3041,2562,2648,3566,3946,1349, 388,3098,2091,1360,3585,\n 152,1687,1539, 738,1559,  59,1232,2925,2267,1388,1249,1741,1679,2960, 151,1566,\n1125,1352,4271, 924,4296, 385,3166,4459, 310,1245,2850,  70,3285,2729,3534,3575,\n2398,3298,3466,1960,2265, 217,3647, 864,1909,2084,4401,2773,1010,3269,5152, 853,\n3051,3121,1244,4251,1895, 364,1499,1540,2313,1180,3655,2268, 562, 715,2417,3061,\n 544, 336,3768,2380,1752,4075, 950, 280,2425,4382, 183,2759,3272, 333,4297,2155,\n1688,2356,1444,1039,4540, 736,1177,3349,2443,2368,2144,2225, 565, 196,1482,3406,\n 927,1335,4147, 692, 878,1311,1653,3911,3622,1378,4200,1840,2969,3149,2126,1816,\n2534,1546,2393,2760, 737,2494,  13, 447, 245,2747,  38,2765,2129,2589,1079, 606,\n 360, 471,3755,2890, 404, 848, 699,1785,1236, 370,2221,1023,3746,2074,2026,2023,\n2388,1581,2119, 812,1141,3091,2536,1519, 804,2053, 406,1596,1090, 784, 548,4414,\n1806,2264,2936,1100, 343,4114,5096, 622,3358, 743,3668,1510,1626,5020,3567,2513,\n3195,4115,5627,2489,2991,  24,2065,2697,1087,2719,  48,1634, 315,  68, 985,2052,\n 198,2239,1347,1107,1439, 597,2366,2172, 871,3307, 919,2487,2790,1867, 236,2570,\n1413,3794, 906,3365,3381,1701,1982,1818,1524,2924,1205, 616,2586,2072,2004, 575,\n 253,3099,  32,1365,1182, 197,1714,2454,1201, 554,3388,3224,2748, 756,2587, 250,\n2567,1507,1517,3529,1922,2761,2337,3416,1961,1677,2452,2238,3153, 615, 911,1506,\n1474,2495,1265,1906,2749,3756,3280,2161, 898,2714,1759,3450,2243,2444, 563,  26,\n3286,2266,3769,3344,2707,3677, 611,1402, 531,1028,2871,4548,1375, 261,2948, 835,\n1190,4134, 353, 840,2684,1900,3082,1435,2109,1207,1674, 329,1872,2781,4055,2686,\n2104, 608,3318,2423,2957,2768,1108,3739,3512,3271,3985,2203,1771,3520,1418,2054,\n1681,1153, 225,1627,2929, 162,2050,2511,3687,1954, 124,1859,2431,1684,3032,2894,\n 585,4805,3969,2869,2704,2088,2032,2095,3656,2635,4362,2209, 256, 518,2042,2105,\n3777,3657, 643,2298,1148,1779, 190, 989,3544, 414,  11,2135,2063,2979,1471, 403,\n3678, 126, 770,1563, 671,2499,3216,2877, 600,1179, 307,2805,4937,1268,1297,2694,\n 252,4032,1448,1494,1331,1394, 127,2256, 222,1647,1035,1481,3056,1915,1048, 873,\n3651, 210,  33,1608,2516, 200,1520, 415, 102,   0,3389,1287, 817,  91,3299,2940,\n 836,1814, 549,2197,1396,1669,2987,3582,2297,2848,4528,1070, 687,  20,1819, 121,\n1552,1364,1461,1968,2617,3540,2824,2083, 177, 948,4938,2291, 110,4549,2066, 648,\n3359,1755,2110,2114,4642,4845,1693,3937,3308,1257,1869,2123, 208,1804,3159,2992,\n2531,2549,3361,2418,1350,2347,2800,2568,1291,2036,2680,  72, 842,1990, 212,1233,\n1154,1586,  75,2027,3410,4900,1823,1337,2710,2676, 728,2810,1522,3026,4995, 157,\n 755,1050,4022, 710, 785,1936,2194,2085,1406,2777,2400, 150,1250,4049,1206, 807,\n1910, 534, 529,3309,1721,1660, 274,  39,2827, 661,2670,1578, 925,3248,3815,1094,\n4278,4901,4252,  41,1150,3747,2572,2227,4501,3658,4902,3813,3357,3617,2884,2258,\n 887, 538,4187,3199,1294,2439,3042,2329,2343,2497,1255, 107, 543,1527, 521,3478,\n3568, 194,5062,  15, 961,3870,1241,1192,2664,  66,5215,3260,2111,1295,1127,2152,\n3805,4135, 901,1164,1976, 398,1278, 530,1460, 748, 904,1054,1966,1426,  53,2909,\n 509, 523,2279,1534, 536,1019, 239,1685, 460,2353, 673,1065,2401,3600,4298,2272,\n1272,2363, 284,1753,3679,4064,1695,  81, 815,2677,2757,2731,1386, 859, 500,4221,\n2190,2566, 757,1006,2519,2068,1166,1455, 337,2654,3203,1863,1682,1914,3025,1252,\n1409,1366, 847, 714,2834,2038,3209, 964,2970,1901, 885,2553,1078,1756,3049, 301,\n1572,3326, 688,2130,1996,2429,1805,1648,2930,3421,2750,3652,3088, 262,1158,1254,\n 389,1641,1812, 526,1719, 923,2073,1073,1902, 468, 489,4625,1140, 857,2375,3070,\n3319,2863, 380, 116,1328,2693,1161,2244, 273,1212,1884,2769,3011,1775,1142, 461,\n3066,1200,2147,2212, 790, 702,2695,4222,1601,1058, 434,2338,5153,3640,  67,2360,\n4099,2502, 618,3472,1329, 416,1132, 830,2782,1807,2653,3211,3510,1662, 192,2124,\n 296,3979,1739,1611,3684,  23, 118, 324, 446,1239,1225, 293,2520,3814,3795,2535,\n3116,  17,1074, 467,2692,2201, 387,2922,  45,1326,3055,1645,3659,2817, 958, 243,\n1903,2320,1339,2825,1784,3289, 356, 576, 865,2315,2381,3377,3916,1088,3122,1713,\n1655, 935, 628,4689,1034,1327, 441, 800, 720, 894,1979,2183,1528,5289,2702,1071,\n4046,3572,2399,1571,3281,  79, 761,1103, 327, 134, 758,1899,1371,1615, 879, 442,\n 215,2605,2579, 173,2048,2485,1057,2975,3317,1097,2253,3801,4263,1403,1650,2946,\n 814,4968,3487,1548,2644,1567,1285,   2, 295,2636,  97, 946,3576, 832, 141,4257,\n3273, 760,3821,3521,3156,2607, 949,1024,1733,1516,1803,1920,2125,2283,2665,3180,\n1501,2064,3560,2171,1592, 803,3518,1416, 732,3897,4258,1363,1362,2458, 119,1427,\n 602,1525,2608,1605,1639,3175, 694,3064,  10, 465,  76,2000,4846,4208, 444,3781,\n1619,3353,2206,1273,3796, 740,2483, 320,1723,2377,3660,2619,1359,1137,1762,1724,\n2345,2842,1850,1862, 912, 821,1866, 612,2625,1735,2573,3369,1093, 844,  89, 937,\n 930,1424,3564,2413,2972,1004,3046,3019,2011, 711,3171,1452,4178, 428, 801,1943,\n 432, 445,2811, 206,4136,1472, 730, 349,  73, 397,2802,2547, 998,1637,1167, 789,\n 396,3217, 154,1218, 716,1120,1780,2819,4826,1931,3334,3762,2139,1215,2627, 552,\n3664,3628,3232,1405,2383,3111,1356,2652,3577,3320,3101,1703, 640,1045,1370,1246,\n4996, 371,1575,2436,1621,2210, 984,4033,1734,2638,  16,4529, 663,2755,3255,1451,\n3917,2257,1253,1955,2234,1263,2951, 214,1229, 617, 485, 359,1831,1969, 473,2310,\n 750,2058, 165,  80,2864,2419, 361,4344,2416,2479,1134, 796,3726,1266,2943, 860,\n2715, 938, 390,2734,1313,1384, 248, 202, 877,1064,2854, 522,3907, 279,1602, 297,\n2357, 395,3740, 137,2075, 944,4089,2584,1267,3802,  62,1533,2285, 178, 176, 780,\n2440, 201,3707, 590, 478,1560,4354,2117,1075,  30,  74,4643,4004,1635,1441,2745,\n 776,2596, 238,1077,1692,1912,2844, 605, 499,1742,3947, 241,3053, 980,1749, 936,\n2640,4511,2582, 515,1543,2162,5322,2892,2993, 890,2148,1924, 665,1827,3581,1032,\n 968,3163, 339,1044,1896, 270, 583,1791,1720,4367,1194,3488,3669,  43,2523,1657,\n 163,2167, 290,1209,1622,3378, 550, 634,2508,2510, 695,2634,2384,2512,1476,1414,\n 220,1469,2341,2138,2852,3183,2900,4939,2865,3502,1211,3680, 854,3227,1299,2976,\n3172, 186,2998,1459, 443,1067,3251,1495, 321,1932,3054, 909, 753,1410,1828, 436,\n2441,1119,1587,3164,2186,1258, 227, 231,1425,1890,3200,3942, 247, 959, 725,5254,\n2741, 577,2158,2079, 929, 120, 174, 838,2813, 591,1115, 417,2024,  40,3240,1536,\n1037, 291,4151,2354, 632,1298,2406,2500,3535,1825,1846,3451, 205,1171, 345,4238,\n  18,1163, 811, 685,2208,1217, 425,1312,1508,1175,4308,2552,1033, 587,1381,3059,\n2984,3482, 340,1316,4023,3972, 792,3176, 519, 777,4690, 918, 933,4130,2981,3741,\n  90,3360,2911,2200,5184,4550, 609,3079,2030, 272,3379,2736, 363,3881,1130,1447,\n 286, 779, 357,1169,3350,3137,1630,1220,2687,2391, 747,1277,3688,2618,2682,2601,\n1156,3196,5290,4034,3102,1689,3596,3128, 874, 219,2783, 798, 508,1843,2461, 269,\n1658,1776,1392,1913,2983,3287,2866,2159,2372, 829,4076,  46,4253,2873,1889,1894,\n 915,1834,1631,2181,2318, 298, 664,2818,3555,2735, 954,3228,3117, 527,3511,2173,\n 681,2712,3033,2247,2346,3467,1652, 155,2164,3382, 113,1994, 450, 899, 494, 994,\n1237,2958,1875,2336,1926,3727, 545,1577,1550, 633,3473, 204,1305,3072,2410,1956,\n2471, 707,2134, 841,2195,2196,2663,3843,1026,4940, 990,3252,4997, 368,1092, 437,\n3212,3258,1933,1829, 675,2977,2893, 412, 943,3723,4644,3294,3283,2230,2373,5154,\n2389,2241,2661,2323,1404,2524, 593, 787, 677,3008,1275,2059, 438,2709,2609,2240,\n2269,2246,1446,  36,1568,1373,3892,1574,2301,1456,3962, 693,2276,5216,2035,1143,\n2720,1919,1797,1811,2763,4137,2597,1830,1699,1488,1198,2090, 424,1694, 312,3634,\n3390,4179,3335,2252,1214, 561,1059,3243,2295,2561, 975,5155,2321,2751,3772, 472,\n1537,3282,3398,1047,2077,2348,2878,1323,3340,3076, 690,2906,  51, 369, 170,3541,\n1060,2187,2688,3670,2541,1083,1683, 928,3918, 459, 109,4427, 599,3744,4286, 143,\n2101,2730,2490,  82,1588,3036,2121, 281,1860, 477,4035,1238,2812,3020,2716,3312,\n1530,2188,2055,1317, 843, 636,1808,1173,3495, 649, 181,1002, 147,3641,1159,2414,\n3750,2289,2795, 813,3123,2610,1136,4368,   5,3391,4541,2174, 420, 429,1728, 754,\n1228,2115,2219, 347,2223,2733, 735,1518,3003,2355,3134,1764,3948,3329,1888,2424,\n1001,1234,1972,3321,3363,1672,1021,1450,1584, 226, 765, 655,2526,3404,3244,2302,\n3665, 731, 594,2184, 319,1576, 621, 658,2656,4299,2099,3864,1279,2071,2598,2739,\n 795,3086,3699,3908,1707,2352,2402,1382,3136,2475,1465,4847,3496,3865,1085,3004,\n2591,1084, 213,2287,1963,3565,2250, 822, 793,4574,3187,1772,1789,3050, 595,1484,\n1959,2770,1080,2650, 456, 422,2996, 940,3322,4328,4345,3092,2742, 965,2784, 739,\n4124, 952,1358,2498,2949,2565, 332,2698,2378, 660,2260,2473,4194,3856,2919, 535,\n1260,2651,1208,1428,1300,1949,1303,2942, 433,2455,2450,1251,1946, 614,1269, 641,\n1306,1810,2737,3078,2912, 564,2365,1419,1415,1497,4460,2367,2185,1379,3005,1307,\n3218,2175,1897,3063, 682,1157,4040,4005,1712,1160,1941,1399, 394, 402,2952,1573,\n1151,2986,2404, 862, 299,2033,1489,3006, 346, 171,2886,3401,1726,2932, 168,2533,\n  47,2507,1030,3735,1145,3370,1395,1318,1579,3609,4560,2857,4116,1457,2529,1965,\n 504,1036,2690,2988,2405, 745,5871, 849,2397,2056,3081, 863,2359,3857,2096,  99,\n1397,1769,2300,4428,1643,3455,1978,1757,3718,1440,  35,4879,3742,1296,4228,2280,\n 160,5063,1599,2013, 166, 520,3479,1646,3345,3012, 490,1937,1545,1264,2182,2505,\n1096,1188,1369,1436,2421,1667,2792,2460,1270,2122, 727,3167,2143, 806,1706,1012,\n1800,3037, 960,2218,1882, 805, 139,2456,1139,1521, 851,1052,3093,3089, 342,2039,\n 744,5097,1468,1502,1585,2087, 223, 939, 326,2140,2577, 892,2481,1623,4077, 982,\n3708, 135,2131,  87,2503,3114,2326,1106, 876,1616, 547,2997,2831,2093,3441,4530,\n4314,   9,3256,4229,4148, 659,1462,1986,1710,2046,2913,2231,4090,4880,5255,3392,\n3274,1368,3689,4645,1477, 705,3384,3635,1068,1529,2941,1458,3782,1509, 100,1656,\n2548, 718,2339, 408,1590,2780,3548,1838,4117,3719,1345,3530, 717,3442,2778,3220,\n2898,1892,4590,3614,3371,2043,1998,1224,3483, 891, 635, 584,2559,3355, 733,1766,\n1729,1172,3789,1891,2307, 781,2982,2271,1957,1580,5773,2633,2005,4195,3097,1535,\n3213,1189,1934,5693,3262, 586,3118,1324,1598, 517,1564,2217,1868,1893,4445,3728,\n2703,3139,1526,1787,1992,3882,2875,1549,1199,1056,2224,1904,2711,5098,4287, 338,\n1993,3129,3489,2689,1809,2815,1997, 957,1855,3898,2550,3275,3057,1105,1319, 627,\n1505,1911,1883,3526, 698,3629,3456,1833,1431, 746,  77,1261,2017,2296,1977,1885,\n 125,1334,1600, 525,1798,1109,2222,1470,1945, 559,2236,1186,3443,2476,1929,1411,\n2411,3135,1777,3372,2621,1841,1613,3229, 668,1430,1839,2643,2916, 195,1989,2671,\n2358,1387, 629,3205,2293,5256,4439, 123,1310, 888,1879,4300,3021,3605,1003,1162,\n3192,2910,2010, 140,2395,2859,  55,1082,2012,2901, 662, 419,2081,1438, 680,2774,\n4654,3912,1620,1731,1625,5035,4065,2328, 512,1344, 802,5443,2163,2311,2537, 524,\n3399,  98,1155,2103,1918,2606,3925,2816,1393,2465,1504,3773,2177,3963,1478,4346,\n 180,1113,4655,3461,2028,1698, 833,2696,1235,1322,1594,4408,3623,3013,3225,2040,\n3022, 541,2881, 607,3632,2029,1665,1219, 639,1385,1686,1099,2803,3231,1938,3188,\n2858, 427, 676,2772,1168,2025, 454,3253,2486,3556, 230,1950, 580, 791,1991,1280,\n1086,1974,2034, 630, 257,3338,2788,4903,1017,  86,4790, 966,2789,1995,1696,1131,\n 259,3095,4188,1308, 179,1463,5257, 289,4107,1248,  42,3413,1725,2288, 896,1947,\n 774,4474,4254, 604,3430,4264, 392,2514,2588, 452, 237,1408,3018, 988,4531,1970,\n3034,3310, 540,2370,1562,1288,2990, 502,4765,1147,   4,1853,2708, 207, 294,2814,\n4078,2902,2509, 684,  34,3105,3532,2551, 644, 709,2801,2344, 573,1727,3573,3557,\n2021,1081,3100,4315,2100,3681, 199,2263,1837,2385, 146,3484,1195,2776,3949, 997,\n1939,3973,1008,1091,1202,1962,1847,1149,4209,5444,1076, 493, 117,5400,2521, 972,\n1490,2934,1796,4542,2374,1512,2933,2657, 413,2888,1135,2762,2314,2156,1355,2369,\n 766,2007,2527,2170,3124,2491,2593,2632,4757,2437, 234,3125,3591,1898,1750,1376,\n1942,3468,3138, 570,2127,2145,3276,4131, 962, 132,1445,4196,  19, 941,3624,3480,\n3366,1973,1374,4461,3431,2629, 283,2415,2275, 808,2887,3620,2112,2563,1353,3610,\n 955,1089,3103,1053,  96,  88,4097, 823,3808,1583, 399, 292,4091,3313, 421,1128,\n 642,4006, 903,2539,1877,2082, 596,  29,4066,1790, 722,2157, 130, 995,1569, 769,\n1485, 464, 513,2213, 288,1923,1101,2453,4316, 133, 486,2445,  50, 625, 487,2207,\n  57, 423, 481,2962, 159,3729,1558, 491, 303, 482, 501, 240,2837, 112,3648,2392,\n1783, 362,   8,3433,3422, 610,2793,3277,1390,1284,1654,  21,3823, 734, 367, 623,\n 193, 287, 374,1009,1483, 816, 476, 313,2255,2340,1262,2150,2899,1146,2581, 782,\n2116,1659,2018,1880, 255,3586,3314,1110,2867,2137,2564, 986,2767,5185,2006, 650,\n 158, 926, 762, 881,3157,2717,2362,3587, 306,3690,3245,1542,3077,2427,1691,2478,\n2118,2985,3490,2438, 539,2305, 983, 129,1754, 355,4201,2386, 827,2923, 104,1773,\n2838,2771, 411,2905,3919, 376, 767, 122,1114, 828,2422,1817,3506, 266,3460,1007,\n1609,4998, 945,2612,4429,2274, 726,1247,1964,2914,2199,2070,4002,4108, 657,3323,\n1422, 579, 455,2764,4737,1222,2895,1670, 824,1223,1487,2525, 558, 861,3080, 598,\n2659,2515,1967, 752,2583,2376,2214,4180, 977, 704,2464,4999,2622,4109,1210,2961,\n 819,1541, 142,2284,  44, 418, 457,1126,3730,4347,4626,1644,1876,3671,1864, 302,\n1063,5694, 624, 723,1984,3745,1314,1676,2488,1610,1449,3558,3569,2166,2098, 409,\n1011,2325,3704,2306, 818,1732,1383,1824,1844,3757, 999,2705,3497,1216,1423,2683,\n2426,2954,2501,2726,2229,1475,2554,5064,1971,1794,1666,2014,1343, 783, 724, 191,\n2434,1354,2220,5065,1763,2752,2472,4152, 131, 175,2885,3434,  92,1466,4920,2616,\n3871,3872,3866, 128,1551,1632, 669,1854,3682,4691,4125,1230, 188,2973,3290,1302,\n1213, 560,3266, 917, 763,3909,3249,1760, 868,1958, 764,1782,2097, 145,2277,3774,\n4462,  64,1491,3062, 971,2132,3606,2442, 221,1226,1617, 218, 323,1185,3207,3147,\n 571, 619,1473,1005,1744,2281, 449,1887,2396,3685, 275, 375,3816,1743,3844,3731,\n 845,1983,2350,4210,1377, 773, 967,3499,3052,3743,2725,4007,1697,1022,3943,1464,\n3264,2855,2722,1952,1029,2839,2467,  84,4383,2215, 820,1391,2015,2448,3672, 377,\n1948,2168, 797,2545,3536,2578,2645,  94,2874,1678, 405,1259,3071, 771, 546,1315,\n 470,1243,3083, 895,2468, 981, 969,2037, 846,4181, 653,1276,2928,  14,2594, 557,\n3007,2474, 156, 902,1338,1740,2574, 537,2518, 973,2282,2216,2433,1928, 138,2903,\n1293,2631,1612, 646,3457, 839,2935, 111, 496,2191,2847, 589,3186, 149,3994,2060,\n4031,2641,4067,3145,1870,  37,3597,2136,1025,2051,3009,3383,3549,1121,1016,3261,\n1301, 251,2446,2599,2153, 872,3246, 637, 334,3705, 831, 884, 921,3065,3140,4092,\n2198,1944, 246,2964, 108,2045,1152,1921,2308,1031, 203,3173,4170,1907,3890, 810,\n1401,2003,1690, 506, 647,1242,2828,1761,1649,3208,2249,1589,3709,2931,5156,1708,\n 498, 666,2613, 834,3817,1231, 184,2851,1124, 883,3197,2261,3710,1765,1553,2658,\n1178,2639,2351,  93,1193, 942,2538,2141,4402, 235,1821, 870,1591,2192,1709,1871,\n3341,1618,4126,2595,2334, 603, 651,  69, 701, 268,2662,3411,2555,1380,1606, 503,\n 448, 254,2371,2646, 574,1187,2309,1770, 322,2235,1292,1801, 305, 566,1133, 229,\n2067,2057, 706, 167, 483,2002,2672,3295,1820,3561,3067, 316, 378,2746,3452,1112,\n 136,1981, 507,1651,2917,1117, 285,4591, 182,2580,3522,1304, 335,3303,1835,2504,\n1795,1792,2248, 674,1018,2106,2449,1857,2292,2845, 976,3047,1781,2600,2727,1389,\n1281,  52,3152, 153, 265,3950, 672,3485,3951,4463, 430,1183, 365, 278,2169,  27,\n1407,1336,2304, 209,1340,1730,2202,1852,2403,2883, 979,1737,1062, 631,2829,2542,\n3876,2592, 825,2086,2226,3048,3625, 352,1417,3724, 542, 991, 431,1351,3938,1861,\n2294, 826,1361,2927,3142,3503,1738, 463,2462,2723, 582,1916,1595,2808, 400,3845,\n3891,2868,3621,2254,  58,2492,1123, 910,2160,2614,1372,1603,1196,1072,3385,1700,\n3267,1980, 696, 480,2430, 920, 799,1570,2920,1951,2041,4047,2540,1321,4223,2469,\n3562,2228,1271,2602, 401,2833,3351,2575,5157, 907,2312,1256, 410, 263,3507,1582,\n 996, 678,1849,2316,1480, 908,3545,2237, 703,2322, 667,1826,2849,1531,2604,2999,\n2407,3146,2151,2630,1786,3711, 469,3542, 497,3899,2409, 858, 837,4446,3393,1274,\n 786, 620,1845,2001,3311, 484, 308,3367,1204,1815,3691,2332,1532,2557,1842,2020,\n2724,1927,2333,4440, 567,  22,1673,2728,4475,1987,1858,1144,1597, 101,1832,3601,\n  12, 974,3783,4391, 951,1412,   1,3720, 453,4608,4041, 528,1041,1027,3230,2628,\n1129, 875,1051,3291,1203,2262,1069,2860,2799,2149,2615,3278, 144,1758,3040,  31,\n 475,1680, 366,2685,3184, 311,1642,4008,2466,5036,1593,1493,2809, 216,1420,1668,\n 233, 304,2128,3284, 232,1429,1768,1040,2008,3407,2740,2967,2543, 242,2133, 778,\n1565,2022,2620, 505,2189,2756,1098,2273, 372,1614, 708, 553,2846,2094,2278, 169,\n3626,2835,4161, 228,2674,3165, 809,1454,1309, 466,1705,1095, 900,3423, 880,2667,\n3751,5258,2317,3109,2571,4317,2766,1503,1342, 866,4447,1118,  63,2076, 314,1881,\n1348,1061, 172, 978,3515,1747, 532, 511,3970,   6, 601, 905,2699,3300,1751, 276,\n1467,3725,2668,  65,4239,2544,2779,2556,1604, 578,2451,1802, 992,2331,2624,1320,\n3446, 713,1513,1013, 103,2786,2447,1661, 886,1702, 916, 654,3574,2031,1556, 751,\n2178,2821,2179,1498,1538,2176, 271, 914,2251,2080,1325, 638,1953,2937,3877,2432,\n2754,  95,3265,1716, 260,1227,4083, 775, 106,1357,3254, 426,1607, 555,2480, 772,\n1985, 244,2546, 474, 495,1046,2611,1851,2061,  71,2089,1675,2590, 742,3758,2843,\n3222,1433, 267,2180,2576,2826,2233,2092,3913,2435, 956,1745,3075, 856,2113,1116,\n 451,   3,1988,2896,1398, 993,2463,1878,2049,1341,2718,2721,2870,2108, 712,2904,\n4363,2753,2324, 277,2872,2349,2649, 384, 987, 435, 691,3000, 922, 164,3939, 652,\n1500,1184,4153,2482,3373,2165,4848,2335,3775,3508,3154,2806,2830,1554,2102,1664,\n2530,1434,2408, 893,1547,2623,3447,2832,2242,2532,3169,2856,3223,2078,  49,3770,\n3469, 462, 318, 656,2259,3250,3069, 679,1629,2758, 344,1138,1104,3120,1836,1283,\n3115,2154,1437,4448, 934, 759,1999, 794,2862,1038, 533,2560,1722,2342, 855,2626,\n1197,1663,4476,3127,  85,4240,2528,  25,1111,1181,3673, 407,3470,4561,2679,2713,\n 768,1925,2841,3986,1544,1165, 932, 373,1240,2146,1930,2673, 721,4766, 354,4333,\n 391,2963, 187,  61,3364,1442,1102, 330,1940,1767, 341,3809,4118, 393,2496,2062,\n2211, 105, 331, 300, 439, 913,1332, 626, 379,3304,1557, 328, 689,3952, 309,1555,\n 931, 317,2517,3027, 325, 569, 686,2107,3084,  60,1042,1333,2794, 264,3177,4014,\n1628, 258,3712,   7,4464,1176,1043,1778, 683, 114,1975,  78,1492, 383,1886, 510,\n 386, 645,5291,2891,2069,3305,4138,3867,2939,2603,2493,1935,1066,1848,3588,1015,\n1282,1289,4609, 697,1453,3044,2666,3611,1856,2412,  54, 719,1330, 568,3778,2459,\n1748, 788, 492, 551,1191,1000, 488,3394,3763, 282,1799, 348,2016,1523,3155,2390,\n1049, 382,2019,1788,1170, 729,2968,3523, 897,3926,2785,2938,3292, 350,2319,3238,\n1718,1717,2655,3453,3143,4465, 161,2889,2980,2009,1421,  56,1908,1640,2387,2232,\n1917,1874,2477,4921, 148,  83,3438, 592,4245,2882,1822,1055, 741, 115,1496,1624,\n 381,1638,4592,1020, 516,3214, 458, 947,4575,1432, 211,1514,2926,1865,2142, 189,\n 852,1221,1400,1486, 882,2299,4036, 351,  28,1122, 700,6479,6480,6481,6482,6483,  // last 512\n//Everything below is of no interest for detection purpose\n5508,6484,3900,3414,3974,4441,4024,3537,4037,5628,5099,3633,6485,3148,6486,3636,\n5509,3257,5510,5973,5445,5872,4941,4403,3174,4627,5873,6276,2286,4230,5446,5874,\n5122,6102,6103,4162,5447,5123,5323,4849,6277,3980,3851,5066,4246,5774,5067,6278,\n3001,2807,5695,3346,5775,5974,5158,5448,6487,5975,5976,5776,3598,6279,5696,4806,\n4211,4154,6280,6488,6489,6490,6281,4212,5037,3374,4171,6491,4562,4807,4722,4827,\n5977,6104,4532,4079,5159,5324,5160,4404,3858,5359,5875,3975,4288,4610,3486,4512,\n5325,3893,5360,6282,6283,5560,2522,4231,5978,5186,5449,2569,3878,6284,5401,3578,\n4415,6285,4656,5124,5979,2506,4247,4449,3219,3417,4334,4969,4329,6492,4576,4828,\n4172,4416,4829,5402,6286,3927,3852,5361,4369,4830,4477,4867,5876,4173,6493,6105,\n4657,6287,6106,5877,5450,6494,4155,4868,5451,3700,5629,4384,6288,6289,5878,3189,\n4881,6107,6290,6495,4513,6496,4692,4515,4723,5100,3356,6497,6291,3810,4080,5561,\n3570,4430,5980,6498,4355,5697,6499,4724,6108,6109,3764,4050,5038,5879,4093,3226,\n6292,5068,5217,4693,3342,5630,3504,4831,4377,4466,4309,5698,4431,5777,6293,5778,\n4272,3706,6110,5326,3752,4676,5327,4273,5403,4767,5631,6500,5699,5880,3475,5039,\n6294,5562,5125,4348,4301,4482,4068,5126,4593,5700,3380,3462,5981,5563,3824,5404,\n4970,5511,3825,4738,6295,6501,5452,4516,6111,5881,5564,6502,6296,5982,6503,4213,\n4163,3454,6504,6112,4009,4450,6113,4658,6297,6114,3035,6505,6115,3995,4904,4739,\n4563,4942,4110,5040,3661,3928,5362,3674,6506,5292,3612,4791,5565,4149,5983,5328,\n5259,5021,4725,4577,4564,4517,4364,6298,5405,4578,5260,4594,4156,4157,5453,3592,\n3491,6507,5127,5512,4709,4922,5984,5701,4726,4289,6508,4015,6116,5128,4628,3424,\n4241,5779,6299,4905,6509,6510,5454,5702,5780,6300,4365,4923,3971,6511,5161,3270,\n3158,5985,4100, 867,5129,5703,6117,5363,3695,3301,5513,4467,6118,6512,5455,4232,\n4242,4629,6513,3959,4478,6514,5514,5329,5986,4850,5162,5566,3846,4694,6119,5456,\n4869,5781,3779,6301,5704,5987,5515,4710,6302,5882,6120,4392,5364,5705,6515,6121,\n6516,6517,3736,5988,5457,5989,4695,2457,5883,4551,5782,6303,6304,6305,5130,4971,\n6122,5163,6123,4870,3263,5365,3150,4871,6518,6306,5783,5069,5706,3513,3498,4409,\n5330,5632,5366,5458,5459,3991,5990,4502,3324,5991,5784,3696,4518,5633,4119,6519,\n4630,5634,4417,5707,4832,5992,3418,6124,5993,5567,4768,5218,6520,4595,3458,5367,\n6125,5635,6126,4202,6521,4740,4924,6307,3981,4069,4385,6308,3883,2675,4051,3834,\n4302,4483,5568,5994,4972,4101,5368,6309,5164,5884,3922,6127,6522,6523,5261,5460,\n5187,4164,5219,3538,5516,4111,3524,5995,6310,6311,5369,3181,3386,2484,5188,3464,\n5569,3627,5708,6524,5406,5165,4677,4492,6312,4872,4851,5885,4468,5996,6313,5709,\n5710,6128,2470,5886,6314,5293,4882,5785,3325,5461,5101,6129,5711,5786,6525,4906,\n6526,6527,4418,5887,5712,4808,2907,3701,5713,5888,6528,3765,5636,5331,6529,6530,\n3593,5889,3637,4943,3692,5714,5787,4925,6315,6130,5462,4405,6131,6132,6316,5262,\n6531,6532,5715,3859,5716,5070,4696,5102,3929,5788,3987,4792,5997,6533,6534,3920,\n4809,5000,5998,6535,2974,5370,6317,5189,5263,5717,3826,6536,3953,5001,4883,3190,\n5463,5890,4973,5999,4741,6133,6134,3607,5570,6000,4711,3362,3630,4552,5041,6318,\n6001,2950,2953,5637,4646,5371,4944,6002,2044,4120,3429,6319,6537,5103,4833,6538,\n6539,4884,4647,3884,6003,6004,4758,3835,5220,5789,4565,5407,6540,6135,5294,4697,\n4852,6320,6321,3206,4907,6541,6322,4945,6542,6136,6543,6323,6005,4631,3519,6544,\n5891,6545,5464,3784,5221,6546,5571,4659,6547,6324,6137,5190,6548,3853,6549,4016,\n4834,3954,6138,5332,3827,4017,3210,3546,4469,5408,5718,3505,4648,5790,5131,5638,\n5791,5465,4727,4318,6325,6326,5792,4553,4010,4698,3439,4974,3638,4335,3085,6006,\n5104,5042,5166,5892,5572,6327,4356,4519,5222,5573,5333,5793,5043,6550,5639,5071,\n4503,6328,6139,6551,6140,3914,3901,5372,6007,5640,4728,4793,3976,3836,4885,6552,\n4127,6553,4451,4102,5002,6554,3686,5105,6555,5191,5072,5295,4611,5794,5296,6556,\n5893,5264,5894,4975,5466,5265,4699,4976,4370,4056,3492,5044,4886,6557,5795,4432,\n4769,4357,5467,3940,4660,4290,6141,4484,4770,4661,3992,6329,4025,4662,5022,4632,\n4835,4070,5297,4663,4596,5574,5132,5409,5895,6142,4504,5192,4664,5796,5896,3885,\n5575,5797,5023,4810,5798,3732,5223,4712,5298,4084,5334,5468,6143,4052,4053,4336,\n4977,4794,6558,5335,4908,5576,5224,4233,5024,4128,5469,5225,4873,6008,5045,4729,\n4742,4633,3675,4597,6559,5897,5133,5577,5003,5641,5719,6330,6560,3017,2382,3854,\n4406,4811,6331,4393,3964,4946,6561,2420,3722,6562,4926,4378,3247,1736,4442,6332,\n5134,6333,5226,3996,2918,5470,4319,4003,4598,4743,4744,4485,3785,3902,5167,5004,\n5373,4394,5898,6144,4874,1793,3997,6334,4085,4214,5106,5642,4909,5799,6009,4419,\n4189,3330,5899,4165,4420,5299,5720,5227,3347,6145,4081,6335,2876,3930,6146,3293,\n3786,3910,3998,5900,5300,5578,2840,6563,5901,5579,6147,3531,5374,6564,6565,5580,\n4759,5375,6566,6148,3559,5643,6336,6010,5517,6337,6338,5721,5902,3873,6011,6339,\n6567,5518,3868,3649,5722,6568,4771,4947,6569,6149,4812,6570,2853,5471,6340,6341,\n5644,4795,6342,6012,5723,6343,5724,6013,4349,6344,3160,6150,5193,4599,4514,4493,\n5168,4320,6345,4927,3666,4745,5169,5903,5005,4928,6346,5725,6014,4730,4203,5046,\n4948,3395,5170,6015,4150,6016,5726,5519,6347,5047,3550,6151,6348,4197,4310,5904,\n6571,5581,2965,6152,4978,3960,4291,5135,6572,5301,5727,4129,4026,5905,4853,5728,\n5472,6153,6349,4533,2700,4505,5336,4678,3583,5073,2994,4486,3043,4554,5520,6350,\n6017,5800,4487,6351,3931,4103,5376,6352,4011,4321,4311,4190,5136,6018,3988,3233,\n4350,5906,5645,4198,6573,5107,3432,4191,3435,5582,6574,4139,5410,6353,5411,3944,\n5583,5074,3198,6575,6354,4358,6576,5302,4600,5584,5194,5412,6577,6578,5585,5413,\n5303,4248,5414,3879,4433,6579,4479,5025,4854,5415,6355,4760,4772,3683,2978,4700,\n3797,4452,3965,3932,3721,4910,5801,6580,5195,3551,5907,3221,3471,3029,6019,3999,\n5908,5909,5266,5267,3444,3023,3828,3170,4796,5646,4979,4259,6356,5647,5337,3694,\n6357,5648,5338,4520,4322,5802,3031,3759,4071,6020,5586,4836,4386,5048,6581,3571,\n4679,4174,4949,6154,4813,3787,3402,3822,3958,3215,3552,5268,4387,3933,4950,4359,\n6021,5910,5075,3579,6358,4234,4566,5521,6359,3613,5049,6022,5911,3375,3702,3178,\n4911,5339,4521,6582,6583,4395,3087,3811,5377,6023,6360,6155,4027,5171,5649,4421,\n4249,2804,6584,2270,6585,4000,4235,3045,6156,5137,5729,4140,4312,3886,6361,4330,\n6157,4215,6158,3500,3676,4929,4331,3713,4930,5912,4265,3776,3368,5587,4470,4855,\n3038,4980,3631,6159,6160,4132,4680,6161,6362,3923,4379,5588,4255,6586,4121,6587,\n6363,4649,6364,3288,4773,4774,6162,6024,6365,3543,6588,4274,3107,3737,5050,5803,\n4797,4522,5589,5051,5730,3714,4887,5378,4001,4523,6163,5026,5522,4701,4175,2791,\n3760,6589,5473,4224,4133,3847,4814,4815,4775,3259,5416,6590,2738,6164,6025,5304,\n3733,5076,5650,4816,5590,6591,6165,6592,3934,5269,6593,3396,5340,6594,5804,3445,\n3602,4042,4488,5731,5732,3525,5591,4601,5196,6166,6026,5172,3642,4612,3202,4506,\n4798,6366,3818,5108,4303,5138,5139,4776,3332,4304,2915,3415,4434,5077,5109,4856,\n2879,5305,4817,6595,5913,3104,3144,3903,4634,5341,3133,5110,5651,5805,6167,4057,\n5592,2945,4371,5593,6596,3474,4182,6367,6597,6168,4507,4279,6598,2822,6599,4777,\n4713,5594,3829,6169,3887,5417,6170,3653,5474,6368,4216,2971,5228,3790,4579,6369,\n5733,6600,6601,4951,4746,4555,6602,5418,5475,6027,3400,4665,5806,6171,4799,6028,\n5052,6172,3343,4800,4747,5006,6370,4556,4217,5476,4396,5229,5379,5477,3839,5914,\n5652,5807,4714,3068,4635,5808,6173,5342,4192,5078,5419,5523,5734,6174,4557,6175,\n4602,6371,6176,6603,5809,6372,5735,4260,3869,5111,5230,6029,5112,6177,3126,4681,\n5524,5915,2706,3563,4748,3130,6178,4018,5525,6604,6605,5478,4012,4837,6606,4534,\n4193,5810,4857,3615,5479,6030,4082,3697,3539,4086,5270,3662,4508,4931,5916,4912,\n5811,5027,3888,6607,4397,3527,3302,3798,2775,2921,2637,3966,4122,4388,4028,4054,\n1633,4858,5079,3024,5007,3982,3412,5736,6608,3426,3236,5595,3030,6179,3427,3336,\n3279,3110,6373,3874,3039,5080,5917,5140,4489,3119,6374,5812,3405,4494,6031,4666,\n4141,6180,4166,6032,5813,4981,6609,5081,4422,4982,4112,3915,5653,3296,3983,6375,\n4266,4410,5654,6610,6181,3436,5082,6611,5380,6033,3819,5596,4535,5231,5306,5113,\n6612,4952,5918,4275,3113,6613,6376,6182,6183,5814,3073,4731,4838,5008,3831,6614,\n4888,3090,3848,4280,5526,5232,3014,5655,5009,5737,5420,5527,6615,5815,5343,5173,\n5381,4818,6616,3151,4953,6617,5738,2796,3204,4360,2989,4281,5739,5174,5421,5197,\n3132,5141,3849,5142,5528,5083,3799,3904,4839,5480,2880,4495,3448,6377,6184,5271,\n5919,3771,3193,6034,6035,5920,5010,6036,5597,6037,6378,6038,3106,5422,6618,5423,\n5424,4142,6619,4889,5084,4890,4313,5740,6620,3437,5175,5307,5816,4199,5198,5529,\n5817,5199,5656,4913,5028,5344,3850,6185,2955,5272,5011,5818,4567,4580,5029,5921,\n3616,5233,6621,6622,6186,4176,6039,6379,6380,3352,5200,5273,2908,5598,5234,3837,\n5308,6623,6624,5819,4496,4323,5309,5201,6625,6626,4983,3194,3838,4167,5530,5922,\n5274,6381,6382,3860,3861,5599,3333,4292,4509,6383,3553,5481,5820,5531,4778,6187,\n3955,3956,4324,4389,4218,3945,4325,3397,2681,5923,4779,5085,4019,5482,4891,5382,\n5383,6040,4682,3425,5275,4094,6627,5310,3015,5483,5657,4398,5924,3168,4819,6628,\n5925,6629,5532,4932,4613,6041,6630,4636,6384,4780,4204,5658,4423,5821,3989,4683,\n5822,6385,4954,6631,5345,6188,5425,5012,5384,3894,6386,4490,4104,6632,5741,5053,\n6633,5823,5926,5659,5660,5927,6634,5235,5742,5824,4840,4933,4820,6387,4859,5928,\n4955,6388,4143,3584,5825,5346,5013,6635,5661,6389,5014,5484,5743,4337,5176,5662,\n6390,2836,6391,3268,6392,6636,6042,5236,6637,4158,6638,5744,5663,4471,5347,3663,\n4123,5143,4293,3895,6639,6640,5311,5929,5826,3800,6189,6393,6190,5664,5348,3554,\n3594,4749,4603,6641,5385,4801,6043,5827,4183,6642,5312,5426,4761,6394,5665,6191,\n4715,2669,6643,6644,5533,3185,5427,5086,5930,5931,5386,6192,6044,6645,4781,4013,\n5745,4282,4435,5534,4390,4267,6045,5746,4984,6046,2743,6193,3501,4087,5485,5932,\n5428,4184,4095,5747,4061,5054,3058,3862,5933,5600,6646,5144,3618,6395,3131,5055,\n5313,6396,4650,4956,3855,6194,3896,5202,4985,4029,4225,6195,6647,5828,5486,5829,\n3589,3002,6648,6397,4782,5276,6649,6196,6650,4105,3803,4043,5237,5830,6398,4096,\n3643,6399,3528,6651,4453,3315,4637,6652,3984,6197,5535,3182,3339,6653,3096,2660,\n6400,6654,3449,5934,4250,4236,6047,6401,5831,6655,5487,3753,4062,5832,6198,6199,\n6656,3766,6657,3403,4667,6048,6658,4338,2897,5833,3880,2797,3780,4326,6659,5748,\n5015,6660,5387,4351,5601,4411,6661,3654,4424,5935,4339,4072,5277,4568,5536,6402,\n6662,5238,6663,5349,5203,6200,5204,6201,5145,4536,5016,5056,4762,5834,4399,4957,\n6202,6403,5666,5749,6664,4340,6665,5936,5177,5667,6666,6667,3459,4668,6404,6668,\n6669,4543,6203,6670,4276,6405,4480,5537,6671,4614,5205,5668,6672,3348,2193,4763,\n6406,6204,5937,5602,4177,5669,3419,6673,4020,6205,4443,4569,5388,3715,3639,6407,\n6049,4058,6206,6674,5938,4544,6050,4185,4294,4841,4651,4615,5488,6207,6408,6051,\n5178,3241,3509,5835,6208,4958,5836,4341,5489,5278,6209,2823,5538,5350,5206,5429,\n6675,4638,4875,4073,3516,4684,4914,4860,5939,5603,5389,6052,5057,3237,5490,3791,\n6676,6409,6677,4821,4915,4106,5351,5058,4243,5539,4244,5604,4842,4916,5239,3028,\n3716,5837,5114,5605,5390,5940,5430,6210,4332,6678,5540,4732,3667,3840,6053,4305,\n3408,5670,5541,6410,2744,5240,5750,6679,3234,5606,6680,5607,5671,3608,4283,4159,\n4400,5352,4783,6681,6411,6682,4491,4802,6211,6412,5941,6413,6414,5542,5751,6683,\n4669,3734,5942,6684,6415,5943,5059,3328,4670,4144,4268,6685,6686,6687,6688,4372,\n3603,6689,5944,5491,4373,3440,6416,5543,4784,4822,5608,3792,4616,5838,5672,3514,\n5391,6417,4892,6690,4639,6691,6054,5673,5839,6055,6692,6056,5392,6212,4038,5544,\n5674,4497,6057,6693,5840,4284,5675,4021,4545,5609,6418,4454,6419,6213,4113,4472,\n5314,3738,5087,5279,4074,5610,4959,4063,3179,4750,6058,6420,6214,3476,4498,4716,\n5431,4960,4685,6215,5241,6694,6421,6216,6695,5841,5945,6422,3748,5946,5179,3905,\n5752,5545,5947,4374,6217,4455,6423,4412,6218,4803,5353,6696,3832,5280,6219,4327,\n4702,6220,6221,6059,4652,5432,6424,3749,4751,6425,5753,4986,5393,4917,5948,5030,\n5754,4861,4733,6426,4703,6697,6222,4671,5949,4546,4961,5180,6223,5031,3316,5281,\n6698,4862,4295,4934,5207,3644,6427,5842,5950,6428,6429,4570,5843,5282,6430,6224,\n5088,3239,6060,6699,5844,5755,6061,6431,2701,5546,6432,5115,5676,4039,3993,3327,\n4752,4425,5315,6433,3941,6434,5677,4617,4604,3074,4581,6225,5433,6435,6226,6062,\n4823,5756,5116,6227,3717,5678,4717,5845,6436,5679,5846,6063,5847,6064,3977,3354,\n6437,3863,5117,6228,5547,5394,4499,4524,6229,4605,6230,4306,4500,6700,5951,6065,\n3693,5952,5089,4366,4918,6701,6231,5548,6232,6702,6438,4704,5434,6703,6704,5953,\n4168,6705,5680,3420,6706,5242,4407,6066,3812,5757,5090,5954,4672,4525,3481,5681,\n4618,5395,5354,5316,5955,6439,4962,6707,4526,6440,3465,4673,6067,6441,5682,6708,\n5435,5492,5758,5683,4619,4571,4674,4804,4893,4686,5493,4753,6233,6068,4269,6442,\n6234,5032,4705,5146,5243,5208,5848,6235,6443,4963,5033,4640,4226,6236,5849,3387,\n6444,6445,4436,4437,5850,4843,5494,4785,4894,6709,4361,6710,5091,5956,3331,6237,\n4987,5549,6069,6711,4342,3517,4473,5317,6070,6712,6071,4706,6446,5017,5355,6713,\n6714,4988,5436,6447,4734,5759,6715,4735,4547,4456,4754,6448,5851,6449,6450,3547,\n5852,5318,6451,6452,5092,4205,6716,6238,4620,4219,5611,6239,6072,4481,5760,5957,\n5958,4059,6240,6453,4227,4537,6241,5761,4030,4186,5244,5209,3761,4457,4876,3337,\n5495,5181,6242,5959,5319,5612,5684,5853,3493,5854,6073,4169,5613,5147,4895,6074,\n5210,6717,5182,6718,3830,6243,2798,3841,6075,6244,5855,5614,3604,4606,5496,5685,\n5118,5356,6719,6454,5960,5357,5961,6720,4145,3935,4621,5119,5962,4261,6721,6455,\n4786,5963,4375,4582,6245,6246,6247,6076,5437,4877,5856,3376,4380,6248,4160,6722,\n5148,6456,5211,6457,6723,4718,6458,6724,6249,5358,4044,3297,6459,6250,5857,5615,\n5497,5245,6460,5498,6725,6251,6252,5550,3793,5499,2959,5396,6461,6462,4572,5093,\n5500,5964,3806,4146,6463,4426,5762,5858,6077,6253,4755,3967,4220,5965,6254,4989,\n5501,6464,4352,6726,6078,4764,2290,5246,3906,5438,5283,3767,4964,2861,5763,5094,\n6255,6256,4622,5616,5859,5860,4707,6727,4285,4708,4824,5617,6257,5551,4787,5212,\n4965,4935,4687,6465,6728,6466,5686,6079,3494,4413,2995,5247,5966,5618,6729,5967,\n5764,5765,5687,5502,6730,6731,6080,5397,6467,4990,6258,6732,4538,5060,5619,6733,\n4719,5688,5439,5018,5149,5284,5503,6734,6081,4607,6259,5120,3645,5861,4583,6260,\n4584,4675,5620,4098,5440,6261,4863,2379,3306,4585,5552,5689,4586,5285,6735,4864,\n6736,5286,6082,6737,4623,3010,4788,4381,4558,5621,4587,4896,3698,3161,5248,4353,\n4045,6262,3754,5183,4588,6738,6263,6739,6740,5622,3936,6741,6468,6742,6264,5095,\n6469,4991,5968,6743,4992,6744,6083,4897,6745,4256,5766,4307,3108,3968,4444,5287,\n3889,4343,6084,4510,6085,4559,6086,4898,5969,6746,5623,5061,4919,5249,5250,5504,\n5441,6265,5320,4878,3242,5862,5251,3428,6087,6747,4237,5624,5442,6266,5553,4539,\n6748,2585,3533,5398,4262,6088,5150,4736,4438,6089,6267,5505,4966,6749,6268,6750,\n6269,5288,5554,3650,6090,6091,4624,6092,5690,6751,5863,4270,5691,4277,5555,5864,\n6752,5692,4720,4865,6470,5151,4688,4825,6753,3094,6754,6471,3235,4653,6755,5213,\n5399,6756,3201,4589,5865,4967,6472,5866,6473,5019,3016,6757,5321,4756,3957,4573,\n6093,4993,5767,4721,6474,6758,5625,6759,4458,6475,6270,6760,5556,4994,5214,5252,\n6271,3875,5768,6094,5034,5506,4376,5769,6761,2120,6476,5253,5770,6762,5771,5970,\n3990,5971,5557,5558,5772,6477,6095,2787,4641,5972,5121,6096,6097,6272,6763,3703,\n5867,5507,6273,4206,6274,4789,6098,6764,3619,3646,3833,3804,2394,3788,4936,3978,\n4866,4899,6099,6100,5559,6478,6765,3599,5868,6101,5869,5870,6275,6766,4527,6767\n];\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\n// Sampling from about 20M text materials include literature and computer technology\n\n// 128  --> 0.79\n// 256  --> 0.92\n// 512  --> 0.986\n// 1024 --> 0.99944\n// 2048 --> 0.99999\n//\n// Idea Distribution Ratio = 0.98653 / (1-0.98653) = 73.24\n// Random Distribution Ration = 512 / (2350-512) = 0.279.\n//\n// Typical Distribution Ratio\n\njschardet.EUCKR_TYPICAL_DISTRIBUTION_RATIO = 6.0;\n\njschardet.EUCKR_TABLE_SIZE = 2352;\n\n// Char to FreqOrder table ,\njschardet.EUCKRCharToFreqOrder = [\n  13, 130, 120,1396, 481,1719,1720, 328, 609, 212,1721, 707, 400, 299,1722,  87,\n1397,1723, 104, 536,1117,1203,1724,1267, 685,1268, 508,1725,1726,1727,1728,1398,\n1399,1729,1730,1731, 141, 621, 326,1057, 368,1732, 267, 488,  20,1733,1269,1734,\n 945,1400,1735,  47, 904,1270,1736,1737, 773, 248,1738, 409, 313, 786, 429,1739,\n 116, 987, 813,1401, 683,  75,1204, 145,1740,1741,1742,1743,  16, 847, 667, 622,\n 708,1744,1745,1746, 966, 787, 304, 129,1747,  60, 820, 123, 676,1748,1749,1750,\n1751, 617,1752, 626,1753,1754,1755,1756, 653,1757,1758,1759,1760,1761,1762, 856,\n 344,1763,1764,1765,1766,  89, 401, 418, 806, 905, 848,1767,1768,1769, 946,1205,\n 709,1770,1118,1771, 241,1772,1773,1774,1271,1775, 569,1776, 999,1777,1778,1779,\n1780, 337, 751,1058,  28, 628, 254,1781, 177, 906, 270, 349, 891,1079,1782,  19,\n1783, 379,1784, 315,1785, 629, 754,1402, 559,1786, 636, 203,1206,1787, 710, 567,\n1788, 935, 814,1789,1790,1207, 766, 528,1791,1792,1208,1793,1794,1795,1796,1797,\n1403,1798,1799, 533,1059,1404,1405,1156,1406, 936, 884,1080,1800, 351,1801,1802,\n1803,1804,1805, 801,1806,1807,1808,1119,1809,1157, 714, 474,1407,1810, 298, 899,\n 885,1811,1120, 802,1158,1812, 892,1813,1814,1408, 659,1815,1816,1121,1817,1818,\n1819,1820,1821,1822, 319,1823, 594, 545,1824, 815, 937,1209,1825,1826, 573,1409,\n1022,1827,1210,1828,1829,1830,1831,1832,1833, 556, 722, 807,1122,1060,1834, 697,\n1835, 900, 557, 715,1836,1410, 540,1411, 752,1159, 294, 597,1211, 976, 803, 770,\n1412,1837,1838,  39, 794,1413, 358,1839, 371, 925,1840, 453, 661, 788, 531, 723,\n 544,1023,1081, 869,  91,1841, 392, 430, 790, 602,1414, 677,1082, 457,1415,1416,\n1842,1843, 475, 327,1024,1417, 795, 121,1844, 733, 403,1418,1845,1846,1847, 300,\n 119, 711,1212, 627,1848,1272, 207,1849,1850, 796,1213, 382,1851, 519,1852,1083,\n 893,1853,1854,1855, 367, 809, 487, 671,1856, 663,1857,1858, 956, 471, 306, 857,\n1859,1860,1160,1084,1861,1862,1863,1864,1865,1061,1866,1867,1868,1869,1870,1871,\n 282,  96, 574,1872, 502,1085,1873,1214,1874, 907,1875,1876, 827, 977,1419,1420,\n1421, 268,1877,1422,1878,1879,1880, 308,1881,   2, 537,1882,1883,1215,1884,1885,\n 127, 791,1886,1273,1423,1887,  34, 336, 404, 643,1888, 571, 654, 894, 840,1889,\n   0, 886,1274, 122, 575, 260, 908, 938,1890,1275, 410, 316,1891,1892, 100,1893,\n1894,1123,  48,1161,1124,1025,1895, 633, 901,1276,1896,1897, 115, 816,1898, 317,\n1899, 694,1900, 909, 734,1424, 572, 866,1425, 691,  85, 524,1010, 543, 394, 841,\n1901,1902,1903,1026,1904,1905,1906,1907,1908,1909,  30, 451, 651, 988, 310,1910,\n1911,1426, 810,1216,  93,1912,1913,1277,1217,1914, 858, 759,  45,  58, 181, 610,\n 269,1915,1916, 131,1062, 551, 443,1000, 821,1427, 957, 895,1086,1917,1918, 375,\n1919, 359,1920, 687,1921, 822,1922, 293,1923,1924,  40, 662, 118, 692,  29, 939,\n 887, 640, 482, 174,1925,  69,1162, 728,1428, 910,1926,1278,1218,1279, 386, 870,\n 217, 854,1163, 823,1927,1928,1929,1930, 834,1931,  78,1932, 859,1933,1063,1934,\n1935,1936,1937, 438,1164, 208, 595,1938,1939,1940,1941,1219,1125,1942, 280, 888,\n1429,1430,1220,1431,1943,1944,1945,1946,1947,1280, 150, 510,1432,1948,1949,1950,\n1951,1952,1953,1954,1011,1087,1955,1433,1043,1956, 881,1957, 614, 958,1064,1065,\n1221,1958, 638,1001, 860, 967, 896,1434, 989, 492, 553,1281,1165,1959,1282,1002,\n1283,1222,1960,1961,1962,1963,  36, 383, 228, 753, 247, 454,1964, 876, 678,1965,\n1966,1284, 126, 464, 490, 835, 136, 672, 529, 940,1088,1435, 473,1967,1968, 467,\n  50, 390, 227, 587, 279, 378, 598, 792, 968, 240, 151, 160, 849, 882,1126,1285,\n 639,1044, 133, 140, 288, 360, 811, 563,1027, 561, 142, 523,1969,1970,1971,   7,\n 103, 296, 439, 407, 506, 634, 990,1972,1973,1974,1975, 645,1976,1977,1978,1979,\n1980,1981, 236,1982,1436,1983,1984,1089, 192, 828, 618, 518,1166, 333,1127,1985,\n 818,1223,1986,1987,1988,1989,1990,1991,1992,1993, 342,1128,1286, 746, 842,1994,\n1995, 560, 223,1287,  98,   8, 189, 650, 978,1288,1996,1437,1997,  17, 345, 250,\n 423, 277, 234, 512, 226,  97, 289,  42, 167,1998, 201,1999,2000, 843, 836, 824,\n 532, 338, 783,1090, 182, 576, 436,1438,1439, 527, 500,2001, 947, 889,2002,2003,\n2004,2005, 262, 600, 314, 447,2006, 547,2007, 693, 738,1129,2008,  71,1440, 745,\n 619, 688,2009, 829,2010,2011, 147,2012,  33, 948,2013,2014,  74, 224,2015,  61,\n 191, 918, 399, 637,2016,1028,1130, 257, 902,2017,2018,2019,2020,2021,2022,2023,\n2024,2025,2026, 837,2027,2028,2029,2030, 179, 874, 591,  52, 724, 246,2031,2032,\n2033,2034,1167, 969,2035,1289, 630, 605, 911,1091,1168,2036,2037,2038,1441, 912,\n2039, 623,2040,2041, 253,1169,1290,2042,1442, 146, 620, 611, 577, 433,2043,1224,\n 719,1170, 959, 440, 437, 534,  84, 388, 480,1131, 159, 220, 198, 679,2044,1012,\n 819,1066,1443, 113,1225, 194, 318,1003,1029,2045,2046,2047,2048,1067,2049,2050,\n2051,2052,2053,  59, 913, 112,2054, 632,2055, 455, 144, 739,1291,2056, 273, 681,\n 499,2057, 448,2058,2059, 760,2060,2061, 970, 384, 169, 245,1132,2062,2063, 414,\n1444,2064,2065,  41, 235,2066, 157, 252, 877, 568, 919, 789, 580,2067, 725,2068,\n2069,1292,2070,2071,1445,2072,1446,2073,2074,  55, 588,  66,1447, 271,1092,2075,\n1226,2076, 960,1013, 372,2077,2078,2079,2080,2081,1293,2082,2083,2084,2085, 850,\n2086,2087,2088,2089,2090, 186,2091,1068, 180,2092,2093,2094, 109,1227, 522, 606,\n2095, 867,1448,1093, 991,1171, 926, 353,1133,2096, 581,2097,2098,2099,1294,1449,\n1450,2100, 596,1172,1014,1228,2101,1451,1295,1173,1229,2102,2103,1296,1134,1452,\n 949,1135,2104,2105,1094,1453,1454,1455,2106,1095,2107,2108,2109,2110,2111,2112,\n2113,2114,2115,2116,2117, 804,2118,2119,1230,1231, 805,1456, 405,1136,2120,2121,\n2122,2123,2124, 720, 701,1297, 992,1457, 927,1004,2125,2126,2127,2128,2129,2130,\n  22, 417,2131, 303,2132, 385,2133, 971, 520, 513,2134,1174,  73,1096, 231, 274,\n 962,1458, 673,2135,1459,2136, 152,1137,2137,2138,2139,2140,1005,1138,1460,1139,\n2141,2142,2143,2144,  11, 374, 844,2145, 154,1232,  46,1461,2146, 838, 830, 721,\n1233, 106,2147,  90, 428, 462, 578, 566,1175, 352,2148,2149, 538,1234, 124,1298,\n2150,1462, 761, 565,2151, 686,2152, 649,2153,  72, 173,2154, 460, 415,2155,1463,\n2156,1235, 305,2157,2158,2159,2160,2161,2162, 579,2163,2164,2165,2166,2167, 747,\n2168,2169,2170,2171,1464, 669,2172,2173,2174,2175,2176,1465,2177,  23, 530, 285,\n2178, 335, 729,2179, 397,2180,2181,2182,1030,2183,2184, 698,2185,2186, 325,2187,\n2188, 369,2189, 799,1097,1015, 348,2190,1069, 680,2191, 851,1466,2192,2193,  10,\n2194, 613, 424,2195, 979, 108, 449, 589,  27, 172,  81,1031,  80, 774, 281, 350,\n1032, 525, 301, 582,1176,2196, 674,1045,2197,2198,1467, 730, 762,2199,2200,2201,\n2202,1468,2203, 993,2204,2205, 266,1070, 963,1140,2206,2207,2208, 664,1098, 972,\n2209,2210,2211,1177,1469,1470, 871,2212,2213,2214,2215,2216,1471,2217,2218,2219,\n2220,2221,2222,2223,2224,2225,2226,2227,1472,1236,2228,2229,2230,2231,2232,2233,\n2234,2235,1299,2236,2237, 200,2238, 477, 373,2239,2240, 731, 825, 777,2241,2242,\n2243, 521, 486, 548,2244,2245,2246,1473,1300,  53, 549, 137, 875,  76, 158,2247,\n1301,1474, 469, 396,1016, 278, 712,2248, 321, 442, 503, 767, 744, 941,1237,1178,\n1475,2249,  82, 178,1141,1179, 973,2250,1302,2251, 297,2252,2253, 570,2254,2255,\n2256,  18, 450, 206,2257, 290, 292,1142,2258, 511, 162,  99, 346, 164, 735,2259,\n1476,1477,   4, 554, 343, 798,1099,2260,1100,2261,  43, 171,1303, 139, 215,2262,\n2263, 717, 775,2264,1033, 322, 216,2265, 831,2266, 149,2267,1304,2268,2269, 702,\n1238, 135, 845, 347, 309,2270, 484,2271, 878, 655, 238,1006,1478,2272,  67,2273,\n 295,2274,2275, 461,2276, 478, 942, 412,2277,1034,2278,2279,2280, 265,2281, 541,\n2282,2283,2284,2285,2286,  70, 852,1071,2287,2288,2289,2290,  21,  56, 509, 117,\n 432,2291,2292, 331, 980, 552,1101, 148, 284, 105, 393,1180,1239, 755,2293, 187,\n2294,1046,1479,2295, 340,2296,  63,1047, 230,2297,2298,1305, 763,1306, 101, 800,\n 808, 494,2299,2300,2301, 903,2302,  37,1072,  14,   5,2303,  79, 675,2304, 312,\n2305,2306,2307,2308,2309,1480,   6,1307,2310,2311,2312,   1, 470,  35,  24, 229,\n2313, 695, 210,  86, 778,  15, 784, 592, 779,  32,  77, 855, 964,2314, 259,2315,\n 501, 380,2316,2317,  83, 981, 153, 689,1308,1481,1482,1483,2318,2319, 716,1484,\n2320,2321,2322,2323,2324,2325,1485,2326,2327, 128,  57,  68, 261,1048, 211, 170,\n1240,  31,2328,  51, 435, 742,2329,2330,2331, 635,2332, 264, 456,2333,2334,2335,\n 425,2336,1486, 143, 507, 263, 943,2337, 363, 920,1487, 256,1488,1102, 243, 601,\n1489,2338,2339,2340,2341,2342,2343,2344, 861,2345,2346,2347,2348,2349,2350, 395,\n2351,1490,1491,  62, 535, 166, 225,2352,2353, 668, 419,1241, 138, 604, 928,2354,\n1181,2355,1492,1493,2356,2357,2358,1143,2359, 696,2360, 387, 307,1309, 682, 476,\n2361,2362, 332,  12, 222, 156,2363, 232,2364, 641, 276, 656, 517,1494,1495,1035,\n 416, 736,1496,2365,1017, 586,2366,2367,2368,1497,2369, 242,2370,2371,2372,1498,\n2373, 965, 713,2374,2375,2376,2377, 740, 982,1499, 944,1500,1007,2378,2379,1310,\n1501,2380,2381,2382, 785, 329,2383,2384,1502,2385,2386,2387, 932,2388,1503,2389,\n2390,2391,2392,1242,2393,2394,2395,2396,2397, 994, 950,2398,2399,2400,2401,1504,\n1311,2402,2403,2404,2405,1049, 749,2406,2407, 853, 718,1144,1312,2408,1182,1505,\n2409,2410, 255, 516, 479, 564, 550, 214,1506,1507,1313, 413, 239, 444, 339,1145,\n1036,1508,1509,1314,1037,1510,1315,2411,1511,2412,2413,2414, 176, 703, 497, 624,\n 593, 921, 302,2415, 341, 165,1103,1512,2416,1513,2417,2418,2419, 376,2420, 700,\n2421,2422,2423, 258, 768,1316,2424,1183,2425, 995, 608,2426,2427,2428,2429, 221,\n2430,2431,2432,2433,2434,2435,2436,2437, 195, 323, 726, 188, 897, 983,1317, 377,\n 644,1050, 879,2438, 452,2439,2440,2441,2442,2443,2444, 914,2445,2446,2447,2448,\n 915, 489,2449,1514,1184,2450,2451, 515,  64, 427, 495,2452, 583,2453, 483, 485,\n1038, 562, 213,1515, 748, 666,2454,2455,2456,2457, 334,2458, 780, 996,1008, 705,\n1243,2459,2460,2461,2462,2463, 114,2464, 493,1146, 366, 163,1516, 961,1104,2465,\n 291,2466,1318,1105,2467,1517, 365,2468, 355, 951,1244,2469,1319,2470, 631,2471,\n2472, 218,1320, 364, 320, 756,1518,1519,1321,1520,1322,2473,2474,2475,2476, 997,\n2477,2478,2479,2480, 665,1185,2481, 916,1521,2482,2483,2484, 584, 684,2485,2486,\n 797,2487,1051,1186,2488,2489,2490,1522,2491,2492, 370,2493,1039,1187,  65,2494,\n 434, 205, 463,1188,2495, 125, 812, 391, 402, 826, 699, 286, 398, 155, 781, 771,\n 585,2496, 590, 505,1073,2497, 599, 244, 219, 917,1018, 952, 646,1523,2498,1323,\n2499,2500,  49, 984, 354, 741,2501, 625,2502,1324,2503,1019, 190, 357, 757, 491,\n  95, 782, 868,2504,2505,2506,2507,2508,2509, 134,1524,1074, 422,1525, 898,2510,\n 161,2511,2512,2513,2514, 769,2515,1526,2516,2517, 411,1325,2518, 472,1527,2519,\n2520,2521,2522,2523,2524, 985,2525,2526,2527,2528,2529,2530, 764,2531,1245,2532,\n2533,  25, 204, 311,2534, 496,2535,1052,2536,2537,2538,2539,2540,2541,2542, 199,\n 704, 504, 468, 758, 657,1528, 196,  44, 839,1246, 272, 750,2543, 765, 862,2544,\n2545,1326,2546, 132, 615, 933,2547, 732,2548,2549,2550,1189,1529,2551, 283,1247,\n1053, 607, 929,2552,2553,2554, 930, 183, 872, 616,1040,1147,2555,1148,1020, 441,\n 249,1075,2556,2557,2558, 466, 743,2559,2560,2561,  92, 514, 426, 420, 526,2562,\n2563,2564,2565,2566,2567,2568, 185,2569,2570,2571,2572, 776,1530, 658,2573, 362,\n2574, 361, 922,1076, 793,2575,2576,2577,2578,2579,2580,1531, 251,2581,2582,2583,\n2584,1532,  54, 612, 237,1327,2585,2586, 275, 408, 647, 111,2587,1533,1106, 465,\n   3, 458,   9,  38,2588, 107, 110, 890, 209,  26, 737, 498,2589,1534,2590, 431,\n 202,  88,1535, 356, 287,1107, 660,1149,2591, 381,1536, 986,1150, 445,1248,1151,\n 974,2592,2593, 846,2594, 446, 953, 184,1249,1250, 727,2595, 923, 193, 883,2596,\n2597,2598, 102, 324, 539, 817,2599, 421,1041,2600, 832,2601,  94, 175, 197, 406,\n2602, 459,2603,2604,2605,2606,2607, 330, 555,2608,2609,2610, 706,1108, 389,2611,\n2612,2613,2614, 233,2615, 833, 558, 931, 954,1251,2616,2617,1537, 546,2618,2619,\n1009,2620,2621,2622,1538, 690,1328,2623, 955,2624,1539,2625,2626, 772,2627,2628,\n2629,2630,2631, 924, 648, 863, 603,2632,2633, 934,1540, 864, 865,2634, 642,1042,\n 670,1190,2635,2636,2637,2638, 168,2639, 652, 873, 542,1054,1541,2640,2641,2642,  // 512, 256\n//Everything below is of no interest for detection purpose\n2643,2644,2645,2646,2647,2648,2649,2650,2651,2652,2653,2654,2655,2656,2657,2658,\n2659,2660,2661,2662,2663,2664,2665,2666,2667,2668,2669,2670,2671,2672,2673,2674,\n2675,2676,2677,2678,2679,2680,2681,2682,2683,2684,2685,2686,2687,2688,2689,2690,\n2691,2692,2693,2694,2695,2696,2697,2698,2699,1542, 880,2700,2701,2702,2703,2704,\n2705,2706,2707,2708,2709,2710,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,\n2721,2722,2723,2724,2725,1543,2726,2727,2728,2729,2730,2731,2732,1544,2733,2734,\n2735,2736,2737,2738,2739,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2750,\n2751,2752,2753,2754,1545,2755,2756,2757,2758,2759,2760,2761,2762,2763,2764,2765,\n2766,1546,2767,1547,2768,2769,2770,2771,2772,2773,2774,2775,2776,2777,2778,2779,\n2780,2781,2782,2783,2784,2785,2786,1548,2787,2788,2789,1109,2790,2791,2792,2793,\n2794,2795,2796,2797,2798,2799,2800,2801,2802,2803,2804,2805,2806,2807,2808,2809,\n2810,2811,2812,1329,2813,2814,2815,2816,2817,2818,2819,2820,2821,2822,2823,2824,\n2825,2826,2827,2828,2829,2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,2840,\n2841,2842,2843,2844,2845,2846,2847,2848,2849,2850,2851,2852,2853,2854,2855,2856,\n1549,2857,2858,2859,2860,1550,2861,2862,1551,2863,2864,2865,2866,2867,2868,2869,\n2870,2871,2872,2873,2874,1110,1330,2875,2876,2877,2878,2879,2880,2881,2882,2883,\n2884,2885,2886,2887,2888,2889,2890,2891,2892,2893,2894,2895,2896,2897,2898,2899,\n2900,2901,2902,2903,2904,2905,2906,2907,2908,2909,2910,2911,2912,2913,2914,2915,\n2916,2917,2918,2919,2920,2921,2922,2923,2924,2925,2926,2927,2928,2929,2930,1331,\n2931,2932,2933,2934,2935,2936,2937,2938,2939,2940,2941,2942,2943,1552,2944,2945,\n2946,2947,2948,2949,2950,2951,2952,2953,2954,2955,2956,2957,2958,2959,2960,2961,\n2962,2963,2964,1252,2965,2966,2967,2968,2969,2970,2971,2972,2973,2974,2975,2976,\n2977,2978,2979,2980,2981,2982,2983,2984,2985,2986,2987,2988,2989,2990,2991,2992,\n2993,2994,2995,2996,2997,2998,2999,3000,3001,3002,3003,3004,3005,3006,3007,3008,\n3009,3010,3011,3012,1553,3013,3014,3015,3016,3017,1554,3018,1332,3019,3020,3021,\n3022,3023,3024,3025,3026,3027,3028,3029,3030,3031,3032,3033,3034,3035,3036,3037,\n3038,3039,3040,3041,3042,3043,3044,3045,3046,3047,3048,3049,3050,1555,3051,3052,\n3053,1556,1557,3054,3055,3056,3057,3058,3059,3060,3061,3062,3063,3064,3065,3066,\n3067,1558,3068,3069,3070,3071,3072,3073,3074,3075,3076,1559,3077,3078,3079,3080,\n3081,3082,3083,1253,3084,3085,3086,3087,3088,3089,3090,3091,3092,3093,3094,3095,\n3096,3097,3098,3099,3100,3101,3102,3103,3104,3105,3106,3107,3108,1152,3109,3110,\n3111,3112,3113,1560,3114,3115,3116,3117,1111,3118,3119,3120,3121,3122,3123,3124,\n3125,3126,3127,3128,3129,3130,3131,3132,3133,3134,3135,3136,3137,3138,3139,3140,\n3141,3142,3143,3144,3145,3146,3147,3148,3149,3150,3151,3152,3153,3154,3155,3156,\n3157,3158,3159,3160,3161,3162,3163,3164,3165,3166,3167,3168,3169,3170,3171,3172,\n3173,3174,3175,3176,1333,3177,3178,3179,3180,3181,3182,3183,3184,3185,3186,3187,\n3188,3189,1561,3190,3191,1334,3192,3193,3194,3195,3196,3197,3198,3199,3200,3201,\n3202,3203,3204,3205,3206,3207,3208,3209,3210,3211,3212,3213,3214,3215,3216,3217,\n3218,3219,3220,3221,3222,3223,3224,3225,3226,3227,3228,3229,3230,3231,3232,3233,\n3234,1562,3235,3236,3237,3238,3239,3240,3241,3242,3243,3244,3245,3246,3247,3248,\n3249,3250,3251,3252,3253,3254,3255,3256,3257,3258,3259,3260,3261,3262,3263,3264,\n3265,3266,3267,3268,3269,3270,3271,3272,3273,3274,3275,3276,3277,1563,3278,3279,\n3280,3281,3282,3283,3284,3285,3286,3287,3288,3289,3290,3291,3292,3293,3294,3295,\n3296,3297,3298,3299,3300,3301,3302,3303,3304,3305,3306,3307,3308,3309,3310,3311,\n3312,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,\n3328,3329,3330,3331,3332,3333,3334,3335,3336,3337,3338,3339,3340,3341,3342,3343,\n3344,3345,3346,3347,3348,3349,3350,3351,3352,3353,3354,3355,3356,3357,3358,3359,\n3360,3361,3362,3363,3364,1335,3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,\n3375,3376,3377,3378,3379,3380,3381,3382,3383,3384,3385,3386,3387,1336,3388,3389,\n3390,3391,3392,3393,3394,3395,3396,3397,3398,3399,3400,3401,3402,3403,3404,3405,\n3406,3407,3408,3409,3410,3411,3412,3413,3414,1337,3415,3416,3417,3418,3419,1338,\n3420,3421,3422,1564,1565,3423,3424,3425,3426,3427,3428,3429,3430,3431,1254,3432,\n3433,3434,1339,3435,3436,3437,3438,3439,1566,3440,3441,3442,3443,3444,3445,3446,\n3447,3448,3449,3450,3451,3452,3453,3454,1255,3455,3456,3457,3458,3459,1567,1191,\n3460,1568,1569,3461,3462,3463,1570,3464,3465,3466,3467,3468,1571,3469,3470,3471,\n3472,3473,1572,3474,3475,3476,3477,3478,3479,3480,3481,3482,3483,3484,3485,3486,\n1340,3487,3488,3489,3490,3491,3492,1021,3493,3494,3495,3496,3497,3498,1573,3499,\n1341,3500,3501,3502,3503,3504,3505,3506,3507,3508,3509,3510,3511,1342,3512,3513,\n3514,3515,3516,1574,1343,3517,3518,3519,1575,3520,1576,3521,3522,3523,3524,3525,\n3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,\n3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,\n3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3572,3573,\n3574,3575,3576,3577,3578,3579,3580,1577,3581,3582,1578,3583,3584,3585,3586,3587,\n3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,\n3604,1579,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,\n3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,1580,3630,3631,1581,3632,\n3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,3643,3644,3645,3646,3647,3648,\n3649,3650,3651,3652,3653,3654,3655,3656,1582,3657,3658,3659,3660,3661,3662,3663,\n3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,3676,3677,3678,3679,\n3680,3681,3682,3683,3684,3685,3686,3687,3688,3689,3690,3691,3692,3693,3694,3695,\n3696,3697,3698,3699,3700,1192,3701,3702,3703,3704,1256,3705,3706,3707,3708,1583,\n1257,3709,3710,3711,3712,3713,3714,3715,3716,1584,3717,3718,3719,3720,3721,3722,\n3723,3724,3725,3726,3727,3728,3729,3730,3731,3732,3733,3734,3735,3736,3737,3738,\n3739,3740,3741,3742,3743,3744,3745,1344,3746,3747,3748,3749,3750,3751,3752,3753,\n3754,3755,3756,1585,3757,3758,3759,3760,3761,3762,3763,3764,3765,3766,1586,3767,\n3768,3769,3770,3771,3772,3773,3774,3775,3776,3777,3778,1345,3779,3780,3781,3782,\n3783,3784,3785,3786,3787,3788,3789,3790,3791,3792,3793,3794,3795,1346,1587,3796,\n3797,1588,3798,3799,3800,3801,3802,3803,3804,3805,3806,1347,3807,3808,3809,3810,\n3811,1589,3812,3813,3814,3815,3816,3817,3818,3819,3820,3821,1590,3822,3823,1591,\n1348,3824,3825,3826,3827,3828,3829,3830,1592,3831,3832,1593,3833,3834,3835,3836,\n3837,3838,3839,3840,3841,3842,3843,3844,1349,3845,3846,3847,3848,3849,3850,3851,\n3852,3853,3854,3855,3856,3857,3858,1594,3859,3860,3861,3862,3863,3864,3865,3866,\n3867,3868,3869,1595,3870,3871,3872,3873,1596,3874,3875,3876,3877,3878,3879,3880,\n3881,3882,3883,3884,3885,3886,1597,3887,3888,3889,3890,3891,3892,3893,3894,3895,\n1598,3896,3897,3898,1599,1600,3899,1350,3900,1351,3901,3902,1352,3903,3904,3905,\n3906,3907,3908,3909,3910,3911,3912,3913,3914,3915,3916,3917,3918,3919,3920,3921,\n3922,3923,3924,1258,3925,3926,3927,3928,3929,3930,3931,1193,3932,1601,3933,3934,\n3935,3936,3937,3938,3939,3940,3941,3942,3943,1602,3944,3945,3946,3947,3948,1603,\n3949,3950,3951,3952,3953,3954,3955,3956,3957,3958,3959,3960,3961,3962,3963,3964,\n3965,1604,3966,3967,3968,3969,3970,3971,3972,3973,3974,3975,3976,3977,1353,3978,\n3979,3980,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,1354,3992,3993,\n3994,3995,3996,3997,3998,3999,4000,4001,4002,4003,4004,4005,4006,4007,4008,4009,\n4010,4011,4012,4013,4014,4015,4016,4017,4018,4019,4020,4021,4022,4023,1355,4024,\n4025,4026,4027,4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,\n1605,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,\n4056,4057,4058,4059,4060,1606,4061,4062,4063,4064,1607,4065,4066,4067,4068,4069,\n4070,4071,4072,4073,4074,4075,4076,1194,4077,4078,1608,4079,4080,4081,4082,4083,\n4084,4085,4086,4087,1609,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,\n4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,1259,4109,4110,4111,4112,4113,\n4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,1195,4125,4126,4127,1610,\n4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,1356,4138,4139,4140,4141,4142,\n4143,4144,1611,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,\n4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,\n4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,\n4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,\n4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,1612,4220,\n4221,4222,4223,4224,4225,4226,4227,1357,4228,1613,4229,4230,4231,4232,4233,4234,\n4235,4236,4237,4238,4239,4240,4241,4242,4243,1614,4244,4245,4246,4247,4248,4249,\n4250,4251,4252,4253,4254,4255,4256,4257,4258,4259,4260,4261,4262,4263,4264,4265,\n4266,4267,4268,4269,4270,1196,1358,4271,4272,4273,4274,4275,4276,4277,4278,4279,\n4280,4281,4282,4283,4284,4285,4286,4287,1615,4288,4289,4290,4291,4292,4293,4294,\n4295,4296,4297,4298,4299,4300,4301,4302,4303,4304,4305,4306,4307,4308,4309,4310,\n4311,4312,4313,4314,4315,4316,4317,4318,4319,4320,4321,4322,4323,4324,4325,4326,\n4327,4328,4329,4330,4331,4332,4333,4334,1616,4335,4336,4337,4338,4339,4340,4341,\n4342,4343,4344,4345,4346,4347,4348,4349,4350,4351,4352,4353,4354,4355,4356,4357,\n4358,4359,4360,1617,4361,4362,4363,4364,4365,1618,4366,4367,4368,4369,4370,4371,\n4372,4373,4374,4375,4376,4377,4378,4379,4380,4381,4382,4383,4384,4385,4386,4387,\n4388,4389,4390,4391,4392,4393,4394,4395,4396,4397,4398,4399,4400,4401,4402,4403,\n4404,4405,4406,4407,4408,4409,4410,4411,4412,4413,4414,4415,4416,1619,4417,4418,\n4419,4420,4421,4422,4423,4424,4425,1112,4426,4427,4428,4429,4430,1620,4431,4432,\n4433,4434,4435,4436,4437,4438,4439,4440,4441,4442,1260,1261,4443,4444,4445,4446,\n4447,4448,4449,4450,4451,4452,4453,4454,4455,1359,4456,4457,4458,4459,4460,4461,\n4462,4463,4464,4465,1621,4466,4467,4468,4469,4470,4471,4472,4473,4474,4475,4476,\n4477,4478,4479,4480,4481,4482,4483,4484,4485,4486,4487,4488,4489,1055,4490,4491,\n4492,4493,4494,4495,4496,4497,4498,4499,4500,4501,4502,4503,4504,4505,4506,4507,\n4508,4509,4510,4511,4512,4513,4514,4515,4516,4517,4518,1622,4519,4520,4521,1623,\n4522,4523,4524,4525,4526,4527,4528,4529,4530,4531,4532,4533,4534,4535,1360,4536,\n4537,4538,4539,4540,4541,4542,4543, 975,4544,4545,4546,4547,4548,4549,4550,4551,\n4552,4553,4554,4555,4556,4557,4558,4559,4560,4561,4562,4563,4564,4565,4566,4567,\n4568,4569,4570,4571,1624,4572,4573,4574,4575,4576,1625,4577,4578,4579,4580,4581,\n4582,4583,4584,1626,4585,4586,4587,4588,4589,4590,4591,4592,4593,4594,4595,1627,\n4596,4597,4598,4599,4600,4601,4602,4603,4604,4605,4606,4607,4608,4609,4610,4611,\n4612,4613,4614,4615,1628,4616,4617,4618,4619,4620,4621,4622,4623,4624,4625,4626,\n4627,4628,4629,4630,4631,4632,4633,4634,4635,4636,4637,4638,4639,4640,4641,4642,\n4643,4644,4645,4646,4647,4648,4649,1361,4650,4651,4652,4653,4654,4655,4656,4657,\n4658,4659,4660,4661,1362,4662,4663,4664,4665,4666,4667,4668,4669,4670,4671,4672,\n4673,4674,4675,4676,4677,4678,4679,4680,4681,4682,1629,4683,4684,4685,4686,4687,\n1630,4688,4689,4690,4691,1153,4692,4693,4694,1113,4695,4696,4697,4698,4699,4700,\n4701,4702,4703,4704,4705,4706,4707,4708,4709,4710,4711,1197,4712,4713,4714,4715,\n4716,4717,4718,4719,4720,4721,4722,4723,4724,4725,4726,4727,4728,4729,4730,4731,\n4732,4733,4734,4735,1631,4736,1632,4737,4738,4739,4740,4741,4742,4743,4744,1633,\n4745,4746,4747,4748,4749,1262,4750,4751,4752,4753,4754,1363,4755,4756,4757,4758,\n4759,4760,4761,4762,4763,4764,4765,4766,4767,4768,1634,4769,4770,4771,4772,4773,\n4774,4775,4776,4777,4778,1635,4779,4780,4781,4782,4783,4784,4785,4786,4787,4788,\n4789,1636,4790,4791,4792,4793,4794,4795,4796,4797,4798,4799,4800,4801,4802,4803,\n4804,4805,4806,1637,4807,4808,4809,1638,4810,4811,4812,4813,4814,4815,4816,4817,\n4818,1639,4819,4820,4821,4822,4823,4824,4825,4826,4827,4828,4829,4830,4831,4832,\n4833,1077,4834,4835,4836,4837,4838,4839,4840,4841,4842,4843,4844,4845,4846,4847,\n4848,4849,4850,4851,4852,4853,4854,4855,4856,4857,4858,4859,4860,4861,4862,4863,\n4864,4865,4866,4867,4868,4869,4870,4871,4872,4873,4874,4875,4876,4877,4878,4879,\n4880,4881,4882,4883,1640,4884,4885,1641,4886,4887,4888,4889,4890,4891,4892,4893,\n4894,4895,4896,4897,4898,4899,4900,4901,4902,4903,4904,4905,4906,4907,4908,4909,\n4910,4911,1642,4912,4913,4914,1364,4915,4916,4917,4918,4919,4920,4921,4922,4923,\n4924,4925,4926,4927,4928,4929,4930,4931,1643,4932,4933,4934,4935,4936,4937,4938,\n4939,4940,4941,4942,4943,4944,4945,4946,4947,4948,4949,4950,4951,4952,4953,4954,\n4955,4956,4957,4958,4959,4960,4961,4962,4963,4964,4965,4966,4967,4968,4969,4970,\n4971,4972,4973,4974,4975,4976,4977,4978,4979,4980,1644,4981,4982,4983,4984,1645,\n4985,4986,1646,4987,4988,4989,4990,4991,4992,4993,4994,4995,4996,4997,4998,4999,\n5000,5001,5002,5003,5004,5005,1647,5006,1648,5007,5008,5009,5010,5011,5012,1078,\n5013,5014,5015,5016,5017,5018,5019,5020,5021,5022,5023,5024,5025,5026,5027,5028,\n1365,5029,5030,5031,5032,5033,5034,5035,5036,5037,5038,5039,1649,5040,5041,5042,\n5043,5044,5045,1366,5046,5047,5048,5049,5050,5051,5052,5053,5054,5055,1650,5056,\n5057,5058,5059,5060,5061,5062,5063,5064,5065,5066,5067,5068,5069,5070,5071,5072,\n5073,5074,5075,5076,5077,1651,5078,5079,5080,5081,5082,5083,5084,5085,5086,5087,\n5088,5089,5090,5091,5092,5093,5094,5095,5096,5097,5098,5099,5100,5101,5102,5103,\n5104,5105,5106,5107,5108,5109,5110,1652,5111,5112,5113,5114,5115,5116,5117,5118,\n1367,5119,5120,5121,5122,5123,5124,5125,5126,5127,5128,5129,1653,5130,5131,5132,\n5133,5134,5135,5136,5137,5138,5139,5140,5141,5142,5143,5144,5145,5146,5147,5148,\n5149,1368,5150,1654,5151,1369,5152,5153,5154,5155,5156,5157,5158,5159,5160,5161,\n5162,5163,5164,5165,5166,5167,5168,5169,5170,5171,5172,5173,5174,5175,5176,5177,\n5178,1370,5179,5180,5181,5182,5183,5184,5185,5186,5187,5188,5189,5190,5191,5192,\n5193,5194,5195,5196,5197,5198,1655,5199,5200,5201,5202,1656,5203,5204,5205,5206,\n1371,5207,1372,5208,5209,5210,5211,1373,5212,5213,1374,5214,5215,5216,5217,5218,\n5219,5220,5221,5222,5223,5224,5225,5226,5227,5228,5229,5230,5231,5232,5233,5234,\n5235,5236,5237,5238,5239,5240,5241,5242,5243,5244,5245,5246,5247,1657,5248,5249,\n5250,5251,1658,1263,5252,5253,5254,5255,5256,1375,5257,5258,5259,5260,5261,5262,\n5263,5264,5265,5266,5267,5268,5269,5270,5271,5272,5273,5274,5275,5276,5277,5278,\n5279,5280,5281,5282,5283,1659,5284,5285,5286,5287,5288,5289,5290,5291,5292,5293,\n5294,5295,5296,5297,5298,5299,5300,1660,5301,5302,5303,5304,5305,5306,5307,5308,\n5309,5310,5311,5312,5313,5314,5315,5316,5317,5318,5319,5320,5321,1376,5322,5323,\n5324,5325,5326,5327,5328,5329,5330,5331,5332,5333,1198,5334,5335,5336,5337,5338,\n5339,5340,5341,5342,5343,1661,5344,5345,5346,5347,5348,5349,5350,5351,5352,5353,\n5354,5355,5356,5357,5358,5359,5360,5361,5362,5363,5364,5365,5366,5367,5368,5369,\n5370,5371,5372,5373,5374,5375,5376,5377,5378,5379,5380,5381,5382,5383,5384,5385,\n5386,5387,5388,5389,5390,5391,5392,5393,5394,5395,5396,5397,5398,1264,5399,5400,\n5401,5402,5403,5404,5405,5406,5407,5408,5409,5410,5411,5412,1662,5413,5414,5415,\n5416,1663,5417,5418,5419,5420,5421,5422,5423,5424,5425,5426,5427,5428,5429,5430,\n5431,5432,5433,5434,5435,5436,5437,5438,1664,5439,5440,5441,5442,5443,5444,5445,\n5446,5447,5448,5449,5450,5451,5452,5453,5454,5455,5456,5457,5458,5459,5460,5461,\n5462,5463,5464,5465,5466,5467,5468,5469,5470,5471,5472,5473,5474,5475,5476,5477,\n5478,1154,5479,5480,5481,5482,5483,5484,5485,1665,5486,5487,5488,5489,5490,5491,\n5492,5493,5494,5495,5496,5497,5498,5499,5500,5501,5502,5503,5504,5505,5506,5507,\n5508,5509,5510,5511,5512,5513,5514,5515,5516,5517,5518,5519,5520,5521,5522,5523,\n5524,5525,5526,5527,5528,5529,5530,5531,5532,5533,5534,5535,5536,5537,5538,5539,\n5540,5541,5542,5543,5544,5545,5546,5547,5548,1377,5549,5550,5551,5552,5553,5554,\n5555,5556,5557,5558,5559,5560,5561,5562,5563,5564,5565,5566,5567,5568,5569,5570,\n1114,5571,5572,5573,5574,5575,5576,5577,5578,5579,5580,5581,5582,5583,5584,5585,\n5586,5587,5588,5589,5590,5591,5592,1378,5593,5594,5595,5596,5597,5598,5599,5600,\n5601,5602,5603,5604,5605,5606,5607,5608,5609,5610,5611,5612,5613,5614,1379,5615,\n5616,5617,5618,5619,5620,5621,5622,5623,5624,5625,5626,5627,5628,5629,5630,5631,\n5632,5633,5634,1380,5635,5636,5637,5638,5639,5640,5641,5642,5643,5644,5645,5646,\n5647,5648,5649,1381,1056,5650,5651,5652,5653,5654,5655,5656,5657,5658,5659,5660,\n1666,5661,5662,5663,5664,5665,5666,5667,5668,1667,5669,1668,5670,5671,5672,5673,\n5674,5675,5676,5677,5678,1155,5679,5680,5681,5682,5683,5684,5685,5686,5687,5688,\n5689,5690,5691,5692,5693,5694,5695,5696,5697,5698,1669,5699,5700,5701,5702,5703,\n5704,5705,1670,5706,5707,5708,5709,5710,1671,5711,5712,5713,5714,1382,5715,5716,\n5717,5718,5719,5720,5721,5722,5723,5724,5725,1672,5726,5727,1673,1674,5728,5729,\n5730,5731,5732,5733,5734,5735,5736,1675,5737,5738,5739,5740,5741,5742,5743,5744,\n1676,5745,5746,5747,5748,5749,5750,5751,1383,5752,5753,5754,5755,5756,5757,5758,\n5759,5760,5761,5762,5763,5764,5765,5766,5767,5768,1677,5769,5770,5771,5772,5773,\n1678,5774,5775,5776, 998,5777,5778,5779,5780,5781,5782,5783,5784,5785,1384,5786,\n5787,5788,5789,5790,5791,5792,5793,5794,5795,5796,5797,5798,5799,5800,1679,5801,\n5802,5803,1115,1116,5804,5805,5806,5807,5808,5809,5810,5811,5812,5813,5814,5815,\n5816,5817,5818,5819,5820,5821,5822,5823,5824,5825,5826,5827,5828,5829,5830,5831,\n5832,5833,5834,5835,5836,5837,5838,5839,5840,5841,5842,5843,5844,5845,5846,5847,\n5848,5849,5850,5851,5852,5853,5854,5855,1680,5856,5857,5858,5859,5860,5861,5862,\n5863,5864,1681,5865,5866,5867,1682,5868,5869,5870,5871,5872,5873,5874,5875,5876,\n5877,5878,5879,1683,5880,1684,5881,5882,5883,5884,1685,5885,5886,5887,5888,5889,\n5890,5891,5892,5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904,5905,\n5906,5907,1686,5908,5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920,\n5921,5922,5923,5924,5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,1687,\n5936,5937,5938,5939,5940,5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,\n5952,1688,1689,5953,1199,5954,5955,5956,5957,5958,5959,5960,5961,1690,5962,5963,\n5964,5965,5966,5967,5968,5969,5970,5971,5972,5973,5974,5975,5976,5977,5978,5979,\n5980,5981,1385,5982,1386,5983,5984,5985,5986,5987,5988,5989,5990,5991,5992,5993,\n5994,5995,5996,5997,5998,5999,6000,6001,6002,6003,6004,6005,6006,6007,6008,6009,\n6010,6011,6012,6013,6014,6015,6016,6017,6018,6019,6020,6021,6022,6023,6024,6025,\n6026,6027,1265,6028,6029,1691,6030,6031,6032,6033,6034,6035,6036,6037,6038,6039,\n6040,6041,6042,6043,6044,6045,6046,6047,6048,6049,6050,6051,6052,6053,6054,6055,\n6056,6057,6058,6059,6060,6061,6062,6063,6064,6065,6066,6067,6068,6069,6070,6071,\n6072,6073,6074,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084,1692,6085,6086,\n6087,6088,6089,6090,6091,6092,6093,6094,6095,6096,6097,6098,6099,6100,6101,6102,\n6103,6104,6105,6106,6107,6108,6109,6110,6111,6112,6113,6114,6115,6116,6117,6118,\n6119,6120,6121,6122,6123,6124,6125,6126,6127,6128,6129,6130,6131,1693,6132,6133,\n6134,6135,6136,1694,6137,6138,6139,6140,6141,1695,6142,6143,6144,6145,6146,6147,\n6148,6149,6150,6151,6152,6153,6154,6155,6156,6157,6158,6159,6160,6161,6162,6163,\n6164,6165,6166,6167,6168,6169,6170,6171,6172,6173,6174,6175,6176,6177,6178,6179,\n6180,6181,6182,6183,6184,6185,1696,6186,6187,6188,6189,6190,6191,6192,6193,6194,\n6195,6196,6197,6198,6199,6200,6201,6202,6203,6204,6205,6206,6207,6208,6209,6210,\n6211,6212,6213,6214,6215,6216,6217,6218,6219,1697,6220,6221,6222,6223,6224,6225,\n6226,6227,6228,6229,6230,6231,6232,6233,6234,6235,6236,6237,6238,6239,6240,6241,\n6242,6243,6244,6245,6246,6247,6248,6249,6250,6251,6252,6253,1698,6254,6255,6256,\n6257,6258,6259,6260,6261,6262,6263,1200,6264,6265,6266,6267,6268,6269,6270,6271,  //1024\n6272,6273,6274,6275,6276,6277,6278,6279,6280,6281,6282,6283,6284,6285,6286,6287,\n6288,6289,6290,6291,6292,6293,6294,6295,6296,6297,6298,6299,6300,6301,6302,1699,\n6303,6304,1700,6305,6306,6307,6308,6309,6310,6311,6312,6313,6314,6315,6316,6317,\n6318,6319,6320,6321,6322,6323,6324,6325,6326,6327,6328,6329,6330,6331,6332,6333,\n6334,6335,6336,6337,6338,6339,1701,6340,6341,6342,6343,6344,1387,6345,6346,6347,\n6348,6349,6350,6351,6352,6353,6354,6355,6356,6357,6358,6359,6360,6361,6362,6363,\n6364,6365,6366,6367,6368,6369,6370,6371,6372,6373,6374,6375,6376,6377,6378,6379,\n6380,6381,6382,6383,6384,6385,6386,6387,6388,6389,6390,6391,6392,6393,6394,6395,\n6396,6397,6398,6399,6400,6401,6402,6403,6404,6405,6406,6407,6408,6409,6410,6411,\n6412,6413,1702,6414,6415,6416,6417,6418,6419,6420,6421,6422,1703,6423,6424,6425,\n6426,6427,6428,6429,6430,6431,6432,6433,6434,6435,6436,6437,6438,1704,6439,6440,\n6441,6442,6443,6444,6445,6446,6447,6448,6449,6450,6451,6452,6453,6454,6455,6456,\n6457,6458,6459,6460,6461,6462,6463,6464,6465,6466,6467,6468,6469,6470,6471,6472,\n6473,6474,6475,6476,6477,6478,6479,6480,6481,6482,6483,6484,6485,6486,6487,6488,\n6489,6490,6491,6492,6493,6494,6495,6496,6497,6498,6499,6500,6501,6502,6503,1266,\n6504,6505,6506,6507,6508,6509,6510,6511,6512,6513,6514,6515,6516,6517,6518,6519,\n6520,6521,6522,6523,6524,6525,6526,6527,6528,6529,6530,6531,6532,6533,6534,6535,\n6536,6537,6538,6539,6540,6541,6542,6543,6544,6545,6546,6547,6548,6549,6550,6551,\n1705,1706,6552,6553,6554,6555,6556,6557,6558,6559,6560,6561,6562,6563,6564,6565,\n6566,6567,6568,6569,6570,6571,6572,6573,6574,6575,6576,6577,6578,6579,6580,6581,\n6582,6583,6584,6585,6586,6587,6588,6589,6590,6591,6592,6593,6594,6595,6596,6597,\n6598,6599,6600,6601,6602,6603,6604,6605,6606,6607,6608,6609,6610,6611,6612,6613,\n6614,6615,6616,6617,6618,6619,6620,6621,6622,6623,6624,6625,6626,6627,6628,6629,\n6630,6631,6632,6633,6634,6635,6636,6637,1388,6638,6639,6640,6641,6642,6643,6644,\n1707,6645,6646,6647,6648,6649,6650,6651,6652,6653,6654,6655,6656,6657,6658,6659,\n6660,6661,6662,6663,1708,6664,6665,6666,6667,6668,6669,6670,6671,6672,6673,6674,\n1201,6675,6676,6677,6678,6679,6680,6681,6682,6683,6684,6685,6686,6687,6688,6689,\n6690,6691,6692,6693,6694,6695,6696,6697,6698,6699,6700,6701,6702,6703,6704,6705,\n6706,6707,6708,6709,6710,6711,6712,6713,6714,6715,6716,6717,6718,6719,6720,6721,\n6722,6723,6724,6725,1389,6726,6727,6728,6729,6730,6731,6732,6733,6734,6735,6736,\n1390,1709,6737,6738,6739,6740,6741,6742,1710,6743,6744,6745,6746,1391,6747,6748,\n6749,6750,6751,6752,6753,6754,6755,6756,6757,1392,6758,6759,6760,6761,6762,6763,\n6764,6765,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777,6778,6779,\n6780,1202,6781,6782,6783,6784,6785,6786,6787,6788,6789,6790,6791,6792,6793,6794,\n6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806,6807,6808,6809,1711,\n6810,6811,6812,6813,6814,6815,6816,6817,6818,6819,6820,6821,6822,6823,6824,6825,\n6826,6827,6828,6829,6830,6831,6832,6833,6834,6835,6836,1393,6837,6838,6839,6840,\n6841,6842,6843,6844,6845,6846,6847,6848,6849,6850,6851,6852,6853,6854,6855,6856,\n6857,6858,6859,6860,6861,6862,6863,6864,6865,6866,6867,6868,6869,6870,6871,6872,\n6873,6874,6875,6876,6877,6878,6879,6880,6881,6882,6883,6884,6885,6886,6887,6888,\n6889,6890,6891,6892,6893,6894,6895,6896,6897,6898,6899,6900,6901,6902,1712,6903,\n6904,6905,6906,6907,6908,6909,6910,1713,6911,6912,6913,6914,6915,6916,6917,6918,\n6919,6920,6921,6922,6923,6924,6925,6926,6927,6928,6929,6930,6931,6932,6933,6934,\n6935,6936,6937,6938,6939,6940,6941,6942,6943,6944,6945,6946,6947,6948,6949,6950,\n6951,6952,6953,6954,6955,6956,6957,6958,6959,6960,6961,6962,6963,6964,6965,6966,\n6967,6968,6969,6970,6971,6972,6973,6974,1714,6975,6976,6977,6978,6979,6980,6981,\n6982,6983,6984,6985,6986,6987,6988,1394,6989,6990,6991,6992,6993,6994,6995,6996,\n6997,6998,6999,7000,1715,7001,7002,7003,7004,7005,7006,7007,7008,7009,7010,7011,\n7012,7013,7014,7015,7016,7017,7018,7019,7020,7021,7022,7023,7024,7025,7026,7027,\n7028,1716,7029,7030,7031,7032,7033,7034,7035,7036,7037,7038,7039,7040,7041,7042,\n7043,7044,7045,7046,7047,7048,7049,7050,7051,7052,7053,7054,7055,7056,7057,7058,\n7059,7060,7061,7062,7063,7064,7065,7066,7067,7068,7069,7070,7071,7072,7073,7074,\n7075,7076,7077,7078,7079,7080,7081,7082,7083,7084,7085,7086,7087,7088,7089,7090,\n7091,7092,7093,7094,7095,7096,7097,7098,7099,7100,7101,7102,7103,7104,7105,7106,\n7107,7108,7109,7110,7111,7112,7113,7114,7115,7116,7117,7118,7119,7120,7121,7122,\n7123,7124,7125,7126,7127,7128,7129,7130,7131,7132,7133,7134,7135,7136,7137,7138,\n7139,7140,7141,7142,7143,7144,7145,7146,7147,7148,7149,7150,7151,7152,7153,7154,\n7155,7156,7157,7158,7159,7160,7161,7162,7163,7164,7165,7166,7167,7168,7169,7170,\n7171,7172,7173,7174,7175,7176,7177,7178,7179,7180,7181,7182,7183,7184,7185,7186,\n7187,7188,7189,7190,7191,7192,7193,7194,7195,7196,7197,7198,7199,7200,7201,7202,\n7203,7204,7205,7206,7207,1395,7208,7209,7210,7211,7212,7213,1717,7214,7215,7216,\n7217,7218,7219,7220,7221,7222,7223,7224,7225,7226,7227,7228,7229,7230,7231,7232,\n7233,7234,7235,7236,7237,7238,7239,7240,7241,7242,7243,7244,7245,7246,7247,7248,\n7249,7250,7251,7252,7253,7254,7255,7256,7257,7258,7259,7260,7261,7262,7263,7264,\n7265,7266,7267,7268,7269,7270,7271,7272,7273,7274,7275,7276,7277,7278,7279,7280,\n7281,7282,7283,7284,7285,7286,7287,7288,7289,7290,7291,7292,7293,7294,7295,7296,\n7297,7298,7299,7300,7301,7302,7303,7304,7305,7306,7307,7308,7309,7310,7311,7312,\n7313,1718,7314,7315,7316,7317,7318,7319,7320,7321,7322,7323,7324,7325,7326,7327,\n7328,7329,7330,7331,7332,7333,7334,7335,7336,7337,7338,7339,7340,7341,7342,7343,\n7344,7345,7346,7347,7348,7349,7350,7351,7352,7353,7354,7355,7356,7357,7358,7359,\n7360,7361,7362,7363,7364,7365,7366,7367,7368,7369,7370,7371,7372,7373,7374,7375,\n7376,7377,7378,7379,7380,7381,7382,7383,7384,7385,7386,7387,7388,7389,7390,7391,\n7392,7393,7394,7395,7396,7397,7398,7399,7400,7401,7402,7403,7404,7405,7406,7407,\n7408,7409,7410,7411,7412,7413,7414,7415,7416,7417,7418,7419,7420,7421,7422,7423,\n7424,7425,7426,7427,7428,7429,7430,7431,7432,7433,7434,7435,7436,7437,7438,7439,\n7440,7441,7442,7443,7444,7445,7446,7447,7448,7449,7450,7451,7452,7453,7454,7455,\n7456,7457,7458,7459,7460,7461,7462,7463,7464,7465,7466,7467,7468,7469,7470,7471,\n7472,7473,7474,7475,7476,7477,7478,7479,7480,7481,7482,7483,7484,7485,7486,7487,\n7488,7489,7490,7491,7492,7493,7494,7495,7496,7497,7498,7499,7500,7501,7502,7503,\n7504,7505,7506,7507,7508,7509,7510,7511,7512,7513,7514,7515,7516,7517,7518,7519,\n7520,7521,7522,7523,7524,7525,7526,7527,7528,7529,7530,7531,7532,7533,7534,7535,\n7536,7537,7538,7539,7540,7541,7542,7543,7544,7545,7546,7547,7548,7549,7550,7551,\n7552,7553,7554,7555,7556,7557,7558,7559,7560,7561,7562,7563,7564,7565,7566,7567,\n7568,7569,7570,7571,7572,7573,7574,7575,7576,7577,7578,7579,7580,7581,7582,7583,\n7584,7585,7586,7587,7588,7589,7590,7591,7592,7593,7594,7595,7596,7597,7598,7599,\n7600,7601,7602,7603,7604,7605,7606,7607,7608,7609,7610,7611,7612,7613,7614,7615,\n7616,7617,7618,7619,7620,7621,7622,7623,7624,7625,7626,7627,7628,7629,7630,7631,\n7632,7633,7634,7635,7636,7637,7638,7639,7640,7641,7642,7643,7644,7645,7646,7647,\n7648,7649,7650,7651,7652,7653,7654,7655,7656,7657,7658,7659,7660,7661,7662,7663,\n7664,7665,7666,7667,7668,7669,7670,7671,7672,7673,7674,7675,7676,7677,7678,7679,\n7680,7681,7682,7683,7684,7685,7686,7687,7688,7689,7690,7691,7692,7693,7694,7695,\n7696,7697,7698,7699,7700,7701,7702,7703,7704,7705,7706,7707,7708,7709,7710,7711,\n7712,7713,7714,7715,7716,7717,7718,7719,7720,7721,7722,7723,7724,7725,7726,7727,\n7728,7729,7730,7731,7732,7733,7734,7735,7736,7737,7738,7739,7740,7741,7742,7743,\n7744,7745,7746,7747,7748,7749,7750,7751,7752,7753,7754,7755,7756,7757,7758,7759,\n7760,7761,7762,7763,7764,7765,7766,7767,7768,7769,7770,7771,7772,7773,7774,7775,\n7776,7777,7778,7779,7780,7781,7782,7783,7784,7785,7786,7787,7788,7789,7790,7791,\n7792,7793,7794,7795,7796,7797,7798,7799,7800,7801,7802,7803,7804,7805,7806,7807,\n7808,7809,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,\n7824,7825,7826,7827,7828,7829,7830,7831,7832,7833,7834,7835,7836,7837,7838,7839,\n7840,7841,7842,7843,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7854,7855,\n7856,7857,7858,7859,7860,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870,7871,\n7872,7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886,7887,\n7888,7889,7890,7891,7892,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,\n7904,7905,7906,7907,7908,7909,7910,7911,7912,7913,7914,7915,7916,7917,7918,7919,\n7920,7921,7922,7923,7924,7925,7926,7927,7928,7929,7930,7931,7932,7933,7934,7935,\n7936,7937,7938,7939,7940,7941,7942,7943,7944,7945,7946,7947,7948,7949,7950,7951,\n7952,7953,7954,7955,7956,7957,7958,7959,7960,7961,7962,7963,7964,7965,7966,7967,\n7968,7969,7970,7971,7972,7973,7974,7975,7976,7977,7978,7979,7980,7981,7982,7983,\n7984,7985,7986,7987,7988,7989,7990,7991,7992,7993,7994,7995,7996,7997,7998,7999,\n8000,8001,8002,8003,8004,8005,8006,8007,8008,8009,8010,8011,8012,8013,8014,8015,\n8016,8017,8018,8019,8020,8021,8022,8023,8024,8025,8026,8027,8028,8029,8030,8031,\n8032,8033,8034,8035,8036,8037,8038,8039,8040,8041,8042,8043,8044,8045,8046,8047,\n8048,8049,8050,8051,8052,8053,8054,8055,8056,8057,8058,8059,8060,8061,8062,8063,\n8064,8065,8066,8067,8068,8069,8070,8071,8072,8073,8074,8075,8076,8077,8078,8079,\n8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095,\n8096,8097,8098,8099,8100,8101,8102,8103,8104,8105,8106,8107,8108,8109,8110,8111,\n8112,8113,8114,8115,8116,8117,8118,8119,8120,8121,8122,8123,8124,8125,8126,8127,\n8128,8129,8130,8131,8132,8133,8134,8135,8136,8137,8138,8139,8140,8141,8142,8143,\n8144,8145,8146,8147,8148,8149,8150,8151,8152,8153,8154,8155,8156,8157,8158,8159,\n8160,8161,8162,8163,8164,8165,8166,8167,8168,8169,8170,8171,8172,8173,8174,8175,\n8176,8177,8178,8179,8180,8181,8182,8183,8184,8185,8186,8187,8188,8189,8190,8191,\n8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,\n8208,8209,8210,8211,8212,8213,8214,8215,8216,8217,8218,8219,8220,8221,8222,8223,\n8224,8225,8226,8227,8228,8229,8230,8231,8232,8233,8234,8235,8236,8237,8238,8239,\n8240,8241,8242,8243,8244,8245,8246,8247,8248,8249,8250,8251,8252,8253,8254,8255,\n8256,8257,8258,8259,8260,8261,8262,8263,8264,8265,8266,8267,8268,8269,8270,8271,\n8272,8273,8274,8275,8276,8277,8278,8279,8280,8281,8282,8283,8284,8285,8286,8287,\n8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,\n8304,8305,8306,8307,8308,8309,8310,8311,8312,8313,8314,8315,8316,8317,8318,8319,\n8320,8321,8322,8323,8324,8325,8326,8327,8328,8329,8330,8331,8332,8333,8334,8335,\n8336,8337,8338,8339,8340,8341,8342,8343,8344,8345,8346,8347,8348,8349,8350,8351,\n8352,8353,8354,8355,8356,8357,8358,8359,8360,8361,8362,8363,8364,8365,8366,8367,\n8368,8369,8370,8371,8372,8373,8374,8375,8376,8377,8378,8379,8380,8381,8382,8383,\n8384,8385,8386,8387,8388,8389,8390,8391,8392,8393,8394,8395,8396,8397,8398,8399,\n8400,8401,8402,8403,8404,8405,8406,8407,8408,8409,8410,8411,8412,8413,8414,8415,\n8416,8417,8418,8419,8420,8421,8422,8423,8424,8425,8426,8427,8428,8429,8430,8431,\n8432,8433,8434,8435,8436,8437,8438,8439,8440,8441,8442,8443,8444,8445,8446,8447,\n8448,8449,8450,8451,8452,8453,8454,8455,8456,8457,8458,8459,8460,8461,8462,8463,\n8464,8465,8466,8467,8468,8469,8470,8471,8472,8473,8474,8475,8476,8477,8478,8479,\n8480,8481,8482,8483,8484,8485,8486,8487,8488,8489,8490,8491,8492,8493,8494,8495,\n8496,8497,8498,8499,8500,8501,8502,8503,8504,8505,8506,8507,8508,8509,8510,8511,\n8512,8513,8514,8515,8516,8517,8518,8519,8520,8521,8522,8523,8524,8525,8526,8527,\n8528,8529,8530,8531,8532,8533,8534,8535,8536,8537,8538,8539,8540,8541,8542,8543,\n8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,8556,8557,8558,8559,\n8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8570,8571,8572,8573,8574,8575,\n8576,8577,8578,8579,8580,8581,8582,8583,8584,8585,8586,8587,8588,8589,8590,8591,\n8592,8593,8594,8595,8596,8597,8598,8599,8600,8601,8602,8603,8604,8605,8606,8607,\n8608,8609,8610,8611,8612,8613,8614,8615,8616,8617,8618,8619,8620,8621,8622,8623,\n8624,8625,8626,8627,8628,8629,8630,8631,8632,8633,8634,8635,8636,8637,8638,8639,\n8640,8641,8642,8643,8644,8645,8646,8647,8648,8649,8650,8651,8652,8653,8654,8655,\n8656,8657,8658,8659,8660,8661,8662,8663,8664,8665,8666,8667,8668,8669,8670,8671,\n8672,8673,8674,8675,8676,8677,8678,8679,8680,8681,8682,8683,8684,8685,8686,8687,\n8688,8689,8690,8691,8692,8693,8694,8695,8696,8697,8698,8699,8700,8701,8702,8703,\n8704,8705,8706,8707,8708,8709,8710,8711,8712,8713,8714,8715,8716,8717,8718,8719,\n8720,8721,8722,8723,8724,8725,8726,8727,8728,8729,8730,8731,8732,8733,8734,8735,\n8736,8737,8738,8739,8740,8741\n];\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\n// Big5 frequency table\n// by Taiwan's Mandarin Promotion Council\n// <http://www.edu.tw:81/mandr/>\n//\n// 128  --> 0.42261\n// 256  --> 0.57851\n// 512  --> 0.74851\n// 1024 --> 0.89384\n// 2048 --> 0.97583\n//\n// Ideal Distribution Ratio = 0.74851/(1-0.74851) =2.98\n// Random Distribution Ration = 512/(5401-512)=0.105\n//\n// Typical Distribution Ratio about 25% of Ideal one, still much higher than RDR\n\njschardet.BIG5_TYPICAL_DISTRIBUTION_RATIO = 0.75;\n\n//Char to FreqOrder table\njschardet.BIG5_TABLE_SIZE = 5376;\n\njschardet.Big5CharToFreqOrder = [\n   1,1801,1506, 255,1431, 198,   9,  82,   6,5008, 177, 202,3681,1256,2821, 110, //   16\n3814,  33,3274, 261,  76,  44,2114,  16,2946,2187,1176, 659,3971,  26,3451,2653, //   32\n1198,3972,3350,4202, 410,2215, 302, 590, 361,1964,   8, 204,  58,4510,5009,1932, //   48\n  63,5010,5011, 317,1614,  75, 222, 159,4203,2417,1480,5012,3555,3091, 224,2822, //   64\n3682,   3,  10,3973,1471,  29,2787,1135,2866,1940, 873, 130,3275,1123, 312,5013, //   80\n4511,2052, 507, 252, 682,5014, 142,1915, 124, 206,2947,  34,3556,3204,  64, 604, //   96\n5015,2501,1977,1978, 155,1991, 645, 641,1606,5016,3452, 337,  72, 406,5017,  80, //  112\n 630, 238,3205,1509, 263, 939,1092,2654, 756,1440,1094,3453, 449,  69,2987, 591, //  128\n 179,2096, 471, 115,2035,1844,  60,  50,2988, 134, 806,1869, 734,2036,3454, 180, //  144\n 995,1607, 156, 537,2907, 688,5018, 319,1305, 779,2145, 514,2379, 298,4512, 359, //  160\n2502,  90,2716,1338, 663,  11, 906,1099,2553,  20,2441, 182, 532,1716,5019, 732, //  176\n1376,4204,1311,1420,3206,  25,2317,1056, 113, 399, 382,1950, 242,3455,2474, 529, //  192\n3276, 475,1447,3683,5020, 117,  21, 656, 810,1297,2300,2334,3557,5021, 126,4205, //  208\n 706, 456, 150, 613,4513,  71,1118,2037,4206, 145,3092,  85, 835, 486,2115,1246, //  224\n1426, 428, 727,1285,1015, 800, 106, 623, 303,1281,5022,2128,2359, 347,3815, 221, //  240\n3558,3135,5023,1956,1153,4207,  83, 296,1199,3093, 192, 624,  93,5024, 822,1898, //  256\n2823,3136, 795,2065, 991,1554,1542,1592,  27,  43,2867, 859, 139,1456, 860,4514, //  272\n 437, 712,3974, 164,2397,3137, 695, 211,3037,2097, 195,3975,1608,3559,3560,3684, //  288\n3976, 234, 811,2989,2098,3977,2233,1441,3561,1615,2380, 668,2077,1638, 305, 228, //  304\n1664,4515, 467, 415,5025, 262,2099,1593, 239, 108, 300, 200,1033, 512,1247,2078, //  320\n5026,5027,2176,3207,3685,2682, 593, 845,1062,3277,  88,1723,2038,3978,1951, 212, //  336\n 266, 152, 149, 468,1899,4208,4516,  77, 187,5028,3038,  37,   5,2990,5029,3979, //  352\n5030,5031,  39,2524,4517,2908,3208,2079,  55, 148,  74,4518, 545, 483,1474,1029, //  368\n1665, 217,1870,1531,3138,1104,2655,4209,  24, 172,3562, 900,3980,3563,3564,4519, //  384\n  32,1408,2824,1312, 329, 487,2360,2251,2717, 784,2683,   4,3039,3351,1427,1789, //  400\n 188, 109, 499,5032,3686,1717,1790, 888,1217,3040,4520,5033,3565,5034,3352,1520, //  416\n3687,3981, 196,1034, 775,5035,5036, 929,1816, 249, 439,  38,5037,1063,5038, 794, //  432\n3982,1435,2301,  46, 178,3278,2066,5039,2381,5040, 214,1709,4521, 804,  35, 707, //  448\n 324,3688,1601,2554, 140, 459,4210,5041,5042,1365, 839, 272, 978,2262,2580,3456, //  464\n2129,1363,3689,1423, 697, 100,3094,  48,  70,1231, 495,3139,2196,5043,1294,5044, //  480\n2080, 462, 586,1042,3279, 853, 256, 988, 185,2382,3457,1698, 434,1084,5045,3458, //  496\n 314,2625,2788,4522,2335,2336, 569,2285, 637,1817,2525, 757,1162,1879,1616,3459, //  512\n 287,1577,2116, 768,4523,1671,2868,3566,2526,1321,3816, 909,2418,5046,4211, 933, //  528\n3817,4212,2053,2361,1222,4524, 765,2419,1322, 786,4525,5047,1920,1462,1677,2909, //  544\n1699,5048,4526,1424,2442,3140,3690,2600,3353,1775,1941,3460,3983,4213, 309,1369, //  560\n1130,2825, 364,2234,1653,1299,3984,3567,3985,3986,2656, 525,1085,3041, 902,2001, //  576\n1475, 964,4527, 421,1845,1415,1057,2286, 940,1364,3141, 376,4528,4529,1381,   7, //  592\n2527, 983,2383, 336,1710,2684,1846, 321,3461, 559,1131,3042,2752,1809,1132,1313, //  608\n 265,1481,1858,5049, 352,1203,2826,3280, 167,1089, 420,2827, 776, 792,1724,3568, //  624\n4214,2443,3281,5050,4215,5051, 446, 229, 333,2753, 901,3818,1200,1557,4530,2657, //  640\n1921, 395,2754,2685,3819,4216,1836, 125, 916,3209,2626,4531,5052,5053,3820,5054, //  656\n5055,5056,4532,3142,3691,1133,2555,1757,3462,1510,2318,1409,3569,5057,2146, 438, //  672\n2601,2910,2384,3354,1068, 958,3043, 461, 311,2869,2686,4217,1916,3210,4218,1979, //  688\n 383, 750,2755,2627,4219, 274, 539, 385,1278,1442,5058,1154,1965, 384, 561, 210, //  704\n  98,1295,2556,3570,5059,1711,2420,1482,3463,3987,2911,1257, 129,5060,3821, 642, //  720\n 523,2789,2790,2658,5061, 141,2235,1333,  68, 176, 441, 876, 907,4220, 603,2602, //  736\n 710, 171,3464, 404, 549,  18,3143,2398,1410,3692,1666,5062,3571,4533,2912,4534, //  752\n5063,2991, 368,5064, 146, 366,  99, 871,3693,1543, 748, 807,1586,1185,  22,2263, //  768\n 379,3822,3211,5065,3212, 505,1942,2628,1992,1382,2319,5066, 380,2362, 218, 702, //  784\n1818,1248,3465,3044,3572,3355,3282,5067,2992,3694, 930,3283,3823,5068,  59,5069, //  800\n 585, 601,4221, 497,3466,1112,1314,4535,1802,5070,1223,1472,2177,5071, 749,1837, //  816\n 690,1900,3824,1773,3988,1476, 429,1043,1791,2236,2117, 917,4222, 447,1086,1629, //  832\n5072, 556,5073,5074,2021,1654, 844,1090, 105, 550, 966,1758,2828,1008,1783, 686, //  848\n1095,5075,2287, 793,1602,5076,3573,2603,4536,4223,2948,2302,4537,3825, 980,2503, //  864\n 544, 353, 527,4538, 908,2687,2913,5077, 381,2629,1943,1348,5078,1341,1252, 560, //  880\n3095,5079,3467,2870,5080,2054, 973, 886,2081, 143,4539,5081,5082, 157,3989, 496, //  896\n4224,  57, 840, 540,2039,4540,4541,3468,2118,1445, 970,2264,1748,1966,2082,4225, //  912\n3144,1234,1776,3284,2829,3695, 773,1206,2130,1066,2040,1326,3990,1738,1725,4226, //  928\n 279,3145,  51,1544,2604, 423,1578,2131,2067, 173,4542,1880,5083,5084,1583, 264, //  944\n 610,3696,4543,2444, 280, 154,5085,5086,5087,1739, 338,1282,3096, 693,2871,1411, //  960\n1074,3826,2445,5088,4544,5089,5090,1240, 952,2399,5091,2914,1538,2688, 685,1483, //  976\n4227,2475,1436, 953,4228,2055,4545, 671,2400,  79,4229,2446,3285, 608, 567,2689, //  992\n3469,4230,4231,1691, 393,1261,1792,2401,5092,4546,5093,5094,5095,5096,1383,1672, // 1008\n3827,3213,1464, 522,1119, 661,1150, 216, 675,4547,3991,1432,3574, 609,4548,2690, // 1024\n2402,5097,5098,5099,4232,3045,   0,5100,2476, 315, 231,2447, 301,3356,4549,2385, // 1040\n5101, 233,4233,3697,1819,4550,4551,5102,  96,1777,1315,2083,5103, 257,5104,1810, // 1056\n3698,2718,1139,1820,4234,2022,1124,2164,2791,1778,2659,5105,3097, 363,1655,3214, // 1072\n5106,2993,5107,5108,5109,3992,1567,3993, 718, 103,3215, 849,1443, 341,3357,2949, // 1088\n1484,5110,1712, 127,  67, 339,4235,2403, 679,1412, 821,5111,5112, 834, 738, 351, // 1104\n2994,2147, 846, 235,1497,1881, 418,1993,3828,2719, 186,1100,2148,2756,3575,1545, // 1120\n1355,2950,2872,1377, 583,3994,4236,2581,2995,5113,1298,3699,1078,2557,3700,2363, // 1136\n  78,3829,3830, 267,1289,2100,2002,1594,4237, 348, 369,1274,2197,2178,1838,4552, // 1152\n1821,2830,3701,2757,2288,2003,4553,2951,2758, 144,3358, 882,4554,3995,2759,3470, // 1168\n4555,2915,5114,4238,1726, 320,5115,3996,3046, 788,2996,5116,2831,1774,1327,2873, // 1184\n3997,2832,5117,1306,4556,2004,1700,3831,3576,2364,2660, 787,2023, 506, 824,3702, // 1200\n 534, 323,4557,1044,3359,2024,1901, 946,3471,5118,1779,1500,1678,5119,1882,4558, // 1216\n 165, 243,4559,3703,2528, 123, 683,4239, 764,4560,  36,3998,1793, 589,2916, 816, // 1232\n 626,1667,3047,2237,1639,1555,1622,3832,3999,5120,4000,2874,1370,1228,1933, 891, // 1248\n2084,2917, 304,4240,5121, 292,2997,2720,3577, 691,2101,4241,1115,4561, 118, 662, // 1264\n5122, 611,1156, 854,2386,1316,2875,   2, 386, 515,2918,5123,5124,3286, 868,2238, // 1280\n1486, 855,2661, 785,2216,3048,5125,1040,3216,3578,5126,3146, 448,5127,1525,5128, // 1296\n2165,4562,5129,3833,5130,4242,2833,3579,3147, 503, 818,4001,3148,1568, 814, 676, // 1312\n1444, 306,1749,5131,3834,1416,1030, 197,1428, 805,2834,1501,4563,5132,5133,5134, // 1328\n1994,5135,4564,5136,5137,2198,  13,2792,3704,2998,3149,1229,1917,5138,3835,2132, // 1344\n5139,4243,4565,2404,3580,5140,2217,1511,1727,1120,5141,5142, 646,3836,2448, 307, // 1360\n5143,5144,1595,3217,5145,5146,5147,3705,1113,1356,4002,1465,2529,2530,5148, 519, // 1376\n5149, 128,2133,  92,2289,1980,5150,4003,1512, 342,3150,2199,5151,2793,2218,1981, // 1392\n3360,4244, 290,1656,1317, 789, 827,2365,5152,3837,4566, 562, 581,4004,5153, 401, // 1408\n4567,2252,  94,4568,5154,1399,2794,5155,1463,2025,4569,3218,1944,5156, 828,1105, // 1424\n4245,1262,1394,5157,4246, 605,4570,5158,1784,2876,5159,2835, 819,2102, 578,2200, // 1440\n2952,5160,1502, 436,3287,4247,3288,2836,4005,2919,3472,3473,5161,2721,2320,5162, // 1456\n5163,2337,2068,  23,4571, 193, 826,3838,2103, 699,1630,4248,3098, 390,1794,1064, // 1472\n3581,5164,1579,3099,3100,1400,5165,4249,1839,1640,2877,5166,4572,4573, 137,4250, // 1488\n 598,3101,1967, 780, 104, 974,2953,5167, 278, 899, 253, 402, 572, 504, 493,1339, // 1504\n5168,4006,1275,4574,2582,2558,5169,3706,3049,3102,2253, 565,1334,2722, 863,  41, // 1520\n5170,5171,4575,5172,1657,2338,  19, 463,2760,4251, 606,5173,2999,3289,1087,2085, // 1536\n1323,2662,3000,5174,1631,1623,1750,4252,2691,5175,2878, 791,2723,2663,2339, 232, // 1552\n2421,5176,3001,1498,5177,2664,2630, 755,1366,3707,3290,3151,2026,1609, 119,1918, // 1568\n3474, 862,1026,4253,5178,4007,3839,4576,4008,4577,2265,1952,2477,5179,1125, 817, // 1584\n4254,4255,4009,1513,1766,2041,1487,4256,3050,3291,2837,3840,3152,5180,5181,1507, // 1600\n5182,2692, 733,  40,1632,1106,2879, 345,4257, 841,2531, 230,4578,3002,1847,3292, // 1616\n3475,5183,1263, 986,3476,5184, 735, 879, 254,1137, 857, 622,1300,1180,1388,1562, // 1632\n4010,4011,2954, 967,2761,2665,1349, 592,2134,1692,3361,3003,1995,4258,1679,4012, // 1648\n1902,2188,5185, 739,3708,2724,1296,1290,5186,4259,2201,2202,1922,1563,2605,2559, // 1664\n1871,2762,3004,5187, 435,5188, 343,1108, 596,  17,1751,4579,2239,3477,3709,5189, // 1680\n4580, 294,3582,2955,1693, 477, 979, 281,2042,3583, 643,2043,3710,2631,2795,2266, // 1696\n1031,2340,2135,2303,3584,4581, 367,1249,2560,5190,3585,5191,4582,1283,3362,2005, // 1712\n 240,1762,3363,4583,4584, 836,1069,3153, 474,5192,2149,2532, 268,3586,5193,3219, // 1728\n1521,1284,5194,1658,1546,4260,5195,3587,3588,5196,4261,3364,2693,1685,4262, 961, // 1744\n1673,2632, 190,2006,2203,3841,4585,4586,5197, 570,2504,3711,1490,5198,4587,2633, // 1760\n3293,1957,4588, 584,1514, 396,1045,1945,5199,4589,1968,2449,5200,5201,4590,4013, // 1776\n 619,5202,3154,3294, 215,2007,2796,2561,3220,4591,3221,4592, 763,4263,3842,4593, // 1792\n5203,5204,1958,1767,2956,3365,3712,1174, 452,1477,4594,3366,3155,5205,2838,1253, // 1808\n2387,2189,1091,2290,4264, 492,5206, 638,1169,1825,2136,1752,4014, 648, 926,1021, // 1824\n1324,4595, 520,4596, 997, 847,1007, 892,4597,3843,2267,1872,3713,2405,1785,4598, // 1840\n1953,2957,3103,3222,1728,4265,2044,3714,4599,2008,1701,3156,1551,  30,2268,4266, // 1856\n5207,2027,4600,3589,5208, 501,5209,4267, 594,3478,2166,1822,3590,3479,3591,3223, // 1872\n 829,2839,4268,5210,1680,3157,1225,4269,5211,3295,4601,4270,3158,2341,5212,4602, // 1888\n4271,5213,4015,4016,5214,1848,2388,2606,3367,5215,4603, 374,4017, 652,4272,4273, // 1904\n 375,1140, 798,5216,5217,5218,2366,4604,2269, 546,1659, 138,3051,2450,4605,5219, // 1920\n2254, 612,1849, 910, 796,3844,1740,1371, 825,3845,3846,5220,2920,2562,5221, 692, // 1936\n 444,3052,2634, 801,4606,4274,5222,1491, 244,1053,3053,4275,4276, 340,5223,4018, // 1952\n1041,3005, 293,1168,  87,1357,5224,1539, 959,5225,2240, 721, 694,4277,3847, 219, // 1968\n1478, 644,1417,3368,2666,1413,1401,1335,1389,4019,5226,5227,3006,2367,3159,1826, // 1984\n 730,1515, 184,2840,  66,4607,5228,1660,2958, 246,3369, 378,1457, 226,3480, 975, // 2000\n4020,2959,1264,3592, 674, 696,5229, 163,5230,1141,2422,2167, 713,3593,3370,4608, // 2016\n4021,5231,5232,1186,  15,5233,1079,1070,5234,1522,3224,3594, 276,1050,2725, 758, // 2032\n1126, 653,2960,3296,5235,2342, 889,3595,4022,3104,3007, 903,1250,4609,4023,3481, // 2048\n3596,1342,1681,1718, 766,3297, 286,  89,2961,3715,5236,1713,5237,2607,3371,3008, // 2064\n5238,2962,2219,3225,2880,5239,4610,2505,2533, 181, 387,1075,4024, 731,2190,3372, // 2080\n5240,3298, 310, 313,3482,2304, 770,4278,  54,3054, 189,4611,3105,3848,4025,5241, // 2096\n1230,1617,1850, 355,3597,4279,4612,3373, 111,4280,3716,1350,3160,3483,3055,4281, // 2112\n2150,3299,3598,5242,2797,4026,4027,3009, 722,2009,5243,1071, 247,1207,2343,2478, // 2128\n1378,4613,2010, 864,1437,1214,4614, 373,3849,1142,2220, 667,4615, 442,2763,2563, // 2144\n3850,4028,1969,4282,3300,1840, 837, 170,1107, 934,1336,1883,5244,5245,2119,4283, // 2160\n2841, 743,1569,5246,4616,4284, 582,2389,1418,3484,5247,1803,5248, 357,1395,1729, // 2176\n3717,3301,2423,1564,2241,5249,3106,3851,1633,4617,1114,2086,4285,1532,5250, 482, // 2192\n2451,4618,5251,5252,1492, 833,1466,5253,2726,3599,1641,2842,5254,1526,1272,3718, // 2208\n4286,1686,1795, 416,2564,1903,1954,1804,5255,3852,2798,3853,1159,2321,5256,2881, // 2224\n4619,1610,1584,3056,2424,2764, 443,3302,1163,3161,5257,5258,4029,5259,4287,2506, // 2240\n3057,4620,4030,3162,2104,1647,3600,2011,1873,4288,5260,4289, 431,3485,5261, 250, // 2256\n  97,  81,4290,5262,1648,1851,1558, 160, 848,5263, 866, 740,1694,5264,2204,2843, // 2272\n3226,4291,4621,3719,1687, 950,2479, 426, 469,3227,3720,3721,4031,5265,5266,1188, // 2288\n 424,1996, 861,3601,4292,3854,2205,2694, 168,1235,3602,4293,5267,2087,1674,4622, // 2304\n3374,3303, 220,2565,1009,5268,3855, 670,3010, 332,1208, 717,5269,5270,3603,2452, // 2320\n4032,3375,5271, 513,5272,1209,2882,3376,3163,4623,1080,5273,5274,5275,5276,2534, // 2336\n3722,3604, 815,1587,4033,4034,5277,3605,3486,3856,1254,4624,1328,3058,1390,4035, // 2352\n1741,4036,3857,4037,5278, 236,3858,2453,3304,5279,5280,3723,3859,1273,3860,4625, // 2368\n5281, 308,5282,4626, 245,4627,1852,2480,1307,2583, 430, 715,2137,2454,5283, 270, // 2384\n 199,2883,4038,5284,3606,2727,1753, 761,1754, 725,1661,1841,4628,3487,3724,5285, // 2400\n5286, 587,  14,3305, 227,2608, 326, 480,2270, 943,2765,3607, 291, 650,1884,5287, // 2416\n1702,1226, 102,1547,  62,3488, 904,4629,3489,1164,4294,5288,5289,1224,1548,2766, // 2432\n 391, 498,1493,5290,1386,1419,5291,2056,1177,4630, 813, 880,1081,2368, 566,1145, // 2448\n4631,2291,1001,1035,2566,2609,2242, 394,1286,5292,5293,2069,5294,  86,1494,1730, // 2464\n4039, 491,1588, 745, 897,2963, 843,3377,4040,2767,2884,3306,1768, 998,2221,2070, // 2480\n 397,1827,1195,1970,3725,3011,3378, 284,5295,3861,2507,2138,2120,1904,5296,4041, // 2496\n2151,4042,4295,1036,3490,1905, 114,2567,4296, 209,1527,5297,5298,2964,2844,2635, // 2512\n2390,2728,3164, 812,2568,5299,3307,5300,1559, 737,1885,3726,1210, 885,  28,2695, // 2528\n3608,3862,5301,4297,1004,1780,4632,5302, 346,1982,2222,2696,4633,3863,1742, 797, // 2544\n1642,4043,1934,1072,1384,2152, 896,4044,3308,3727,3228,2885,3609,5303,2569,1959, // 2560\n4634,2455,1786,5304,5305,5306,4045,4298,1005,1308,3728,4299,2729,4635,4636,1528, // 2576\n2610, 161,1178,4300,1983, 987,4637,1101,4301, 631,4046,1157,3229,2425,1343,1241, // 2592\n1016,2243,2570, 372, 877,2344,2508,1160, 555,1935, 911,4047,5307, 466,1170, 169, // 2608\n1051,2921,2697,3729,2481,3012,1182,2012,2571,1251,2636,5308, 992,2345,3491,1540, // 2624\n2730,1201,2071,2406,1997,2482,5309,4638, 528,1923,2191,1503,1874,1570,2369,3379, // 2640\n3309,5310, 557,1073,5311,1828,3492,2088,2271,3165,3059,3107, 767,3108,2799,4639, // 2656\n1006,4302,4640,2346,1267,2179,3730,3230, 778,4048,3231,2731,1597,2667,5312,4641, // 2672\n5313,3493,5314,5315,5316,3310,2698,1433,3311, 131,  95,1504,4049, 723,4303,3166, // 2688\n1842,3610,2768,2192,4050,2028,2105,3731,5317,3013,4051,1218,5318,3380,3232,4052, // 2704\n4304,2584, 248,1634,3864, 912,5319,2845,3732,3060,3865, 654,  53,5320,3014,5321, // 2720\n1688,4642, 777,3494,1032,4053,1425,5322, 191, 820,2121,2846, 971,4643, 931,3233, // 2736\n 135, 664, 783,3866,1998, 772,2922,1936,4054,3867,4644,2923,3234, 282,2732, 640, // 2752\n1372,3495,1127, 922, 325,3381,5323,5324, 711,2045,5325,5326,4055,2223,2800,1937, // 2768\n4056,3382,2224,2255,3868,2305,5327,4645,3869,1258,3312,4057,3235,2139,2965,4058, // 2784\n4059,5328,2225, 258,3236,4646, 101,1227,5329,3313,1755,5330,1391,3314,5331,2924, // 2800\n2057, 893,5332,5333,5334,1402,4305,2347,5335,5336,3237,3611,5337,5338, 878,1325, // 2816\n1781,2801,4647, 259,1385,2585, 744,1183,2272,4648,5339,4060,2509,5340, 684,1024, // 2832\n4306,5341, 472,3612,3496,1165,3315,4061,4062, 322,2153, 881, 455,1695,1152,1340, // 2848\n 660, 554,2154,4649,1058,4650,4307, 830,1065,3383,4063,4651,1924,5342,1703,1919, // 2864\n5343, 932,2273, 122,5344,4652, 947, 677,5345,3870,2637, 297,1906,1925,2274,4653, // 2880\n2322,3316,5346,5347,4308,5348,4309,  84,4310, 112, 989,5349, 547,1059,4064, 701, // 2896\n3613,1019,5350,4311,5351,3497, 942, 639, 457,2306,2456, 993,2966, 407, 851, 494, // 2912\n4654,3384, 927,5352,1237,5353,2426,3385, 573,4312, 680, 921,2925,1279,1875, 285, // 2928\n 790,1448,1984, 719,2168,5354,5355,4655,4065,4066,1649,5356,1541, 563,5357,1077, // 2944\n5358,3386,3061,3498, 511,3015,4067,4068,3733,4069,1268,2572,3387,3238,4656,4657, // 2960\n5359, 535,1048,1276,1189,2926,2029,3167,1438,1373,2847,2967,1134,2013,5360,4313, // 2976\n1238,2586,3109,1259,5361, 700,5362,2968,3168,3734,4314,5363,4315,1146,1876,1907, // 2992\n4658,2611,4070, 781,2427, 132,1589, 203, 147, 273,2802,2407, 898,1787,2155,4071, // 3008\n4072,5364,3871,2803,5365,5366,4659,4660,5367,3239,5368,1635,3872, 965,5369,1805, // 3024\n2699,1516,3614,1121,1082,1329,3317,4073,1449,3873,  65,1128,2848,2927,2769,1590, // 3040\n3874,5370,5371,  12,2668,  45, 976,2587,3169,4661, 517,2535,1013,1037,3240,5372, // 3056\n3875,2849,5373,3876,5374,3499,5375,2612, 614,1999,2323,3877,3110,2733,2638,5376, // 3072\n2588,4316, 599,1269,5377,1811,3735,5378,2700,3111, 759,1060, 489,1806,3388,3318, // 3088\n1358,5379,5380,2391,1387,1215,2639,2256, 490,5381,5382,4317,1759,2392,2348,5383, // 3104\n4662,3878,1908,4074,2640,1807,3241,4663,3500,3319,2770,2349, 874,5384,5385,3501, // 3120\n3736,1859,  91,2928,3737,3062,3879,4664,5386,3170,4075,2669,5387,3502,1202,1403, // 3136\n3880,2969,2536,1517,2510,4665,3503,2511,5388,4666,5389,2701,1886,1495,1731,4076, // 3152\n2370,4667,5390,2030,5391,5392,4077,2702,1216, 237,2589,4318,2324,4078,3881,4668, // 3168\n4669,2703,3615,3504, 445,4670,5393,5394,5395,5396,2771,  61,4079,3738,1823,4080, // 3184\n5397, 687,2046, 935, 925, 405,2670, 703,1096,1860,2734,4671,4081,1877,1367,2704, // 3200\n3389, 918,2106,1782,2483, 334,3320,1611,1093,4672, 564,3171,3505,3739,3390, 945, // 3216\n2641,2058,4673,5398,1926, 872,4319,5399,3506,2705,3112, 349,4320,3740,4082,4674, // 3232\n3882,4321,3741,2156,4083,4675,4676,4322,4677,2408,2047, 782,4084, 400, 251,4323, // 3248\n1624,5400,5401, 277,3742, 299,1265, 476,1191,3883,2122,4324,4325,1109, 205,5402, // 3264\n2590,1000,2157,3616,1861,5403,5404,5405,4678,5406,4679,2573, 107,2484,2158,4085, // 3280\n3507,3172,5407,1533, 541,1301, 158, 753,4326,2886,3617,5408,1696, 370,1088,4327, // 3296\n4680,3618, 579, 327, 440, 162,2244, 269,1938,1374,3508, 968,3063,  56,1396,3113, // 3312\n2107,3321,3391,5409,1927,2159,4681,3016,5410,3619,5411,5412,3743,4682,2485,5413, // 3328\n2804,5414,1650,4683,5415,2613,5416,5417,4086,2671,3392,1149,3393,4087,3884,4088, // 3344\n5418,1076,  49,5419, 951,3242,3322,3323, 450,2850, 920,5420,1812,2805,2371,4328, // 3360\n1909,1138,2372,3885,3509,5421,3243,4684,1910,1147,1518,2428,4685,3886,5422,4686, // 3376\n2393,2614, 260,1796,3244,5423,5424,3887,3324, 708,5425,3620,1704,5426,3621,1351, // 3392\n1618,3394,3017,1887, 944,4329,3395,4330,3064,3396,4331,5427,3744, 422, 413,1714, // 3408\n3325, 500,2059,2350,4332,2486,5428,1344,1911, 954,5429,1668,5430,5431,4089,2409, // 3424\n4333,3622,3888,4334,5432,2307,1318,2512,3114, 133,3115,2887,4687, 629,  31,2851, // 3440\n2706,3889,4688, 850, 949,4689,4090,2970,1732,2089,4335,1496,1853,5433,4091, 620, // 3456\n3245, 981,1242,3745,3397,1619,3746,1643,3326,2140,2457,1971,1719,3510,2169,5434, // 3472\n3246,5435,5436,3398,1829,5437,1277,4690,1565,2048,5438,1636,3623,3116,5439, 869, // 3488\n2852, 655,3890,3891,3117,4092,3018,3892,1310,3624,4691,5440,5441,5442,1733, 558, // 3504\n4692,3747, 335,1549,3065,1756,4336,3748,1946,3511,1830,1291,1192, 470,2735,2108, // 3520\n2806, 913,1054,4093,5443,1027,5444,3066,4094,4693, 982,2672,3399,3173,3512,3247, // 3536\n3248,1947,2807,5445, 571,4694,5446,1831,5447,3625,2591,1523,2429,5448,2090, 984, // 3552\n4695,3749,1960,5449,3750, 852, 923,2808,3513,3751, 969,1519, 999,2049,2325,1705, // 3568\n5450,3118, 615,1662, 151, 597,4095,2410,2326,1049, 275,4696,3752,4337, 568,3753, // 3584\n3626,2487,4338,3754,5451,2430,2275, 409,3249,5452,1566,2888,3514,1002, 769,2853, // 3600\n 194,2091,3174,3755,2226,3327,4339, 628,1505,5453,5454,1763,2180,3019,4096, 521, // 3616\n1161,2592,1788,2206,2411,4697,4097,1625,4340,4341, 412,  42,3119, 464,5455,2642, // 3632\n4698,3400,1760,1571,2889,3515,2537,1219,2207,3893,2643,2141,2373,4699,4700,3328, // 3648\n1651,3401,3627,5456,5457,3628,2488,3516,5458,3756,5459,5460,2276,2092, 460,5461, // 3664\n4701,5462,3020, 962, 588,3629, 289,3250,2644,1116,  52,5463,3067,1797,5464,5465, // 3680\n5466,1467,5467,1598,1143,3757,4342,1985,1734,1067,4702,1280,3402, 465,4703,1572, // 3696\n 510,5468,1928,2245,1813,1644,3630,5469,4704,3758,5470,5471,2673,1573,1534,5472, // 3712\n5473, 536,1808,1761,3517,3894,3175,2645,5474,5475,5476,4705,3518,2929,1912,2809, // 3728\n5477,3329,1122, 377,3251,5478, 360,5479,5480,4343,1529, 551,5481,2060,3759,1769, // 3744\n2431,5482,2930,4344,3330,3120,2327,2109,2031,4706,1404, 136,1468,1479, 672,1171, // 3760\n3252,2308, 271,3176,5483,2772,5484,2050, 678,2736, 865,1948,4707,5485,2014,4098, // 3776\n2971,5486,2737,2227,1397,3068,3760,4708,4709,1735,2931,3403,3631,5487,3895, 509, // 3792\n2854,2458,2890,3896,5488,5489,3177,3178,4710,4345,2538,4711,2309,1166,1010, 552, // 3808\n 681,1888,5490,5491,2972,2973,4099,1287,1596,1862,3179, 358, 453, 736, 175, 478, // 3824\n1117, 905,1167,1097,5492,1854,1530,5493,1706,5494,2181,3519,2292,3761,3520,3632, // 3840\n4346,2093,4347,5495,3404,1193,2489,4348,1458,2193,2208,1863,1889,1421,3331,2932, // 3856\n3069,2182,3521, 595,2123,5496,4100,5497,5498,4349,1707,2646, 223,3762,1359, 751, // 3872\n3121, 183,3522,5499,2810,3021, 419,2374, 633, 704,3897,2394, 241,5500,5501,5502, // 3888\n 838,3022,3763,2277,2773,2459,3898,1939,2051,4101,1309,3122,2246,1181,5503,1136, // 3904\n2209,3899,2375,1446,4350,2310,4712,5504,5505,4351,1055,2615, 484,3764,5506,4102, // 3920\n 625,4352,2278,3405,1499,4353,4103,5507,4104,4354,3253,2279,2280,3523,5508,5509, // 3936\n2774, 808,2616,3765,3406,4105,4355,3123,2539, 526,3407,3900,4356, 955,5510,1620, // 3952\n4357,2647,2432,5511,1429,3766,1669,1832, 994, 928,5512,3633,1260,5513,5514,5515, // 3968\n1949,2293, 741,2933,1626,4358,2738,2460, 867,1184, 362,3408,1392,5516,5517,4106, // 3984\n4359,1770,1736,3254,2934,4713,4714,1929,2707,1459,1158,5518,3070,3409,2891,1292, // 4000\n1930,2513,2855,3767,1986,1187,2072,2015,2617,4360,5519,2574,2514,2170,3768,2490, // 4016\n3332,5520,3769,4715,5521,5522, 666,1003,3023,1022,3634,4361,5523,4716,1814,2257, // 4032\n 574,3901,1603, 295,1535, 705,3902,4362, 283, 858, 417,5524,5525,3255,4717,4718, // 4048\n3071,1220,1890,1046,2281,2461,4107,1393,1599, 689,2575, 388,4363,5526,2491, 802, // 4064\n5527,2811,3903,2061,1405,2258,5528,4719,3904,2110,1052,1345,3256,1585,5529, 809, // 4080\n5530,5531,5532, 575,2739,3524, 956,1552,1469,1144,2328,5533,2329,1560,2462,3635, // 4096\n3257,4108, 616,2210,4364,3180,2183,2294,5534,1833,5535,3525,4720,5536,1319,3770, // 4112\n3771,1211,3636,1023,3258,1293,2812,5537,5538,5539,3905, 607,2311,3906, 762,2892, // 4128\n1439,4365,1360,4721,1485,3072,5540,4722,1038,4366,1450,2062,2648,4367,1379,4723, // 4144\n2593,5541,5542,4368,1352,1414,2330,2935,1172,5543,5544,3907,3908,4724,1798,1451, // 4160\n5545,5546,5547,5548,2936,4109,4110,2492,2351, 411,4111,4112,3637,3333,3124,4725, // 4176\n1561,2674,1452,4113,1375,5549,5550,  47,2974, 316,5551,1406,1591,2937,3181,5552, // 4192\n1025,2142,3125,3182, 354,2740, 884,2228,4369,2412, 508,3772, 726,3638, 996,2433, // 4208\n3639, 729,5553, 392,2194,1453,4114,4726,3773,5554,5555,2463,3640,2618,1675,2813, // 4224\n 919,2352,2975,2353,1270,4727,4115,  73,5556,5557, 647,5558,3259,2856,2259,1550, // 4240\n1346,3024,5559,1332, 883,3526,5560,5561,5562,5563,3334,2775,5564,1212, 831,1347, // 4256\n4370,4728,2331,3909,1864,3073, 720,3910,4729,4730,3911,5565,4371,5566,5567,4731, // 4272\n5568,5569,1799,4732,3774,2619,4733,3641,1645,2376,4734,5570,2938, 669,2211,2675, // 4288\n2434,5571,2893,5572,5573,1028,3260,5574,4372,2413,5575,2260,1353,5576,5577,4735, // 4304\n3183, 518,5578,4116,5579,4373,1961,5580,2143,4374,5581,5582,3025,2354,2355,3912, // 4320\n 516,1834,1454,4117,2708,4375,4736,2229,2620,1972,1129,3642,5583,2776,5584,2976, // 4336\n1422, 577,1470,3026,1524,3410,5585,5586, 432,4376,3074,3527,5587,2594,1455,2515, // 4352\n2230,1973,1175,5588,1020,2741,4118,3528,4737,5589,2742,5590,1743,1361,3075,3529, // 4368\n2649,4119,4377,4738,2295, 895, 924,4378,2171, 331,2247,3076, 166,1627,3077,1098, // 4384\n5591,1232,2894,2231,3411,4739, 657, 403,1196,2377, 542,3775,3412,1600,4379,3530, // 4400\n5592,4740,2777,3261, 576, 530,1362,4741,4742,2540,2676,3776,4120,5593, 842,3913, // 4416\n5594,2814,2032,1014,4121, 213,2709,3413, 665, 621,4380,5595,3777,2939,2435,5596, // 4432\n2436,3335,3643,3414,4743,4381,2541,4382,4744,3644,1682,4383,3531,1380,5597, 724, // 4448\n2282, 600,1670,5598,1337,1233,4745,3126,2248,5599,1621,4746,5600, 651,4384,5601, // 4464\n1612,4385,2621,5602,2857,5603,2743,2312,3078,5604, 716,2464,3079, 174,1255,2710, // 4480\n4122,3645, 548,1320,1398, 728,4123,1574,5605,1891,1197,3080,4124,5606,3081,3082, // 4496\n3778,3646,3779, 747,5607, 635,4386,4747,5608,5609,5610,4387,5611,5612,4748,5613, // 4512\n3415,4749,2437, 451,5614,3780,2542,2073,4388,2744,4389,4125,5615,1764,4750,5616, // 4528\n4390, 350,4751,2283,2395,2493,5617,4391,4126,2249,1434,4127, 488,4752, 458,4392, // 4544\n4128,3781, 771,1330,2396,3914,2576,3184,2160,2414,1553,2677,3185,4393,5618,2494, // 4560\n2895,2622,1720,2711,4394,3416,4753,5619,2543,4395,5620,3262,4396,2778,5621,2016, // 4576\n2745,5622,1155,1017,3782,3915,5623,3336,2313, 201,1865,4397,1430,5624,4129,5625, // 4592\n5626,5627,5628,5629,4398,1604,5630, 414,1866, 371,2595,4754,4755,3532,2017,3127, // 4608\n4756,1708, 960,4399, 887, 389,2172,1536,1663,1721,5631,2232,4130,2356,2940,1580, // 4624\n5632,5633,1744,4757,2544,4758,4759,5634,4760,5635,2074,5636,4761,3647,3417,2896, // 4640\n4400,5637,4401,2650,3418,2815, 673,2712,2465, 709,3533,4131,3648,4402,5638,1148, // 4656\n 502, 634,5639,5640,1204,4762,3649,1575,4763,2623,3783,5641,3784,3128, 948,3263, // 4672\n 121,1745,3916,1110,5642,4403,3083,2516,3027,4132,3785,1151,1771,3917,1488,4133, // 4688\n1987,5643,2438,3534,5644,5645,2094,5646,4404,3918,1213,1407,2816, 531,2746,2545, // 4704\n3264,1011,1537,4764,2779,4405,3129,1061,5647,3786,3787,1867,2897,5648,2018, 120, // 4720\n4406,4407,2063,3650,3265,2314,3919,2678,3419,1955,4765,4134,5649,3535,1047,2713, // 4736\n1266,5650,1368,4766,2858, 649,3420,3920,2546,2747,1102,2859,2679,5651,5652,2000, // 4752\n5653,1111,3651,2977,5654,2495,3921,3652,2817,1855,3421,3788,5655,5656,3422,2415, // 4768\n2898,3337,3266,3653,5657,2577,5658,3654,2818,4135,1460, 856,5659,3655,5660,2899, // 4784\n2978,5661,2900,3922,5662,4408, 632,2517, 875,3923,1697,3924,2296,5663,5664,4767, // 4800\n3028,1239, 580,4768,4409,5665, 914, 936,2075,1190,4136,1039,2124,5666,5667,5668, // 4816\n5669,3423,1473,5670,1354,4410,3925,4769,2173,3084,4137, 915,3338,4411,4412,3339, // 4832\n1605,1835,5671,2748, 398,3656,4413,3926,4138, 328,1913,2860,4139,3927,1331,4414, // 4848\n3029, 937,4415,5672,3657,4140,4141,3424,2161,4770,3425, 524, 742, 538,3085,1012, // 4864\n5673,5674,3928,2466,5675, 658,1103, 225,3929,5676,5677,4771,5678,4772,5679,3267, // 4880\n1243,5680,4142, 963,2250,4773,5681,2714,3658,3186,5682,5683,2596,2332,5684,4774, // 4896\n5685,5686,5687,3536, 957,3426,2547,2033,1931,2941,2467, 870,2019,3659,1746,2780, // 4912\n2781,2439,2468,5688,3930,5689,3789,3130,3790,3537,3427,3791,5690,1179,3086,5691, // 4928\n3187,2378,4416,3792,2548,3188,3131,2749,4143,5692,3428,1556,2549,2297, 977,2901, // 4944\n2034,4144,1205,3429,5693,1765,3430,3189,2125,1271, 714,1689,4775,3538,5694,2333, // 4960\n3931, 533,4417,3660,2184, 617,5695,2469,3340,3539,2315,5696,5697,3190,5698,5699, // 4976\n3932,1988, 618, 427,2651,3540,3431,5700,5701,1244,1690,5702,2819,4418,4776,5703, // 4992\n3541,4777,5704,2284,1576, 473,3661,4419,3432, 972,5705,3662,5706,3087,5707,5708, // 5008\n4778,4779,5709,3793,4145,4146,5710, 153,4780, 356,5711,1892,2902,4420,2144, 408, // 5024\n 803,2357,5712,3933,5713,4421,1646,2578,2518,4781,4782,3934,5714,3935,4422,5715, // 5040\n2416,3433, 752,5716,5717,1962,3341,2979,5718, 746,3030,2470,4783,4423,3794, 698, // 5056\n4784,1893,4424,3663,2550,4785,3664,3936,5719,3191,3434,5720,1824,1302,4147,2715, // 5072\n3937,1974,4425,5721,4426,3192, 823,1303,1288,1236,2861,3542,4148,3435, 774,3938, // 5088\n5722,1581,4786,1304,2862,3939,4787,5723,2440,2162,1083,3268,4427,4149,4428, 344, // 5104\n1173, 288,2316, 454,1683,5724,5725,1461,4788,4150,2597,5726,5727,4789, 985, 894, // 5120\n5728,3436,3193,5729,1914,2942,3795,1989,5730,2111,1975,5731,4151,5732,2579,1194, // 5136\n 425,5733,4790,3194,1245,3796,4429,5734,5735,2863,5736, 636,4791,1856,3940, 760, // 5152\n1800,5737,4430,2212,1508,4792,4152,1894,1684,2298,5738,5739,4793,4431,4432,2213, // 5168\n 479,5740,5741, 832,5742,4153,2496,5743,2980,2497,3797, 990,3132, 627,1815,2652, // 5184\n4433,1582,4434,2126,2112,3543,4794,5744, 799,4435,3195,5745,4795,2113,1737,3031, // 5200\n1018, 543, 754,4436,3342,1676,4796,4797,4154,4798,1489,5746,3544,5747,2624,2903, // 5216\n4155,5748,5749,2981,5750,5751,5752,5753,3196,4799,4800,2185,1722,5754,3269,3270, // 5232\n1843,3665,1715, 481, 365,1976,1857,5755,5756,1963,2498,4801,5757,2127,3666,3271, // 5248\n 433,1895,2064,2076,5758, 602,2750,5759,5760,5761,5762,5763,3032,1628,3437,5764, // 5264\n3197,4802,4156,2904,4803,2519,5765,2551,2782,5766,5767,5768,3343,4804,2905,5769, // 5280\n4805,5770,2864,4806,4807,1221,2982,4157,2520,5771,5772,5773,1868,1990,5774,5775, // 5296\n5776,1896,5777,5778,4808,1897,4158, 318,5779,2095,4159,4437,5780,5781, 485,5782, // 5312\n 938,3941, 553,2680, 116,5783,3942,3667,5784,3545,2681,2783,3438,3344,2820,5785, // 5328\n3668,2943,4160,1747,2944,2983,5786,5787, 207,5788,4809,5789,4810,2521,5790,3033, // 5344\n 890,3669,3943,5791,1878,3798,3439,5792,2186,2358,3440,1652,5793,5794,5795, 941, // 5360\n2299, 208,3546,4161,2020, 330,4438,3944,2906,2499,3799,4439,4811,5796,5797,5798, // 5376  //last 512\n//Everything below is of no interest for detection purpose\n2522,1613,4812,5799,3345,3945,2523,5800,4162,5801,1637,4163,2471,4813,3946,5802, // 5392\n2500,3034,3800,5803,5804,2195,4814,5805,2163,5806,5807,5808,5809,5810,5811,5812, // 5408\n5813,5814,5815,5816,5817,5818,5819,5820,5821,5822,5823,5824,5825,5826,5827,5828, // 5424\n5829,5830,5831,5832,5833,5834,5835,5836,5837,5838,5839,5840,5841,5842,5843,5844, // 5440\n5845,5846,5847,5848,5849,5850,5851,5852,5853,5854,5855,5856,5857,5858,5859,5860, // 5456\n5861,5862,5863,5864,5865,5866,5867,5868,5869,5870,5871,5872,5873,5874,5875,5876, // 5472\n5877,5878,5879,5880,5881,5882,5883,5884,5885,5886,5887,5888,5889,5890,5891,5892, // 5488\n5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904,5905,5906,5907,5908, // 5504\n5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920,5921,5922,5923,5924, // 5520\n5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,5936,5937,5938,5939,5940, // 5536\n5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,5952,5953,5954,5955,5956, // 5552\n5957,5958,5959,5960,5961,5962,5963,5964,5965,5966,5967,5968,5969,5970,5971,5972, // 5568\n5973,5974,5975,5976,5977,5978,5979,5980,5981,5982,5983,5984,5985,5986,5987,5988, // 5584\n5989,5990,5991,5992,5993,5994,5995,5996,5997,5998,5999,6000,6001,6002,6003,6004, // 5600\n6005,6006,6007,6008,6009,6010,6011,6012,6013,6014,6015,6016,6017,6018,6019,6020, // 5616\n6021,6022,6023,6024,6025,6026,6027,6028,6029,6030,6031,6032,6033,6034,6035,6036, // 5632\n6037,6038,6039,6040,6041,6042,6043,6044,6045,6046,6047,6048,6049,6050,6051,6052, // 5648\n6053,6054,6055,6056,6057,6058,6059,6060,6061,6062,6063,6064,6065,6066,6067,6068, // 5664\n6069,6070,6071,6072,6073,6074,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084, // 5680\n6085,6086,6087,6088,6089,6090,6091,6092,6093,6094,6095,6096,6097,6098,6099,6100, // 5696\n6101,6102,6103,6104,6105,6106,6107,6108,6109,6110,6111,6112,6113,6114,6115,6116, // 5712\n6117,6118,6119,6120,6121,6122,6123,6124,6125,6126,6127,6128,6129,6130,6131,6132, // 5728\n6133,6134,6135,6136,6137,6138,6139,6140,6141,6142,6143,6144,6145,6146,6147,6148, // 5744\n6149,6150,6151,6152,6153,6154,6155,6156,6157,6158,6159,6160,6161,6162,6163,6164, // 5760\n6165,6166,6167,6168,6169,6170,6171,6172,6173,6174,6175,6176,6177,6178,6179,6180, // 5776\n6181,6182,6183,6184,6185,6186,6187,6188,6189,6190,6191,6192,6193,6194,6195,6196, // 5792\n6197,6198,6199,6200,6201,6202,6203,6204,6205,6206,6207,6208,6209,6210,6211,6212, // 5808\n6213,6214,6215,6216,6217,6218,6219,6220,6221,6222,6223,3670,6224,6225,6226,6227, // 5824\n6228,6229,6230,6231,6232,6233,6234,6235,6236,6237,6238,6239,6240,6241,6242,6243, // 5840\n6244,6245,6246,6247,6248,6249,6250,6251,6252,6253,6254,6255,6256,6257,6258,6259, // 5856\n6260,6261,6262,6263,6264,6265,6266,6267,6268,6269,6270,6271,6272,6273,6274,6275, // 5872\n6276,6277,6278,6279,6280,6281,6282,6283,6284,6285,4815,6286,6287,6288,6289,6290, // 5888\n6291,6292,4816,6293,6294,6295,6296,6297,6298,6299,6300,6301,6302,6303,6304,6305, // 5904\n6306,6307,6308,6309,6310,6311,4817,4818,6312,6313,6314,6315,6316,6317,6318,4819, // 5920\n6319,6320,6321,6322,6323,6324,6325,6326,6327,6328,6329,6330,6331,6332,6333,6334, // 5936\n6335,6336,6337,4820,6338,6339,6340,6341,6342,6343,6344,6345,6346,6347,6348,6349, // 5952\n6350,6351,6352,6353,6354,6355,6356,6357,6358,6359,6360,6361,6362,6363,6364,6365, // 5968\n6366,6367,6368,6369,6370,6371,6372,6373,6374,6375,6376,6377,6378,6379,6380,6381, // 5984\n6382,6383,6384,6385,6386,6387,6388,6389,6390,6391,6392,6393,6394,6395,6396,6397, // 6000\n6398,6399,6400,6401,6402,6403,6404,6405,6406,6407,6408,6409,6410,3441,6411,6412, // 6016\n6413,6414,6415,6416,6417,6418,6419,6420,6421,6422,6423,6424,6425,4440,6426,6427, // 6032\n6428,6429,6430,6431,6432,6433,6434,6435,6436,6437,6438,6439,6440,6441,6442,6443, // 6048\n6444,6445,6446,6447,6448,6449,6450,6451,6452,6453,6454,4821,6455,6456,6457,6458, // 6064\n6459,6460,6461,6462,6463,6464,6465,6466,6467,6468,6469,6470,6471,6472,6473,6474, // 6080\n6475,6476,6477,3947,3948,6478,6479,6480,6481,3272,4441,6482,6483,6484,6485,4442, // 6096\n6486,6487,6488,6489,6490,6491,6492,6493,6494,6495,6496,4822,6497,6498,6499,6500, // 6112\n6501,6502,6503,6504,6505,6506,6507,6508,6509,6510,6511,6512,6513,6514,6515,6516, // 6128\n6517,6518,6519,6520,6521,6522,6523,6524,6525,6526,6527,6528,6529,6530,6531,6532, // 6144\n6533,6534,6535,6536,6537,6538,6539,6540,6541,6542,6543,6544,6545,6546,6547,6548, // 6160\n6549,6550,6551,6552,6553,6554,6555,6556,2784,6557,4823,6558,6559,6560,6561,6562, // 6176\n6563,6564,6565,6566,6567,6568,6569,3949,6570,6571,6572,4824,6573,6574,6575,6576, // 6192\n6577,6578,6579,6580,6581,6582,6583,4825,6584,6585,6586,3950,2785,6587,6588,6589, // 6208\n6590,6591,6592,6593,6594,6595,6596,6597,6598,6599,6600,6601,6602,6603,6604,6605, // 6224\n6606,6607,6608,6609,6610,6611,6612,4826,6613,6614,6615,4827,6616,6617,6618,6619, // 6240\n6620,6621,6622,6623,6624,6625,4164,6626,6627,6628,6629,6630,6631,6632,6633,6634, // 6256\n3547,6635,4828,6636,6637,6638,6639,6640,6641,6642,3951,2984,6643,6644,6645,6646, // 6272\n6647,6648,6649,4165,6650,4829,6651,6652,4830,6653,6654,6655,6656,6657,6658,6659, // 6288\n6660,6661,6662,4831,6663,6664,6665,6666,6667,6668,6669,6670,6671,4166,6672,4832, // 6304\n3952,6673,6674,6675,6676,4833,6677,6678,6679,4167,6680,6681,6682,3198,6683,6684, // 6320\n6685,6686,6687,6688,6689,6690,6691,6692,6693,6694,6695,6696,6697,4834,6698,6699, // 6336\n6700,6701,6702,6703,6704,6705,6706,6707,6708,6709,6710,6711,6712,6713,6714,6715, // 6352\n6716,6717,6718,6719,6720,6721,6722,6723,6724,6725,6726,6727,6728,6729,6730,6731, // 6368\n6732,6733,6734,4443,6735,6736,6737,6738,6739,6740,6741,6742,6743,6744,6745,4444, // 6384\n6746,6747,6748,6749,6750,6751,6752,6753,6754,6755,6756,6757,6758,6759,6760,6761, // 6400\n6762,6763,6764,6765,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777, // 6416\n6778,6779,6780,6781,4168,6782,6783,3442,6784,6785,6786,6787,6788,6789,6790,6791, // 6432\n4169,6792,6793,6794,6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806, // 6448\n6807,6808,6809,6810,6811,4835,6812,6813,6814,4445,6815,6816,4446,6817,6818,6819, // 6464\n6820,6821,6822,6823,6824,6825,6826,6827,6828,6829,6830,6831,6832,6833,6834,6835, // 6480\n3548,6836,6837,6838,6839,6840,6841,6842,6843,6844,6845,6846,4836,6847,6848,6849, // 6496\n6850,6851,6852,6853,6854,3953,6855,6856,6857,6858,6859,6860,6861,6862,6863,6864, // 6512\n6865,6866,6867,6868,6869,6870,6871,6872,6873,6874,6875,6876,6877,3199,6878,6879, // 6528\n6880,6881,6882,4447,6883,6884,6885,6886,6887,6888,6889,6890,6891,6892,6893,6894, // 6544\n6895,6896,6897,6898,6899,6900,6901,6902,6903,6904,4170,6905,6906,6907,6908,6909, // 6560\n6910,6911,6912,6913,6914,6915,6916,6917,6918,6919,6920,6921,6922,6923,6924,6925, // 6576\n6926,6927,4837,6928,6929,6930,6931,6932,6933,6934,6935,6936,3346,6937,6938,4838, // 6592\n6939,6940,6941,4448,6942,6943,6944,6945,6946,4449,6947,6948,6949,6950,6951,6952, // 6608\n6953,6954,6955,6956,6957,6958,6959,6960,6961,6962,6963,6964,6965,6966,6967,6968, // 6624\n6969,6970,6971,6972,6973,6974,6975,6976,6977,6978,6979,6980,6981,6982,6983,6984, // 6640\n6985,6986,6987,6988,6989,6990,6991,6992,6993,6994,3671,6995,6996,6997,6998,4839, // 6656\n6999,7000,7001,7002,3549,7003,7004,7005,7006,7007,7008,7009,7010,7011,7012,7013, // 6672\n7014,7015,7016,7017,7018,7019,7020,7021,7022,7023,7024,7025,7026,7027,7028,7029, // 6688\n7030,4840,7031,7032,7033,7034,7035,7036,7037,7038,4841,7039,7040,7041,7042,7043, // 6704\n7044,7045,7046,7047,7048,7049,7050,7051,7052,7053,7054,7055,7056,7057,7058,7059, // 6720\n7060,7061,7062,7063,7064,7065,7066,7067,7068,7069,7070,2985,7071,7072,7073,7074, // 6736\n7075,7076,7077,7078,7079,7080,4842,7081,7082,7083,7084,7085,7086,7087,7088,7089, // 6752\n7090,7091,7092,7093,7094,7095,7096,7097,7098,7099,7100,7101,7102,7103,7104,7105, // 6768\n7106,7107,7108,7109,7110,7111,7112,7113,7114,7115,7116,7117,7118,4450,7119,7120, // 6784\n7121,7122,7123,7124,7125,7126,7127,7128,7129,7130,7131,7132,7133,7134,7135,7136, // 6800\n7137,7138,7139,7140,7141,7142,7143,4843,7144,7145,7146,7147,7148,7149,7150,7151, // 6816\n7152,7153,7154,7155,7156,7157,7158,7159,7160,7161,7162,7163,7164,7165,7166,7167, // 6832\n7168,7169,7170,7171,7172,7173,7174,7175,7176,7177,7178,7179,7180,7181,7182,7183, // 6848\n7184,7185,7186,7187,7188,4171,4172,7189,7190,7191,7192,7193,7194,7195,7196,7197, // 6864\n7198,7199,7200,7201,7202,7203,7204,7205,7206,7207,7208,7209,7210,7211,7212,7213, // 6880\n7214,7215,7216,7217,7218,7219,7220,7221,7222,7223,7224,7225,7226,7227,7228,7229, // 6896\n7230,7231,7232,7233,7234,7235,7236,7237,7238,7239,7240,7241,7242,7243,7244,7245, // 6912\n7246,7247,7248,7249,7250,7251,7252,7253,7254,7255,7256,7257,7258,7259,7260,7261, // 6928\n7262,7263,7264,7265,7266,7267,7268,7269,7270,7271,7272,7273,7274,7275,7276,7277, // 6944\n7278,7279,7280,7281,7282,7283,7284,7285,7286,7287,7288,7289,7290,7291,7292,7293, // 6960\n7294,7295,7296,4844,7297,7298,7299,7300,7301,7302,7303,7304,7305,7306,7307,7308, // 6976\n7309,7310,7311,7312,7313,7314,7315,7316,4451,7317,7318,7319,7320,7321,7322,7323, // 6992\n7324,7325,7326,7327,7328,7329,7330,7331,7332,7333,7334,7335,7336,7337,7338,7339, // 7008\n7340,7341,7342,7343,7344,7345,7346,7347,7348,7349,7350,7351,7352,7353,4173,7354, // 7024\n7355,4845,7356,7357,7358,7359,7360,7361,7362,7363,7364,7365,7366,7367,7368,7369, // 7040\n7370,7371,7372,7373,7374,7375,7376,7377,7378,7379,7380,7381,7382,7383,7384,7385, // 7056\n7386,7387,7388,4846,7389,7390,7391,7392,7393,7394,7395,7396,7397,7398,7399,7400, // 7072\n7401,7402,7403,7404,7405,3672,7406,7407,7408,7409,7410,7411,7412,7413,7414,7415, // 7088\n7416,7417,7418,7419,7420,7421,7422,7423,7424,7425,7426,7427,7428,7429,7430,7431, // 7104\n7432,7433,7434,7435,7436,7437,7438,7439,7440,7441,7442,7443,7444,7445,7446,7447, // 7120\n7448,7449,7450,7451,7452,7453,4452,7454,3200,7455,7456,7457,7458,7459,7460,7461, // 7136\n7462,7463,7464,7465,7466,7467,7468,7469,7470,7471,7472,7473,7474,4847,7475,7476, // 7152\n7477,3133,7478,7479,7480,7481,7482,7483,7484,7485,7486,7487,7488,7489,7490,7491, // 7168\n7492,7493,7494,7495,7496,7497,7498,7499,7500,7501,7502,3347,7503,7504,7505,7506, // 7184\n7507,7508,7509,7510,7511,7512,7513,7514,7515,7516,7517,7518,7519,7520,7521,4848, // 7200\n7522,7523,7524,7525,7526,7527,7528,7529,7530,7531,7532,7533,7534,7535,7536,7537, // 7216\n7538,7539,7540,7541,7542,7543,7544,7545,7546,7547,7548,7549,3801,4849,7550,7551, // 7232\n7552,7553,7554,7555,7556,7557,7558,7559,7560,7561,7562,7563,7564,7565,7566,7567, // 7248\n7568,7569,3035,7570,7571,7572,7573,7574,7575,7576,7577,7578,7579,7580,7581,7582, // 7264\n7583,7584,7585,7586,7587,7588,7589,7590,7591,7592,7593,7594,7595,7596,7597,7598, // 7280\n7599,7600,7601,7602,7603,7604,7605,7606,7607,7608,7609,7610,7611,7612,7613,7614, // 7296\n7615,7616,4850,7617,7618,3802,7619,7620,7621,7622,7623,7624,7625,7626,7627,7628, // 7312\n7629,7630,7631,7632,4851,7633,7634,7635,7636,7637,7638,7639,7640,7641,7642,7643, // 7328\n7644,7645,7646,7647,7648,7649,7650,7651,7652,7653,7654,7655,7656,7657,7658,7659, // 7344\n7660,7661,7662,7663,7664,7665,7666,7667,7668,7669,7670,4453,7671,7672,7673,7674, // 7360\n7675,7676,7677,7678,7679,7680,7681,7682,7683,7684,7685,7686,7687,7688,7689,7690, // 7376\n7691,7692,7693,7694,7695,7696,7697,3443,7698,7699,7700,7701,7702,4454,7703,7704, // 7392\n7705,7706,7707,7708,7709,7710,7711,7712,7713,2472,7714,7715,7716,7717,7718,7719, // 7408\n7720,7721,7722,7723,7724,7725,7726,7727,7728,7729,7730,7731,3954,7732,7733,7734, // 7424\n7735,7736,7737,7738,7739,7740,7741,7742,7743,7744,7745,7746,7747,7748,7749,7750, // 7440\n3134,7751,7752,4852,7753,7754,7755,4853,7756,7757,7758,7759,7760,4174,7761,7762, // 7456\n7763,7764,7765,7766,7767,7768,7769,7770,7771,7772,7773,7774,7775,7776,7777,7778, // 7472\n7779,7780,7781,7782,7783,7784,7785,7786,7787,7788,7789,7790,7791,7792,7793,7794, // 7488\n7795,7796,7797,7798,7799,7800,7801,7802,7803,7804,7805,4854,7806,7807,7808,7809, // 7504\n7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,7824,7825, // 7520\n4855,7826,7827,7828,7829,7830,7831,7832,7833,7834,7835,7836,7837,7838,7839,7840, // 7536\n7841,7842,7843,7844,7845,7846,7847,3955,7848,7849,7850,7851,7852,7853,7854,7855, // 7552\n7856,7857,7858,7859,7860,3444,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870, // 7568\n7871,7872,7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886, // 7584\n7887,7888,7889,7890,7891,4175,7892,7893,7894,7895,7896,4856,4857,7897,7898,7899, // 7600\n7900,2598,7901,7902,7903,7904,7905,7906,7907,7908,4455,7909,7910,7911,7912,7913, // 7616\n7914,3201,7915,7916,7917,7918,7919,7920,7921,4858,7922,7923,7924,7925,7926,7927, // 7632\n7928,7929,7930,7931,7932,7933,7934,7935,7936,7937,7938,7939,7940,7941,7942,7943, // 7648\n7944,7945,7946,7947,7948,7949,7950,7951,7952,7953,7954,7955,7956,7957,7958,7959, // 7664\n7960,7961,7962,7963,7964,7965,7966,7967,7968,7969,7970,7971,7972,7973,7974,7975, // 7680\n7976,7977,7978,7979,7980,7981,4859,7982,7983,7984,7985,7986,7987,7988,7989,7990, // 7696\n7991,7992,7993,7994,7995,7996,4860,7997,7998,7999,8000,8001,8002,8003,8004,8005, // 7712\n8006,8007,8008,8009,8010,8011,8012,8013,8014,8015,8016,4176,8017,8018,8019,8020, // 7728\n8021,8022,8023,4861,8024,8025,8026,8027,8028,8029,8030,8031,8032,8033,8034,8035, // 7744\n8036,4862,4456,8037,8038,8039,8040,4863,8041,8042,8043,8044,8045,8046,8047,8048, // 7760\n8049,8050,8051,8052,8053,8054,8055,8056,8057,8058,8059,8060,8061,8062,8063,8064, // 7776\n8065,8066,8067,8068,8069,8070,8071,8072,8073,8074,8075,8076,8077,8078,8079,8080, // 7792\n8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095,8096, // 7808\n8097,8098,8099,4864,4177,8100,8101,8102,8103,8104,8105,8106,8107,8108,8109,8110, // 7824\n8111,8112,8113,8114,8115,8116,8117,8118,8119,8120,4178,8121,8122,8123,8124,8125, // 7840\n8126,8127,8128,8129,8130,8131,8132,8133,8134,8135,8136,8137,8138,8139,8140,8141, // 7856\n8142,8143,8144,8145,4865,4866,8146,8147,8148,8149,8150,8151,8152,8153,8154,8155, // 7872\n8156,8157,8158,8159,8160,8161,8162,8163,8164,8165,4179,8166,8167,8168,8169,8170, // 7888\n8171,8172,8173,8174,8175,8176,8177,8178,8179,8180,8181,4457,8182,8183,8184,8185, // 7904\n8186,8187,8188,8189,8190,8191,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201, // 7920\n8202,8203,8204,8205,8206,8207,8208,8209,8210,8211,8212,8213,8214,8215,8216,8217, // 7936\n8218,8219,8220,8221,8222,8223,8224,8225,8226,8227,8228,8229,8230,8231,8232,8233, // 7952\n8234,8235,8236,8237,8238,8239,8240,8241,8242,8243,8244,8245,8246,8247,8248,8249, // 7968\n8250,8251,8252,8253,8254,8255,8256,3445,8257,8258,8259,8260,8261,8262,4458,8263, // 7984\n8264,8265,8266,8267,8268,8269,8270,8271,8272,4459,8273,8274,8275,8276,3550,8277, // 8000\n8278,8279,8280,8281,8282,8283,8284,8285,8286,8287,8288,8289,4460,8290,8291,8292, // 8016\n8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,8304,8305,8306,8307,4867, // 8032\n8308,8309,8310,8311,8312,3551,8313,8314,8315,8316,8317,8318,8319,8320,8321,8322, // 8048\n8323,8324,8325,8326,4868,8327,8328,8329,8330,8331,8332,8333,8334,8335,8336,8337, // 8064\n8338,8339,8340,8341,8342,8343,8344,8345,8346,8347,8348,8349,8350,8351,8352,8353, // 8080\n8354,8355,8356,8357,8358,8359,8360,8361,8362,8363,4869,4461,8364,8365,8366,8367, // 8096\n8368,8369,8370,4870,8371,8372,8373,8374,8375,8376,8377,8378,8379,8380,8381,8382, // 8112\n8383,8384,8385,8386,8387,8388,8389,8390,8391,8392,8393,8394,8395,8396,8397,8398, // 8128\n8399,8400,8401,8402,8403,8404,8405,8406,8407,8408,8409,8410,4871,8411,8412,8413, // 8144\n8414,8415,8416,8417,8418,8419,8420,8421,8422,4462,8423,8424,8425,8426,8427,8428, // 8160\n8429,8430,8431,8432,8433,2986,8434,8435,8436,8437,8438,8439,8440,8441,8442,8443, // 8176\n8444,8445,8446,8447,8448,8449,8450,8451,8452,8453,8454,8455,8456,8457,8458,8459, // 8192\n8460,8461,8462,8463,8464,8465,8466,8467,8468,8469,8470,8471,8472,8473,8474,8475, // 8208\n8476,8477,8478,4180,8479,8480,8481,8482,8483,8484,8485,8486,8487,8488,8489,8490, // 8224\n8491,8492,8493,8494,8495,8496,8497,8498,8499,8500,8501,8502,8503,8504,8505,8506, // 8240\n8507,8508,8509,8510,8511,8512,8513,8514,8515,8516,8517,8518,8519,8520,8521,8522, // 8256\n8523,8524,8525,8526,8527,8528,8529,8530,8531,8532,8533,8534,8535,8536,8537,8538, // 8272\n8539,8540,8541,8542,8543,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554, // 8288\n8555,8556,8557,8558,8559,8560,8561,8562,8563,8564,4872,8565,8566,8567,8568,8569, // 8304\n8570,8571,8572,8573,4873,8574,8575,8576,8577,8578,8579,8580,8581,8582,8583,8584, // 8320\n8585,8586,8587,8588,8589,8590,8591,8592,8593,8594,8595,8596,8597,8598,8599,8600, // 8336\n8601,8602,8603,8604,8605,3803,8606,8607,8608,8609,8610,8611,8612,8613,4874,3804, // 8352\n8614,8615,8616,8617,8618,8619,8620,8621,3956,8622,8623,8624,8625,8626,8627,8628, // 8368\n8629,8630,8631,8632,8633,8634,8635,8636,8637,8638,2865,8639,8640,8641,8642,8643, // 8384\n8644,8645,8646,8647,8648,8649,8650,8651,8652,8653,8654,8655,8656,4463,8657,8658, // 8400\n8659,4875,4876,8660,8661,8662,8663,8664,8665,8666,8667,8668,8669,8670,8671,8672, // 8416\n8673,8674,8675,8676,8677,8678,8679,8680,8681,4464,8682,8683,8684,8685,8686,8687, // 8432\n8688,8689,8690,8691,8692,8693,8694,8695,8696,8697,8698,8699,8700,8701,8702,8703, // 8448\n8704,8705,8706,8707,8708,8709,2261,8710,8711,8712,8713,8714,8715,8716,8717,8718, // 8464\n8719,8720,8721,8722,8723,8724,8725,8726,8727,8728,8729,8730,8731,8732,8733,4181, // 8480\n8734,8735,8736,8737,8738,8739,8740,8741,8742,8743,8744,8745,8746,8747,8748,8749, // 8496\n8750,8751,8752,8753,8754,8755,8756,8757,8758,8759,8760,8761,8762,8763,4877,8764, // 8512\n8765,8766,8767,8768,8769,8770,8771,8772,8773,8774,8775,8776,8777,8778,8779,8780, // 8528\n8781,8782,8783,8784,8785,8786,8787,8788,4878,8789,4879,8790,8791,8792,4880,8793, // 8544\n8794,8795,8796,8797,8798,8799,8800,8801,4881,8802,8803,8804,8805,8806,8807,8808, // 8560\n8809,8810,8811,8812,8813,8814,8815,3957,8816,8817,8818,8819,8820,8821,8822,8823, // 8576\n8824,8825,8826,8827,8828,8829,8830,8831,8832,8833,8834,8835,8836,8837,8838,8839, // 8592\n8840,8841,8842,8843,8844,8845,8846,8847,4882,8848,8849,8850,8851,8852,8853,8854, // 8608\n8855,8856,8857,8858,8859,8860,8861,8862,8863,8864,8865,8866,8867,8868,8869,8870, // 8624\n8871,8872,8873,8874,8875,8876,8877,8878,8879,8880,8881,8882,8883,8884,3202,8885, // 8640\n8886,8887,8888,8889,8890,8891,8892,8893,8894,8895,8896,8897,8898,8899,8900,8901, // 8656\n8902,8903,8904,8905,8906,8907,8908,8909,8910,8911,8912,8913,8914,8915,8916,8917, // 8672\n8918,8919,8920,8921,8922,8923,8924,4465,8925,8926,8927,8928,8929,8930,8931,8932, // 8688\n4883,8933,8934,8935,8936,8937,8938,8939,8940,8941,8942,8943,2214,8944,8945,8946, // 8704\n8947,8948,8949,8950,8951,8952,8953,8954,8955,8956,8957,8958,8959,8960,8961,8962, // 8720\n8963,8964,8965,4884,8966,8967,8968,8969,8970,8971,8972,8973,8974,8975,8976,8977, // 8736\n8978,8979,8980,8981,8982,8983,8984,8985,8986,8987,8988,8989,8990,8991,8992,4885, // 8752\n8993,8994,8995,8996,8997,8998,8999,9000,9001,9002,9003,9004,9005,9006,9007,9008, // 8768\n9009,9010,9011,9012,9013,9014,9015,9016,9017,9018,9019,9020,9021,4182,9022,9023, // 8784\n9024,9025,9026,9027,9028,9029,9030,9031,9032,9033,9034,9035,9036,9037,9038,9039, // 8800\n9040,9041,9042,9043,9044,9045,9046,9047,9048,9049,9050,9051,9052,9053,9054,9055, // 8816\n9056,9057,9058,9059,9060,9061,9062,9063,4886,9064,9065,9066,9067,9068,9069,4887, // 8832\n9070,9071,9072,9073,9074,9075,9076,9077,9078,9079,9080,9081,9082,9083,9084,9085, // 8848\n9086,9087,9088,9089,9090,9091,9092,9093,9094,9095,9096,9097,9098,9099,9100,9101, // 8864\n9102,9103,9104,9105,9106,9107,9108,9109,9110,9111,9112,9113,9114,9115,9116,9117, // 8880\n9118,9119,9120,9121,9122,9123,9124,9125,9126,9127,9128,9129,9130,9131,9132,9133, // 8896\n9134,9135,9136,9137,9138,9139,9140,9141,3958,9142,9143,9144,9145,9146,9147,9148, // 8912\n9149,9150,9151,4888,9152,9153,9154,9155,9156,9157,9158,9159,9160,9161,9162,9163, // 8928\n9164,9165,9166,9167,9168,9169,9170,9171,9172,9173,9174,9175,4889,9176,9177,9178, // 8944\n9179,9180,9181,9182,9183,9184,9185,9186,9187,9188,9189,9190,9191,9192,9193,9194, // 8960\n9195,9196,9197,9198,9199,9200,9201,9202,9203,4890,9204,9205,9206,9207,9208,9209, // 8976\n9210,9211,9212,9213,9214,9215,9216,9217,9218,9219,9220,9221,9222,4466,9223,9224, // 8992\n9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240, // 9008\n9241,9242,9243,9244,9245,4891,9246,9247,9248,9249,9250,9251,9252,9253,9254,9255, // 9024\n9256,9257,4892,9258,9259,9260,9261,4893,4894,9262,9263,9264,9265,9266,9267,9268, // 9040\n9269,9270,9271,9272,9273,4467,9274,9275,9276,9277,9278,9279,9280,9281,9282,9283, // 9056\n9284,9285,3673,9286,9287,9288,9289,9290,9291,9292,9293,9294,9295,9296,9297,9298, // 9072\n9299,9300,9301,9302,9303,9304,9305,9306,9307,9308,9309,9310,9311,9312,9313,9314, // 9088\n9315,9316,9317,9318,9319,9320,9321,9322,4895,9323,9324,9325,9326,9327,9328,9329, // 9104\n9330,9331,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345, // 9120\n9346,9347,4468,9348,9349,9350,9351,9352,9353,9354,9355,9356,9357,9358,9359,9360, // 9136\n9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9372,9373,4896,9374,4469, // 9152\n9375,9376,9377,9378,9379,4897,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389, // 9168\n9390,9391,9392,9393,9394,9395,9396,9397,9398,9399,9400,9401,9402,9403,9404,9405, // 9184\n9406,4470,9407,2751,9408,9409,3674,3552,9410,9411,9412,9413,9414,9415,9416,9417, // 9200\n9418,9419,9420,9421,4898,9422,9423,9424,9425,9426,9427,9428,9429,3959,9430,9431, // 9216\n9432,9433,9434,9435,9436,4471,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446, // 9232\n9447,9448,9449,9450,3348,9451,9452,9453,9454,9455,9456,9457,9458,9459,9460,9461, // 9248\n9462,9463,9464,9465,9466,9467,9468,9469,9470,9471,9472,4899,9473,9474,9475,9476, // 9264\n9477,4900,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,3349,9489,9490, // 9280\n9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506, // 9296\n9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,4901,9521, // 9312\n9522,9523,9524,9525,9526,4902,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536, // 9328\n9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,9548,9549,9550,9551,9552, // 9344\n9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568, // 9360\n9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584, // 9376\n3805,9585,9586,9587,9588,9589,9590,9591,9592,9593,9594,9595,9596,9597,9598,9599, // 9392\n9600,9601,9602,4903,9603,9604,9605,9606,9607,4904,9608,9609,9610,9611,9612,9613, // 9408\n9614,4905,9615,9616,9617,9618,9619,9620,9621,9622,9623,9624,9625,9626,9627,9628, // 9424\n9629,9630,9631,9632,4906,9633,9634,9635,9636,9637,9638,9639,9640,9641,9642,9643, // 9440\n4907,9644,9645,9646,9647,9648,9649,9650,9651,9652,9653,9654,9655,9656,9657,9658, // 9456\n9659,9660,9661,9662,9663,9664,9665,9666,9667,9668,9669,9670,9671,9672,4183,9673, // 9472\n9674,9675,9676,9677,4908,9678,9679,9680,9681,4909,9682,9683,9684,9685,9686,9687, // 9488\n9688,9689,9690,4910,9691,9692,9693,3675,9694,9695,9696,2945,9697,9698,9699,9700, // 9504\n9701,9702,9703,9704,9705,4911,9706,9707,9708,9709,9710,9711,9712,9713,9714,9715, // 9520\n9716,9717,9718,9719,9720,9721,9722,9723,9724,9725,9726,9727,9728,9729,9730,9731, // 9536\n9732,9733,9734,9735,4912,9736,9737,9738,9739,9740,4913,9741,9742,9743,9744,9745, // 9552\n9746,9747,9748,9749,9750,9751,9752,9753,9754,9755,9756,9757,9758,4914,9759,9760, // 9568\n9761,9762,9763,9764,9765,9766,9767,9768,9769,9770,9771,9772,9773,9774,9775,9776, // 9584\n9777,9778,9779,9780,9781,9782,4915,9783,9784,9785,9786,9787,9788,9789,9790,9791, // 9600\n9792,9793,4916,9794,9795,9796,9797,9798,9799,9800,9801,9802,9803,9804,9805,9806, // 9616\n9807,9808,9809,9810,9811,9812,9813,9814,9815,9816,9817,9818,9819,9820,9821,9822, // 9632\n9823,9824,9825,9826,9827,9828,9829,9830,9831,9832,9833,9834,9835,9836,9837,9838, // 9648\n9839,9840,9841,9842,9843,9844,9845,9846,9847,9848,9849,9850,9851,9852,9853,9854, // 9664\n9855,9856,9857,9858,9859,9860,9861,9862,9863,9864,9865,9866,9867,9868,4917,9869, // 9680\n9870,9871,9872,9873,9874,9875,9876,9877,9878,9879,9880,9881,9882,9883,9884,9885, // 9696\n9886,9887,9888,9889,9890,9891,9892,4472,9893,9894,9895,9896,9897,3806,9898,9899, // 9712\n9900,9901,9902,9903,9904,9905,9906,9907,9908,9909,9910,9911,9912,9913,9914,4918, // 9728\n9915,9916,9917,4919,9918,9919,9920,9921,4184,9922,9923,9924,9925,9926,9927,9928, // 9744\n9929,9930,9931,9932,9933,9934,9935,9936,9937,9938,9939,9940,9941,9942,9943,9944, // 9760\n9945,9946,4920,9947,9948,9949,9950,9951,9952,9953,9954,9955,4185,9956,9957,9958, // 9776\n9959,9960,9961,9962,9963,9964,9965,4921,9966,9967,9968,4473,9969,9970,9971,9972, // 9792\n9973,9974,9975,9976,9977,4474,9978,9979,9980,9981,9982,9983,9984,9985,9986,9987, // 9808\n9988,9989,9990,9991,9992,9993,9994,9995,9996,9997,9998,9999,10000,10001,10002,10003, // 9824\n10004,10005,10006,10007,10008,10009,10010,10011,10012,10013,10014,10015,10016,10017,10018,10019, // 9840\n10020,10021,4922,10022,4923,10023,10024,10025,10026,10027,10028,10029,10030,10031,10032,10033, // 9856\n10034,10035,10036,10037,10038,10039,10040,10041,10042,10043,10044,10045,10046,10047,10048,4924, // 9872\n10049,10050,10051,10052,10053,10054,10055,10056,10057,10058,10059,10060,10061,10062,10063,10064, // 9888\n10065,10066,10067,10068,10069,10070,10071,10072,10073,10074,10075,10076,10077,10078,10079,10080, // 9904\n10081,10082,10083,10084,10085,10086,10087,4475,10088,10089,10090,10091,10092,10093,10094,10095, // 9920\n10096,10097,4476,10098,10099,10100,10101,10102,10103,10104,10105,10106,10107,10108,10109,10110, // 9936\n10111,2174,10112,10113,10114,10115,10116,10117,10118,10119,10120,10121,10122,10123,10124,10125, // 9952\n10126,10127,10128,10129,10130,10131,10132,10133,10134,10135,10136,10137,10138,10139,10140,3807, // 9968\n4186,4925,10141,10142,10143,10144,10145,10146,10147,4477,4187,10148,10149,10150,10151,10152, // 9984\n10153,4188,10154,10155,10156,10157,10158,10159,10160,10161,4926,10162,10163,10164,10165,10166, //10000\n10167,10168,10169,10170,10171,10172,10173,10174,10175,10176,10177,10178,10179,10180,10181,10182, //10016\n10183,10184,10185,10186,10187,10188,10189,10190,10191,10192,3203,10193,10194,10195,10196,10197, //10032\n10198,10199,10200,4478,10201,10202,10203,10204,4479,10205,10206,10207,10208,10209,10210,10211, //10048\n10212,10213,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10224,10225,10226,10227, //10064\n10228,10229,10230,10231,10232,10233,10234,4927,10235,10236,10237,10238,10239,10240,10241,10242, //10080\n10243,10244,10245,10246,10247,10248,10249,10250,10251,10252,10253,10254,10255,10256,10257,10258, //10096\n10259,10260,10261,10262,10263,10264,10265,10266,10267,10268,10269,10270,10271,10272,10273,4480, //10112\n4928,4929,10274,10275,10276,10277,10278,10279,10280,10281,10282,10283,10284,10285,10286,10287, //10128\n10288,10289,10290,10291,10292,10293,10294,10295,10296,10297,10298,10299,10300,10301,10302,10303, //10144\n10304,10305,10306,10307,10308,10309,10310,10311,10312,10313,10314,10315,10316,10317,10318,10319, //10160\n10320,10321,10322,10323,10324,10325,10326,10327,10328,10329,10330,10331,10332,10333,10334,4930, //10176\n10335,10336,10337,10338,10339,10340,10341,10342,4931,10343,10344,10345,10346,10347,10348,10349, //10192\n10350,10351,10352,10353,10354,10355,3088,10356,2786,10357,10358,10359,10360,4189,10361,10362, //10208\n10363,10364,10365,10366,10367,10368,10369,10370,10371,10372,10373,10374,10375,4932,10376,10377, //10224\n10378,10379,10380,10381,10382,10383,10384,10385,10386,10387,10388,10389,10390,10391,10392,4933, //10240\n10393,10394,10395,4934,10396,10397,10398,10399,10400,10401,10402,10403,10404,10405,10406,10407, //10256\n10408,10409,10410,10411,10412,3446,10413,10414,10415,10416,10417,10418,10419,10420,10421,10422, //10272\n10423,4935,10424,10425,10426,10427,10428,10429,10430,4936,10431,10432,10433,10434,10435,10436, //10288\n10437,10438,10439,10440,10441,10442,10443,4937,10444,10445,10446,10447,4481,10448,10449,10450, //10304\n10451,10452,10453,10454,10455,10456,10457,10458,10459,10460,10461,10462,10463,10464,10465,10466, //10320\n10467,10468,10469,10470,10471,10472,10473,10474,10475,10476,10477,10478,10479,10480,10481,10482, //10336\n10483,10484,10485,10486,10487,10488,10489,10490,10491,10492,10493,10494,10495,10496,10497,10498, //10352\n10499,10500,10501,10502,10503,10504,10505,4938,10506,10507,10508,10509,10510,2552,10511,10512, //10368\n10513,10514,10515,10516,3447,10517,10518,10519,10520,10521,10522,10523,10524,10525,10526,10527, //10384\n10528,10529,10530,10531,10532,10533,10534,10535,10536,10537,10538,10539,10540,10541,10542,10543, //10400\n4482,10544,4939,10545,10546,10547,10548,10549,10550,10551,10552,10553,10554,10555,10556,10557, //10416\n10558,10559,10560,10561,10562,10563,10564,10565,10566,10567,3676,4483,10568,10569,10570,10571, //10432\n10572,3448,10573,10574,10575,10576,10577,10578,10579,10580,10581,10582,10583,10584,10585,10586, //10448\n10587,10588,10589,10590,10591,10592,10593,10594,10595,10596,10597,10598,10599,10600,10601,10602, //10464\n10603,10604,10605,10606,10607,10608,10609,10610,10611,10612,10613,10614,10615,10616,10617,10618, //10480\n10619,10620,10621,10622,10623,10624,10625,10626,10627,4484,10628,10629,10630,10631,10632,4940, //10496\n10633,10634,10635,10636,10637,10638,10639,10640,10641,10642,10643,10644,10645,10646,10647,10648, //10512\n10649,10650,10651,10652,10653,10654,10655,10656,4941,10657,10658,10659,2599,10660,10661,10662, //10528\n10663,10664,10665,10666,3089,10667,10668,10669,10670,10671,10672,10673,10674,10675,10676,10677, //10544\n10678,10679,10680,4942,10681,10682,10683,10684,10685,10686,10687,10688,10689,10690,10691,10692, //10560\n10693,10694,10695,10696,10697,4485,10698,10699,10700,10701,10702,10703,10704,4943,10705,3677, //10576\n10706,10707,10708,10709,10710,10711,10712,4944,10713,10714,10715,10716,10717,10718,10719,10720, //10592\n10721,10722,10723,10724,10725,10726,10727,10728,4945,10729,10730,10731,10732,10733,10734,10735, //10608\n10736,10737,10738,10739,10740,10741,10742,10743,10744,10745,10746,10747,10748,10749,10750,10751, //10624\n10752,10753,10754,10755,10756,10757,10758,10759,10760,10761,4946,10762,10763,10764,10765,10766, //10640\n10767,4947,4948,10768,10769,10770,10771,10772,10773,10774,10775,10776,10777,10778,10779,10780, //10656\n10781,10782,10783,10784,10785,10786,10787,10788,10789,10790,10791,10792,10793,10794,10795,10796, //10672\n10797,10798,10799,10800,10801,10802,10803,10804,10805,10806,10807,10808,10809,10810,10811,10812, //10688\n10813,10814,10815,10816,10817,10818,10819,10820,10821,10822,10823,10824,10825,10826,10827,10828, //10704\n10829,10830,10831,10832,10833,10834,10835,10836,10837,10838,10839,10840,10841,10842,10843,10844, //10720\n10845,10846,10847,10848,10849,10850,10851,10852,10853,10854,10855,10856,10857,10858,10859,10860, //10736\n10861,10862,10863,10864,10865,10866,10867,10868,10869,10870,10871,10872,10873,10874,10875,10876, //10752\n10877,10878,4486,10879,10880,10881,10882,10883,10884,10885,4949,10886,10887,10888,10889,10890, //10768\n10891,10892,10893,10894,10895,10896,10897,10898,10899,10900,10901,10902,10903,10904,10905,10906, //10784\n10907,10908,10909,10910,10911,10912,10913,10914,10915,10916,10917,10918,10919,4487,10920,10921, //10800\n10922,10923,10924,10925,10926,10927,10928,10929,10930,10931,10932,4950,10933,10934,10935,10936, //10816\n10937,10938,10939,10940,10941,10942,10943,10944,10945,10946,10947,10948,10949,4488,10950,10951, //10832\n10952,10953,10954,10955,10956,10957,10958,10959,4190,10960,10961,10962,10963,10964,10965,10966, //10848\n10967,10968,10969,10970,10971,10972,10973,10974,10975,10976,10977,10978,10979,10980,10981,10982, //10864\n10983,10984,10985,10986,10987,10988,10989,10990,10991,10992,10993,10994,10995,10996,10997,10998, //10880\n10999,11000,11001,11002,11003,11004,11005,11006,3960,11007,11008,11009,11010,11011,11012,11013, //10896\n11014,11015,11016,11017,11018,11019,11020,11021,11022,11023,11024,11025,11026,11027,11028,11029, //10912\n11030,11031,11032,4951,11033,11034,11035,11036,11037,11038,11039,11040,11041,11042,11043,11044, //10928\n11045,11046,11047,4489,11048,11049,11050,11051,4952,11052,11053,11054,11055,11056,11057,11058, //10944\n4953,11059,11060,11061,11062,11063,11064,11065,11066,11067,11068,11069,11070,11071,4954,11072, //10960\n11073,11074,11075,11076,11077,11078,11079,11080,11081,11082,11083,11084,11085,11086,11087,11088, //10976\n11089,11090,11091,11092,11093,11094,11095,11096,11097,11098,11099,11100,11101,11102,11103,11104, //10992\n11105,11106,11107,11108,11109,11110,11111,11112,11113,11114,11115,3808,11116,11117,11118,11119, //11008\n11120,11121,11122,11123,11124,11125,11126,11127,11128,11129,11130,11131,11132,11133,11134,4955, //11024\n11135,11136,11137,11138,11139,11140,11141,11142,11143,11144,11145,11146,11147,11148,11149,11150, //11040\n11151,11152,11153,11154,11155,11156,11157,11158,11159,11160,11161,4956,11162,11163,11164,11165, //11056\n11166,11167,11168,11169,11170,11171,11172,11173,11174,11175,11176,11177,11178,11179,11180,4957, //11072\n11181,11182,11183,11184,11185,11186,4958,11187,11188,11189,11190,11191,11192,11193,11194,11195, //11088\n11196,11197,11198,11199,11200,3678,11201,11202,11203,11204,11205,11206,4191,11207,11208,11209, //11104\n11210,11211,11212,11213,11214,11215,11216,11217,11218,11219,11220,11221,11222,11223,11224,11225, //11120\n11226,11227,11228,11229,11230,11231,11232,11233,11234,11235,11236,11237,11238,11239,11240,11241, //11136\n11242,11243,11244,11245,11246,11247,11248,11249,11250,11251,4959,11252,11253,11254,11255,11256, //11152\n11257,11258,11259,11260,11261,11262,11263,11264,11265,11266,11267,11268,11269,11270,11271,11272, //11168\n11273,11274,11275,11276,11277,11278,11279,11280,11281,11282,11283,11284,11285,11286,11287,11288, //11184\n11289,11290,11291,11292,11293,11294,11295,11296,11297,11298,11299,11300,11301,11302,11303,11304, //11200\n11305,11306,11307,11308,11309,11310,11311,11312,11313,11314,3679,11315,11316,11317,11318,4490, //11216\n11319,11320,11321,11322,11323,11324,11325,11326,11327,11328,11329,11330,11331,11332,11333,11334, //11232\n11335,11336,11337,11338,11339,11340,11341,11342,11343,11344,11345,11346,11347,4960,11348,11349, //11248\n11350,11351,11352,11353,11354,11355,11356,11357,11358,11359,11360,11361,11362,11363,11364,11365, //11264\n11366,11367,11368,11369,11370,11371,11372,11373,11374,11375,11376,11377,3961,4961,11378,11379, //11280\n11380,11381,11382,11383,11384,11385,11386,11387,11388,11389,11390,11391,11392,11393,11394,11395, //11296\n11396,11397,4192,11398,11399,11400,11401,11402,11403,11404,11405,11406,11407,11408,11409,11410, //11312\n11411,4962,11412,11413,11414,11415,11416,11417,11418,11419,11420,11421,11422,11423,11424,11425, //11328\n11426,11427,11428,11429,11430,11431,11432,11433,11434,11435,11436,11437,11438,11439,11440,11441, //11344\n11442,11443,11444,11445,11446,11447,11448,11449,11450,11451,11452,11453,11454,11455,11456,11457, //11360\n11458,11459,11460,11461,11462,11463,11464,11465,11466,11467,11468,11469,4963,11470,11471,4491, //11376\n11472,11473,11474,11475,4964,11476,11477,11478,11479,11480,11481,11482,11483,11484,11485,11486, //11392\n11487,11488,11489,11490,11491,11492,4965,11493,11494,11495,11496,11497,11498,11499,11500,11501, //11408\n11502,11503,11504,11505,11506,11507,11508,11509,11510,11511,11512,11513,11514,11515,11516,11517, //11424\n11518,11519,11520,11521,11522,11523,11524,11525,11526,11527,11528,11529,3962,11530,11531,11532, //11440\n11533,11534,11535,11536,11537,11538,11539,11540,11541,11542,11543,11544,11545,11546,11547,11548, //11456\n11549,11550,11551,11552,11553,11554,11555,11556,11557,11558,11559,11560,11561,11562,11563,11564, //11472\n4193,4194,11565,11566,11567,11568,11569,11570,11571,11572,11573,11574,11575,11576,11577,11578, //11488\n11579,11580,11581,11582,11583,11584,11585,11586,11587,11588,11589,11590,11591,4966,4195,11592, //11504\n11593,11594,11595,11596,11597,11598,11599,11600,11601,11602,11603,11604,3090,11605,11606,11607, //11520\n11608,11609,11610,4967,11611,11612,11613,11614,11615,11616,11617,11618,11619,11620,11621,11622, //11536\n11623,11624,11625,11626,11627,11628,11629,11630,11631,11632,11633,11634,11635,11636,11637,11638, //11552\n11639,11640,11641,11642,11643,11644,11645,11646,11647,11648,11649,11650,11651,11652,11653,11654, //11568\n11655,11656,11657,11658,11659,11660,11661,11662,11663,11664,11665,11666,11667,11668,11669,11670, //11584\n11671,11672,11673,11674,4968,11675,11676,11677,11678,11679,11680,11681,11682,11683,11684,11685, //11600\n11686,11687,11688,11689,11690,11691,11692,11693,3809,11694,11695,11696,11697,11698,11699,11700, //11616\n11701,11702,11703,11704,11705,11706,11707,11708,11709,11710,11711,11712,11713,11714,11715,11716, //11632\n11717,11718,3553,11719,11720,11721,11722,11723,11724,11725,11726,11727,11728,11729,11730,4969, //11648\n11731,11732,11733,11734,11735,11736,11737,11738,11739,11740,4492,11741,11742,11743,11744,11745, //11664\n11746,11747,11748,11749,11750,11751,11752,4970,11753,11754,11755,11756,11757,11758,11759,11760, //11680\n11761,11762,11763,11764,11765,11766,11767,11768,11769,11770,11771,11772,11773,11774,11775,11776, //11696\n11777,11778,11779,11780,11781,11782,11783,11784,11785,11786,11787,11788,11789,11790,4971,11791, //11712\n11792,11793,11794,11795,11796,11797,4972,11798,11799,11800,11801,11802,11803,11804,11805,11806, //11728\n11807,11808,11809,11810,4973,11811,11812,11813,11814,11815,11816,11817,11818,11819,11820,11821, //11744\n11822,11823,11824,11825,11826,11827,11828,11829,11830,11831,11832,11833,11834,3680,3810,11835, //11760\n11836,4974,11837,11838,11839,11840,11841,11842,11843,11844,11845,11846,11847,11848,11849,11850, //11776\n11851,11852,11853,11854,11855,11856,11857,11858,11859,11860,11861,11862,11863,11864,11865,11866, //11792\n11867,11868,11869,11870,11871,11872,11873,11874,11875,11876,11877,11878,11879,11880,11881,11882, //11808\n11883,11884,4493,11885,11886,11887,11888,11889,11890,11891,11892,11893,11894,11895,11896,11897, //11824\n11898,11899,11900,11901,11902,11903,11904,11905,11906,11907,11908,11909,11910,11911,11912,11913, //11840\n11914,11915,4975,11916,11917,11918,11919,11920,11921,11922,11923,11924,11925,11926,11927,11928, //11856\n11929,11930,11931,11932,11933,11934,11935,11936,11937,11938,11939,11940,11941,11942,11943,11944, //11872\n11945,11946,11947,11948,11949,4976,11950,11951,11952,11953,11954,11955,11956,11957,11958,11959, //11888\n11960,11961,11962,11963,11964,11965,11966,11967,11968,11969,11970,11971,11972,11973,11974,11975, //11904\n11976,11977,11978,11979,11980,11981,11982,11983,11984,11985,11986,11987,4196,11988,11989,11990, //11920\n11991,11992,4977,11993,11994,11995,11996,11997,11998,11999,12000,12001,12002,12003,12004,12005, //11936\n12006,12007,12008,12009,12010,12011,12012,12013,12014,12015,12016,12017,12018,12019,12020,12021, //11952\n12022,12023,12024,12025,12026,12027,12028,12029,12030,12031,12032,12033,12034,12035,12036,12037, //11968\n12038,12039,12040,12041,12042,12043,12044,12045,12046,12047,12048,12049,12050,12051,12052,12053, //11984\n12054,12055,12056,12057,12058,12059,12060,12061,4978,12062,12063,12064,12065,12066,12067,12068, //12000\n12069,12070,12071,12072,12073,12074,12075,12076,12077,12078,12079,12080,12081,12082,12083,12084, //12016\n12085,12086,12087,12088,12089,12090,12091,12092,12093,12094,12095,12096,12097,12098,12099,12100, //12032\n12101,12102,12103,12104,12105,12106,12107,12108,12109,12110,12111,12112,12113,12114,12115,12116, //12048\n12117,12118,12119,12120,12121,12122,12123,4979,12124,12125,12126,12127,12128,4197,12129,12130, //12064\n12131,12132,12133,12134,12135,12136,12137,12138,12139,12140,12141,12142,12143,12144,12145,12146, //12080\n12147,12148,12149,12150,12151,12152,12153,12154,4980,12155,12156,12157,12158,12159,12160,4494, //12096\n12161,12162,12163,12164,3811,12165,12166,12167,12168,12169,4495,12170,12171,4496,12172,12173, //12112\n12174,12175,12176,3812,12177,12178,12179,12180,12181,12182,12183,12184,12185,12186,12187,12188, //12128\n12189,12190,12191,12192,12193,12194,12195,12196,12197,12198,12199,12200,12201,12202,12203,12204, //12144\n12205,12206,12207,12208,12209,12210,12211,12212,12213,12214,12215,12216,12217,12218,12219,12220, //12160\n12221,4981,12222,12223,12224,12225,12226,12227,12228,12229,12230,12231,12232,12233,12234,12235, //12176\n4982,12236,12237,12238,12239,12240,12241,12242,12243,12244,12245,4983,12246,12247,12248,12249, //12192\n4984,12250,12251,12252,12253,12254,12255,12256,12257,12258,12259,12260,12261,12262,12263,12264, //12208\n4985,12265,4497,12266,12267,12268,12269,12270,12271,12272,12273,12274,12275,12276,12277,12278, //12224\n12279,12280,12281,12282,12283,12284,12285,12286,12287,4986,12288,12289,12290,12291,12292,12293, //12240\n12294,12295,12296,2473,12297,12298,12299,12300,12301,12302,12303,12304,12305,12306,12307,12308, //12256\n12309,12310,12311,12312,12313,12314,12315,12316,12317,12318,12319,3963,12320,12321,12322,12323, //12272\n12324,12325,12326,12327,12328,12329,12330,12331,12332,4987,12333,12334,12335,12336,12337,12338, //12288\n12339,12340,12341,12342,12343,12344,12345,12346,12347,12348,12349,12350,12351,12352,12353,12354, //12304\n12355,12356,12357,12358,12359,3964,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369, //12320\n12370,3965,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384, //12336\n12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400, //12352\n12401,12402,12403,12404,12405,12406,12407,12408,4988,12409,12410,12411,12412,12413,12414,12415, //12368\n12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431, //12384\n12432,12433,12434,12435,12436,12437,12438,3554,12439,12440,12441,12442,12443,12444,12445,12446, //12400\n12447,12448,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462, //12416\n12463,12464,4989,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477, //12432\n12478,12479,12480,4990,12481,12482,12483,12484,12485,12486,12487,12488,12489,4498,12490,12491, //12448\n12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507, //12464\n12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523, //12480\n12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,12535,12536,12537,12538,12539, //12496\n12540,12541,12542,12543,12544,12545,12546,12547,12548,12549,12550,12551,4991,12552,12553,12554, //12512\n12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570, //12528\n12571,12572,12573,12574,12575,12576,12577,12578,3036,12579,12580,12581,12582,12583,3966,12584, //12544\n12585,12586,12587,12588,12589,12590,12591,12592,12593,12594,12595,12596,12597,12598,12599,12600, //12560\n12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616, //12576\n12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632, //12592\n12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,4499,12647, //12608\n12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663, //12624\n12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679, //12640\n12680,12681,12682,12683,12684,12685,12686,12687,12688,12689,12690,12691,12692,12693,12694,12695, //12656\n12696,12697,12698,4992,12699,12700,12701,12702,12703,12704,12705,12706,12707,12708,12709,12710, //12672\n12711,12712,12713,12714,12715,12716,12717,12718,12719,12720,12721,12722,12723,12724,12725,12726, //12688\n12727,12728,12729,12730,12731,12732,12733,12734,12735,12736,12737,12738,12739,12740,12741,12742, //12704\n12743,12744,12745,12746,12747,12748,12749,12750,12751,12752,12753,12754,12755,12756,12757,12758, //12720\n12759,12760,12761,12762,12763,12764,12765,12766,12767,12768,12769,12770,12771,12772,12773,12774, //12736\n12775,12776,12777,12778,4993,2175,12779,12780,12781,12782,12783,12784,12785,12786,4500,12787, //12752\n12788,12789,12790,12791,12792,12793,12794,12795,12796,12797,12798,12799,12800,12801,12802,12803, //12768\n12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819, //12784\n12820,12821,12822,12823,12824,12825,12826,4198,3967,12827,12828,12829,12830,12831,12832,12833, //12800\n12834,12835,12836,12837,12838,12839,12840,12841,12842,12843,12844,12845,12846,12847,12848,12849, //12816\n12850,12851,12852,12853,12854,12855,12856,12857,12858,12859,12860,12861,4199,12862,12863,12864, //12832\n12865,12866,12867,12868,12869,12870,12871,12872,12873,12874,12875,12876,12877,12878,12879,12880, //12848\n12881,12882,12883,12884,12885,12886,12887,4501,12888,12889,12890,12891,12892,12893,12894,12895, //12864\n12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911, //12880\n12912,4994,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,12924,12925,12926, //12896\n12927,12928,12929,12930,12931,12932,12933,12934,12935,12936,12937,12938,12939,12940,12941,12942, //12912\n12943,12944,12945,12946,12947,12948,12949,12950,12951,12952,12953,12954,12955,12956,1772,12957, //12928\n12958,12959,12960,12961,12962,12963,12964,12965,12966,12967,12968,12969,12970,12971,12972,12973, //12944\n12974,12975,12976,12977,12978,12979,12980,12981,12982,12983,12984,12985,12986,12987,12988,12989, //12960\n12990,12991,12992,12993,12994,12995,12996,12997,4502,12998,4503,12999,13000,13001,13002,13003, //12976\n4504,13004,13005,13006,13007,13008,13009,13010,13011,13012,13013,13014,13015,13016,13017,13018, //12992\n13019,13020,13021,13022,13023,13024,13025,13026,13027,13028,13029,3449,13030,13031,13032,13033, //13008\n13034,13035,13036,13037,13038,13039,13040,13041,13042,13043,13044,13045,13046,13047,13048,13049, //13024\n13050,13051,13052,13053,13054,13055,13056,13057,13058,13059,13060,13061,13062,13063,13064,13065, //13040\n13066,13067,13068,13069,13070,13071,13072,13073,13074,13075,13076,13077,13078,13079,13080,13081, //13056\n13082,13083,13084,13085,13086,13087,13088,13089,13090,13091,13092,13093,13094,13095,13096,13097, //13072\n13098,13099,13100,13101,13102,13103,13104,13105,13106,13107,13108,13109,13110,13111,13112,13113, //13088\n13114,13115,13116,13117,13118,3968,13119,4995,13120,13121,13122,13123,13124,13125,13126,13127, //13104\n4505,13128,13129,13130,13131,13132,13133,13134,4996,4506,13135,13136,13137,13138,13139,4997, //13120\n13140,13141,13142,13143,13144,13145,13146,13147,13148,13149,13150,13151,13152,13153,13154,13155, //13136\n13156,13157,13158,13159,4998,13160,13161,13162,13163,13164,13165,13166,13167,13168,13169,13170, //13152\n13171,13172,13173,13174,13175,13176,4999,13177,13178,13179,13180,13181,13182,13183,13184,13185, //13168\n13186,13187,13188,13189,13190,13191,13192,13193,13194,13195,13196,13197,13198,13199,13200,13201, //13184\n13202,13203,13204,13205,13206,5000,13207,13208,13209,13210,13211,13212,13213,13214,13215,13216, //13200\n13217,13218,13219,13220,13221,13222,13223,13224,13225,13226,13227,4200,5001,13228,13229,13230, //13216\n13231,13232,13233,13234,13235,13236,13237,13238,13239,13240,3969,13241,13242,13243,13244,3970, //13232\n13245,13246,13247,13248,13249,13250,13251,13252,13253,13254,13255,13256,13257,13258,13259,13260, //13248\n13261,13262,13263,13264,13265,13266,13267,13268,3450,13269,13270,13271,13272,13273,13274,13275, //13264\n13276,5002,13277,13278,13279,13280,13281,13282,13283,13284,13285,13286,13287,13288,13289,13290, //13280\n13291,13292,13293,13294,13295,13296,13297,13298,13299,13300,13301,13302,3813,13303,13304,13305, //13296\n13306,13307,13308,13309,13310,13311,13312,13313,13314,13315,13316,13317,13318,13319,13320,13321, //13312\n13322,13323,13324,13325,13326,13327,13328,4507,13329,13330,13331,13332,13333,13334,13335,13336, //13328\n13337,13338,13339,13340,13341,5003,13342,13343,13344,13345,13346,13347,13348,13349,13350,13351, //13344\n13352,13353,13354,13355,13356,13357,13358,13359,13360,13361,13362,13363,13364,13365,13366,13367, //13360\n5004,13368,13369,13370,13371,13372,13373,13374,13375,13376,13377,13378,13379,13380,13381,13382, //13376\n13383,13384,13385,13386,13387,13388,13389,13390,13391,13392,13393,13394,13395,13396,13397,13398, //13392\n13399,13400,13401,13402,13403,13404,13405,13406,13407,13408,13409,13410,13411,13412,13413,13414, //13408\n13415,13416,13417,13418,13419,13420,13421,13422,13423,13424,13425,13426,13427,13428,13429,13430, //13424\n13431,13432,4508,13433,13434,13435,4201,13436,13437,13438,13439,13440,13441,13442,13443,13444, //13440\n13445,13446,13447,13448,13449,13450,13451,13452,13453,13454,13455,13456,13457,5005,13458,13459, //13456\n13460,13461,13462,13463,13464,13465,13466,13467,13468,13469,13470,4509,13471,13472,13473,13474, //13472\n13475,13476,13477,13478,13479,13480,13481,13482,13483,13484,13485,13486,13487,13488,13489,13490, //13488\n13491,13492,13493,13494,13495,13496,13497,13498,13499,13500,13501,13502,13503,13504,13505,13506, //13504\n13507,13508,13509,13510,13511,13512,13513,13514,13515,13516,13517,13518,13519,13520,13521,13522, //13520\n13523,13524,13525,13526,13527,13528,13529,13530,13531,13532,13533,13534,13535,13536,13537,13538, //13536\n13539,13540,13541,13542,13543,13544,13545,13546,13547,13548,13549,13550,13551,13552,13553,13554, //13552\n13555,13556,13557,13558,13559,13560,13561,13562,13563,13564,13565,13566,13567,13568,13569,13570, //13568\n13571,13572,13573,13574,13575,13576,13577,13578,13579,13580,13581,13582,13583,13584,13585,13586, //13584\n13587,13588,13589,13590,13591,13592,13593,13594,13595,13596,13597,13598,13599,13600,13601,13602, //13600\n13603,13604,13605,13606,13607,13608,13609,13610,13611,13612,13613,13614,13615,13616,13617,13618, //13616\n13619,13620,13621,13622,13623,13624,13625,13626,13627,13628,13629,13630,13631,13632,13633,13634, //13632\n13635,13636,13637,13638,13639,13640,13641,13642,5006,13643,13644,13645,13646,13647,13648,13649, //13648\n13650,13651,5007,13652,13653,13654,13655,13656,13657,13658,13659,13660,13661,13662,13663,13664, //13664\n13665,13666,13667,13668,13669,13670,13671,13672,13673,13674,13675,13676,13677,13678,13679,13680, //13680\n13681,13682,13683,13684,13685,13686,13687,13688,13689,13690,13691,13692,13693,13694,13695,13696, //13696\n13697,13698,13699,13700,13701,13702,13703,13704,13705,13706,13707,13708,13709,13710,13711,13712, //13712\n13713,13714,13715,13716,13717,13718,13719,13720,13721,13722,13723,13724,13725,13726,13727,13728, //13728\n13729,13730,13731,13732,13733,13734,13735,13736,13737,13738,13739,13740,13741,13742,13743,13744, //13744\n13745,13746,13747,13748,13749,13750,13751,13752,13753,13754,13755,13756,13757,13758,13759,13760, //13760\n13761,13762,13763,13764,13765,13766,13767,13768,13769,13770,13771,13772,13773,13774,3273,13775, //13776\n13776,13777,13778,13779,13780,13781,13782,13783,13784,13785,13786,13787,13788,13789,13790,13791, //13792\n13792,13793,13794,13795,13796,13797,13798,13799,13800,13801,13802,13803,13804,13805,13806,13807, //13808\n13808,13809,13810,13811,13812,13813,13814,13815,13816,13817,13818,13819,13820,13821,13822,13823, //13824\n13824,13825,13826,13827,13828,13829,13830,13831,13832,13833,13834,13835,13836,13837,13838,13839, //13840\n13840,13841,13842,13843,13844,13845,13846,13847,13848,13849,13850,13851,13852,13853,13854,13855, //13856\n13856,13857,13858,13859,13860,13861,13862,13863,13864,13865,13866,13867,13868,13869,13870,13871, //13872\n13872,13873,13874,13875,13876,13877,13878,13879,13880,13881,13882,13883,13884,13885,13886,13887, //13888\n13888,13889,13890,13891,13892,13893,13894,13895,13896,13897,13898,13899,13900,13901,13902,13903, //13904\n13904,13905,13906,13907,13908,13909,13910,13911,13912,13913,13914,13915,13916,13917,13918,13919, //13920\n13920,13921,13922,13923,13924,13925,13926,13927,13928,13929,13930,13931,13932,13933,13934,13935, //13936\n13936,13937,13938,13939,13940,13941,13942,13943,13944,13945,13946,13947,13948,13949,13950,13951, //13952\n13952,13953,13954,13955,13956,13957,13958,13959,13960,13961,13962,13963,13964,13965,13966,13967, //13968\n13968,13969,13970,13971,13972]; //13973\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\n// EUCTW frequency table\n// Converted from big5 work\n// by Taiwan's Mandarin Promotion Council\n// <http://www.edu.tw:81/mandr/>\n\n// 128  --> 0.42261\n// 256  --> 0.57851\n// 512  --> 0.74851\n// 1024 --> 0.89384\n// 2048 --> 0.97583\n//\n// Idea Distribution Ratio = 0.74851/(1-0.74851) =2.98\n// Random Distribution Ration = 512/(5401-512)=0.105\n//\n// Typical Distribution Ratio about 25% of Ideal one, still much higher than RDR\n\njschardet.EUCTW_TYPICAL_DISTRIBUTION_RATIO = 0.75;\n\n// Char to FreqOrder table ,\njschardet.EUCTW_TABLE_SIZE = 8102;\n\njschardet.EUCTWCharToFreqOrder = [\n   1,1800,1506, 255,1431, 198,   9,  82,   6,7310, 177, 202,3615,1256,2808, 110, // 2742\n3735,  33,3241, 261,  76,  44,2113,  16,2931,2184,1176, 659,3868,  26,3404,2643, // 2758\n1198,3869,3313,4060, 410,2211, 302, 590, 361,1963,   8, 204,  58,4296,7311,1931, // 2774\n  63,7312,7313, 317,1614,  75, 222, 159,4061,2412,1480,7314,3500,3068, 224,2809, // 2790\n3616,   3,  10,3870,1471,  29,2774,1135,2852,1939, 873, 130,3242,1123, 312,7315, // 2806\n4297,2051, 507, 252, 682,7316, 142,1914, 124, 206,2932,  34,3501,3173,  64, 604, // 2822\n7317,2494,1976,1977, 155,1990, 645, 641,1606,7318,3405, 337,  72, 406,7319,  80, // 2838\n 630, 238,3174,1509, 263, 939,1092,2644, 756,1440,1094,3406, 449,  69,2969, 591, // 2854\n 179,2095, 471, 115,2034,1843,  60,  50,2970, 134, 806,1868, 734,2035,3407, 180, // 2870\n 995,1607, 156, 537,2893, 688,7320, 319,1305, 779,2144, 514,2374, 298,4298, 359, // 2886\n2495,  90,2707,1338, 663,  11, 906,1099,2545,  20,2436, 182, 532,1716,7321, 732, // 2902\n1376,4062,1311,1420,3175,  25,2312,1056, 113, 399, 382,1949, 242,3408,2467, 529, // 2918\n3243, 475,1447,3617,7322, 117,  21, 656, 810,1297,2295,2329,3502,7323, 126,4063, // 2934\n 706, 456, 150, 613,4299,  71,1118,2036,4064, 145,3069,  85, 835, 486,2114,1246, // 2950\n1426, 428, 727,1285,1015, 800, 106, 623, 303,1281,7324,2127,2354, 347,3736, 221, // 2966\n3503,3110,7325,1955,1153,4065,  83, 296,1199,3070, 192, 624,  93,7326, 822,1897, // 2982\n2810,3111, 795,2064, 991,1554,1542,1592,  27,  43,2853, 859, 139,1456, 860,4300, // 2998\n 437, 712,3871, 164,2392,3112, 695, 211,3017,2096, 195,3872,1608,3504,3505,3618, // 3014\n3873, 234, 811,2971,2097,3874,2229,1441,3506,1615,2375, 668,2076,1638, 305, 228, // 3030\n1664,4301, 467, 415,7327, 262,2098,1593, 239, 108, 300, 200,1033, 512,1247,2077, // 3046\n7328,7329,2173,3176,3619,2673, 593, 845,1062,3244,  88,1723,2037,3875,1950, 212, // 3062\n 266, 152, 149, 468,1898,4066,4302,  77, 187,7330,3018,  37,   5,2972,7331,3876, // 3078\n7332,7333,  39,2517,4303,2894,3177,2078,  55, 148,  74,4304, 545, 483,1474,1029, // 3094\n1665, 217,1869,1531,3113,1104,2645,4067,  24, 172,3507, 900,3877,3508,3509,4305, // 3110\n  32,1408,2811,1312, 329, 487,2355,2247,2708, 784,2674,   4,3019,3314,1427,1788, // 3126\n 188, 109, 499,7334,3620,1717,1789, 888,1217,3020,4306,7335,3510,7336,3315,1520, // 3142\n3621,3878, 196,1034, 775,7337,7338, 929,1815, 249, 439,  38,7339,1063,7340, 794, // 3158\n3879,1435,2296,  46, 178,3245,2065,7341,2376,7342, 214,1709,4307, 804,  35, 707, // 3174\n 324,3622,1601,2546, 140, 459,4068,7343,7344,1365, 839, 272, 978,2257,2572,3409, // 3190\n2128,1363,3623,1423, 697, 100,3071,  48,  70,1231, 495,3114,2193,7345,1294,7346, // 3206\n2079, 462, 586,1042,3246, 853, 256, 988, 185,2377,3410,1698, 434,1084,7347,3411, // 3222\n 314,2615,2775,4308,2330,2331, 569,2280, 637,1816,2518, 757,1162,1878,1616,3412, // 3238\n 287,1577,2115, 768,4309,1671,2854,3511,2519,1321,3737, 909,2413,7348,4069, 933, // 3254\n3738,7349,2052,2356,1222,4310, 765,2414,1322, 786,4311,7350,1919,1462,1677,2895, // 3270\n1699,7351,4312,1424,2437,3115,3624,2590,3316,1774,1940,3413,3880,4070, 309,1369, // 3286\n1130,2812, 364,2230,1653,1299,3881,3512,3882,3883,2646, 525,1085,3021, 902,2000, // 3302\n1475, 964,4313, 421,1844,1415,1057,2281, 940,1364,3116, 376,4314,4315,1381,   7, // 3318\n2520, 983,2378, 336,1710,2675,1845, 321,3414, 559,1131,3022,2742,1808,1132,1313, // 3334\n 265,1481,1857,7352, 352,1203,2813,3247, 167,1089, 420,2814, 776, 792,1724,3513, // 3350\n4071,2438,3248,7353,4072,7354, 446, 229, 333,2743, 901,3739,1200,1557,4316,2647, // 3366\n1920, 395,2744,2676,3740,4073,1835, 125, 916,3178,2616,4317,7355,7356,3741,7357, // 3382\n7358,7359,4318,3117,3625,1133,2547,1757,3415,1510,2313,1409,3514,7360,2145, 438, // 3398\n2591,2896,2379,3317,1068, 958,3023, 461, 311,2855,2677,4074,1915,3179,4075,1978, // 3414\n 383, 750,2745,2617,4076, 274, 539, 385,1278,1442,7361,1154,1964, 384, 561, 210, // 3430\n  98,1295,2548,3515,7362,1711,2415,1482,3416,3884,2897,1257, 129,7363,3742, 642, // 3446\n 523,2776,2777,2648,7364, 141,2231,1333,  68, 176, 441, 876, 907,4077, 603,2592, // 3462\n 710, 171,3417, 404, 549,  18,3118,2393,1410,3626,1666,7365,3516,4319,2898,4320, // 3478\n7366,2973, 368,7367, 146, 366,  99, 871,3627,1543, 748, 807,1586,1185,  22,2258, // 3494\n 379,3743,3180,7368,3181, 505,1941,2618,1991,1382,2314,7369, 380,2357, 218, 702, // 3510\n1817,1248,3418,3024,3517,3318,3249,7370,2974,3628, 930,3250,3744,7371,  59,7372, // 3526\n 585, 601,4078, 497,3419,1112,1314,4321,1801,7373,1223,1472,2174,7374, 749,1836, // 3542\n 690,1899,3745,1772,3885,1476, 429,1043,1790,2232,2116, 917,4079, 447,1086,1629, // 3558\n7375, 556,7376,7377,2020,1654, 844,1090, 105, 550, 966,1758,2815,1008,1782, 686, // 3574\n1095,7378,2282, 793,1602,7379,3518,2593,4322,4080,2933,2297,4323,3746, 980,2496, // 3590\n 544, 353, 527,4324, 908,2678,2899,7380, 381,2619,1942,1348,7381,1341,1252, 560, // 3606\n3072,7382,3420,2856,7383,2053, 973, 886,2080, 143,4325,7384,7385, 157,3886, 496, // 3622\n4081,  57, 840, 540,2038,4326,4327,3421,2117,1445, 970,2259,1748,1965,2081,4082, // 3638\n3119,1234,1775,3251,2816,3629, 773,1206,2129,1066,2039,1326,3887,1738,1725,4083, // 3654\n 279,3120,  51,1544,2594, 423,1578,2130,2066, 173,4328,1879,7386,7387,1583, 264, // 3670\n 610,3630,4329,2439, 280, 154,7388,7389,7390,1739, 338,1282,3073, 693,2857,1411, // 3686\n1074,3747,2440,7391,4330,7392,7393,1240, 952,2394,7394,2900,1538,2679, 685,1483, // 3702\n4084,2468,1436, 953,4085,2054,4331, 671,2395,  79,4086,2441,3252, 608, 567,2680, // 3718\n3422,4087,4088,1691, 393,1261,1791,2396,7395,4332,7396,7397,7398,7399,1383,1672, // 3734\n3748,3182,1464, 522,1119, 661,1150, 216, 675,4333,3888,1432,3519, 609,4334,2681, // 3750\n2397,7400,7401,7402,4089,3025,   0,7403,2469, 315, 231,2442, 301,3319,4335,2380, // 3766\n7404, 233,4090,3631,1818,4336,4337,7405,  96,1776,1315,2082,7406, 257,7407,1809, // 3782\n3632,2709,1139,1819,4091,2021,1124,2163,2778,1777,2649,7408,3074, 363,1655,3183, // 3798\n7409,2975,7410,7411,7412,3889,1567,3890, 718, 103,3184, 849,1443, 341,3320,2934, // 3814\n1484,7413,1712, 127,  67, 339,4092,2398, 679,1412, 821,7414,7415, 834, 738, 351, // 3830\n2976,2146, 846, 235,1497,1880, 418,1992,3749,2710, 186,1100,2147,2746,3520,1545, // 3846\n1355,2935,2858,1377, 583,3891,4093,2573,2977,7416,1298,3633,1078,2549,3634,2358, // 3862\n  78,3750,3751, 267,1289,2099,2001,1594,4094, 348, 369,1274,2194,2175,1837,4338, // 3878\n1820,2817,3635,2747,2283,2002,4339,2936,2748, 144,3321, 882,4340,3892,2749,3423, // 3894\n4341,2901,7417,4095,1726, 320,7418,3893,3026, 788,2978,7419,2818,1773,1327,2859, // 3910\n3894,2819,7420,1306,4342,2003,1700,3752,3521,2359,2650, 787,2022, 506, 824,3636, // 3926\n 534, 323,4343,1044,3322,2023,1900, 946,3424,7421,1778,1500,1678,7422,1881,4344, // 3942\n 165, 243,4345,3637,2521, 123, 683,4096, 764,4346,  36,3895,1792, 589,2902, 816, // 3958\n 626,1667,3027,2233,1639,1555,1622,3753,3896,7423,3897,2860,1370,1228,1932, 891, // 3974\n2083,2903, 304,4097,7424, 292,2979,2711,3522, 691,2100,4098,1115,4347, 118, 662, // 3990\n7425, 611,1156, 854,2381,1316,2861,   2, 386, 515,2904,7426,7427,3253, 868,2234, // 4006\n1486, 855,2651, 785,2212,3028,7428,1040,3185,3523,7429,3121, 448,7430,1525,7431, // 4022\n2164,4348,7432,3754,7433,4099,2820,3524,3122, 503, 818,3898,3123,1568, 814, 676, // 4038\n1444, 306,1749,7434,3755,1416,1030, 197,1428, 805,2821,1501,4349,7435,7436,7437, // 4054\n1993,7438,4350,7439,7440,2195,  13,2779,3638,2980,3124,1229,1916,7441,3756,2131, // 4070\n7442,4100,4351,2399,3525,7443,2213,1511,1727,1120,7444,7445, 646,3757,2443, 307, // 4086\n7446,7447,1595,3186,7448,7449,7450,3639,1113,1356,3899,1465,2522,2523,7451, 519, // 4102\n7452, 128,2132,  92,2284,1979,7453,3900,1512, 342,3125,2196,7454,2780,2214,1980, // 4118\n3323,7455, 290,1656,1317, 789, 827,2360,7456,3758,4352, 562, 581,3901,7457, 401, // 4134\n4353,2248,  94,4354,1399,2781,7458,1463,2024,4355,3187,1943,7459, 828,1105,4101, // 4150\n1262,1394,7460,4102, 605,4356,7461,1783,2862,7462,2822, 819,2101, 578,2197,2937, // 4166\n7463,1502, 436,3254,4103,3255,2823,3902,2905,3425,3426,7464,2712,2315,7465,7466, // 4182\n2332,2067,  23,4357, 193, 826,3759,2102, 699,1630,4104,3075, 390,1793,1064,3526, // 4198\n7467,1579,3076,3077,1400,7468,4105,1838,1640,2863,7469,4358,4359, 137,4106, 598, // 4214\n3078,1966, 780, 104, 974,2938,7470, 278, 899, 253, 402, 572, 504, 493,1339,7471, // 4230\n3903,1275,4360,2574,2550,7472,3640,3029,3079,2249, 565,1334,2713, 863,  41,7473, // 4246\n7474,4361,7475,1657,2333,  19, 463,2750,4107, 606,7476,2981,3256,1087,2084,1323, // 4262\n2652,2982,7477,1631,1623,1750,4108,2682,7478,2864, 791,2714,2653,2334, 232,2416, // 4278\n7479,2983,1498,7480,2654,2620, 755,1366,3641,3257,3126,2025,1609, 119,1917,3427, // 4294\n 862,1026,4109,7481,3904,3760,4362,3905,4363,2260,1951,2470,7482,1125, 817,4110, // 4310\n4111,3906,1513,1766,2040,1487,4112,3030,3258,2824,3761,3127,7483,7484,1507,7485, // 4326\n2683, 733,  40,1632,1106,2865, 345,4113, 841,2524, 230,4364,2984,1846,3259,3428, // 4342\n7486,1263, 986,3429,7487, 735, 879, 254,1137, 857, 622,1300,1180,1388,1562,3907, // 4358\n3908,2939, 967,2751,2655,1349, 592,2133,1692,3324,2985,1994,4114,1679,3909,1901, // 4374\n2185,7488, 739,3642,2715,1296,1290,7489,4115,2198,2199,1921,1563,2595,2551,1870, // 4390\n2752,2986,7490, 435,7491, 343,1108, 596,  17,1751,4365,2235,3430,3643,7492,4366, // 4406\n 294,3527,2940,1693, 477, 979, 281,2041,3528, 643,2042,3644,2621,2782,2261,1031, // 4422\n2335,2134,2298,3529,4367, 367,1249,2552,7493,3530,7494,4368,1283,3325,2004, 240, // 4438\n1762,3326,4369,4370, 836,1069,3128, 474,7495,2148,2525, 268,3531,7496,3188,1521, // 4454\n1284,7497,1658,1546,4116,7498,3532,3533,7499,4117,3327,2684,1685,4118, 961,1673, // 4470\n2622, 190,2005,2200,3762,4371,4372,7500, 570,2497,3645,1490,7501,4373,2623,3260, // 4486\n1956,4374, 584,1514, 396,1045,1944,7502,4375,1967,2444,7503,7504,4376,3910, 619, // 4502\n7505,3129,3261, 215,2006,2783,2553,3189,4377,3190,4378, 763,4119,3763,4379,7506, // 4518\n7507,1957,1767,2941,3328,3646,1174, 452,1477,4380,3329,3130,7508,2825,1253,2382, // 4534\n2186,1091,2285,4120, 492,7509, 638,1169,1824,2135,1752,3911, 648, 926,1021,1324, // 4550\n4381, 520,4382, 997, 847,1007, 892,4383,3764,2262,1871,3647,7510,2400,1784,4384, // 4566\n1952,2942,3080,3191,1728,4121,2043,3648,4385,2007,1701,3131,1551,  30,2263,4122, // 4582\n7511,2026,4386,3534,7512, 501,7513,4123, 594,3431,2165,1821,3535,3432,3536,3192, // 4598\n 829,2826,4124,7514,1680,3132,1225,4125,7515,3262,4387,4126,3133,2336,7516,4388, // 4614\n4127,7517,3912,3913,7518,1847,2383,2596,3330,7519,4389, 374,3914, 652,4128,4129, // 4630\n 375,1140, 798,7520,7521,7522,2361,4390,2264, 546,1659, 138,3031,2445,4391,7523, // 4646\n2250, 612,1848, 910, 796,3765,1740,1371, 825,3766,3767,7524,2906,2554,7525, 692, // 4662\n 444,3032,2624, 801,4392,4130,7526,1491, 244,1053,3033,4131,4132, 340,7527,3915, // 4678\n1041,2987, 293,1168,  87,1357,7528,1539, 959,7529,2236, 721, 694,4133,3768, 219, // 4694\n1478, 644,1417,3331,2656,1413,1401,1335,1389,3916,7530,7531,2988,2362,3134,1825, // 4710\n 730,1515, 184,2827,  66,4393,7532,1660,2943, 246,3332, 378,1457, 226,3433, 975, // 4726\n3917,2944,1264,3537, 674, 696,7533, 163,7534,1141,2417,2166, 713,3538,3333,4394, // 4742\n3918,7535,7536,1186,  15,7537,1079,1070,7538,1522,3193,3539, 276,1050,2716, 758, // 4758\n1126, 653,2945,3263,7539,2337, 889,3540,3919,3081,2989, 903,1250,4395,3920,3434, // 4774\n3541,1342,1681,1718, 766,3264, 286,  89,2946,3649,7540,1713,7541,2597,3334,2990, // 4790\n7542,2947,2215,3194,2866,7543,4396,2498,2526, 181, 387,1075,3921, 731,2187,3335, // 4806\n7544,3265, 310, 313,3435,2299, 770,4134,  54,3034, 189,4397,3082,3769,3922,7545, // 4822\n1230,1617,1849, 355,3542,4135,4398,3336, 111,4136,3650,1350,3135,3436,3035,4137, // 4838\n2149,3266,3543,7546,2784,3923,3924,2991, 722,2008,7547,1071, 247,1207,2338,2471, // 4854\n1378,4399,2009, 864,1437,1214,4400, 373,3770,1142,2216, 667,4401, 442,2753,2555, // 4870\n3771,3925,1968,4138,3267,1839, 837, 170,1107, 934,1336,1882,7548,7549,2118,4139, // 4886\n2828, 743,1569,7550,4402,4140, 582,2384,1418,3437,7551,1802,7552, 357,1395,1729, // 4902\n3651,3268,2418,1564,2237,7553,3083,3772,1633,4403,1114,2085,4141,1532,7554, 482, // 4918\n2446,4404,7555,7556,1492, 833,1466,7557,2717,3544,1641,2829,7558,1526,1272,3652, // 4934\n4142,1686,1794, 416,2556,1902,1953,1803,7559,3773,2785,3774,1159,2316,7560,2867, // 4950\n4405,1610,1584,3036,2419,2754, 443,3269,1163,3136,7561,7562,3926,7563,4143,2499, // 4966\n3037,4406,3927,3137,2103,1647,3545,2010,1872,4144,7564,4145, 431,3438,7565, 250, // 4982\n  97,  81,4146,7566,1648,1850,1558, 160, 848,7567, 866, 740,1694,7568,2201,2830, // 4998\n3195,4147,4407,3653,1687, 950,2472, 426, 469,3196,3654,3655,3928,7569,7570,1188, // 5014\n 424,1995, 861,3546,4148,3775,2202,2685, 168,1235,3547,4149,7571,2086,1674,4408, // 5030\n3337,3270, 220,2557,1009,7572,3776, 670,2992, 332,1208, 717,7573,7574,3548,2447, // 5046\n3929,3338,7575, 513,7576,1209,2868,3339,3138,4409,1080,7577,7578,7579,7580,2527, // 5062\n3656,3549, 815,1587,3930,3931,7581,3550,3439,3777,1254,4410,1328,3038,1390,3932, // 5078\n1741,3933,3778,3934,7582, 236,3779,2448,3271,7583,7584,3657,3780,1273,3781,4411, // 5094\n7585, 308,7586,4412, 245,4413,1851,2473,1307,2575, 430, 715,2136,2449,7587, 270, // 5110\n 199,2869,3935,7588,3551,2718,1753, 761,1754, 725,1661,1840,4414,3440,3658,7589, // 5126\n7590, 587,  14,3272, 227,2598, 326, 480,2265, 943,2755,3552, 291, 650,1883,7591, // 5142\n1702,1226, 102,1547,  62,3441, 904,4415,3442,1164,4150,7592,7593,1224,1548,2756, // 5158\n 391, 498,1493,7594,1386,1419,7595,2055,1177,4416, 813, 880,1081,2363, 566,1145, // 5174\n4417,2286,1001,1035,2558,2599,2238, 394,1286,7596,7597,2068,7598,  86,1494,1730, // 5190\n3936, 491,1588, 745, 897,2948, 843,3340,3937,2757,2870,3273,1768, 998,2217,2069, // 5206\n 397,1826,1195,1969,3659,2993,3341, 284,7599,3782,2500,2137,2119,1903,7600,3938, // 5222\n2150,3939,4151,1036,3443,1904, 114,2559,4152, 209,1527,7601,7602,2949,2831,2625, // 5238\n2385,2719,3139, 812,2560,7603,3274,7604,1559, 737,1884,3660,1210, 885,  28,2686, // 5254\n3553,3783,7605,4153,1004,1779,4418,7606, 346,1981,2218,2687,4419,3784,1742, 797, // 5270\n1642,3940,1933,1072,1384,2151, 896,3941,3275,3661,3197,2871,3554,7607,2561,1958, // 5286\n4420,2450,1785,7608,7609,7610,3942,4154,1005,1308,3662,4155,2720,4421,4422,1528, // 5302\n2600, 161,1178,4156,1982, 987,4423,1101,4157, 631,3943,1157,3198,2420,1343,1241, // 5318\n1016,2239,2562, 372, 877,2339,2501,1160, 555,1934, 911,3944,7611, 466,1170, 169, // 5334\n1051,2907,2688,3663,2474,2994,1182,2011,2563,1251,2626,7612, 992,2340,3444,1540, // 5350\n2721,1201,2070,2401,1996,2475,7613,4424, 528,1922,2188,1503,1873,1570,2364,3342, // 5366\n3276,7614, 557,1073,7615,1827,3445,2087,2266,3140,3039,3084, 767,3085,2786,4425, // 5382\n1006,4158,4426,2341,1267,2176,3664,3199, 778,3945,3200,2722,1597,2657,7616,4427, // 5398\n7617,3446,7618,7619,7620,3277,2689,1433,3278, 131,  95,1504,3946, 723,4159,3141, // 5414\n1841,3555,2758,2189,3947,2027,2104,3665,7621,2995,3948,1218,7622,3343,3201,3949, // 5430\n4160,2576, 248,1634,3785, 912,7623,2832,3666,3040,3786, 654,  53,7624,2996,7625, // 5446\n1688,4428, 777,3447,1032,3950,1425,7626, 191, 820,2120,2833, 971,4429, 931,3202, // 5462\n 135, 664, 783,3787,1997, 772,2908,1935,3951,3788,4430,2909,3203, 282,2723, 640, // 5478\n1372,3448,1127, 922, 325,3344,7627,7628, 711,2044,7629,7630,3952,2219,2787,1936, // 5494\n3953,3345,2220,2251,3789,2300,7631,4431,3790,1258,3279,3954,3204,2138,2950,3955, // 5510\n3956,7632,2221, 258,3205,4432, 101,1227,7633,3280,1755,7634,1391,3281,7635,2910, // 5526\n2056, 893,7636,7637,7638,1402,4161,2342,7639,7640,3206,3556,7641,7642, 878,1325, // 5542\n1780,2788,4433, 259,1385,2577, 744,1183,2267,4434,7643,3957,2502,7644, 684,1024, // 5558\n4162,7645, 472,3557,3449,1165,3282,3958,3959, 322,2152, 881, 455,1695,1152,1340, // 5574\n 660, 554,2153,4435,1058,4436,4163, 830,1065,3346,3960,4437,1923,7646,1703,1918, // 5590\n7647, 932,2268, 122,7648,4438, 947, 677,7649,3791,2627, 297,1905,1924,2269,4439, // 5606\n2317,3283,7650,7651,4164,7652,4165,  84,4166, 112, 989,7653, 547,1059,3961, 701, // 5622\n3558,1019,7654,4167,7655,3450, 942, 639, 457,2301,2451, 993,2951, 407, 851, 494, // 5638\n4440,3347, 927,7656,1237,7657,2421,3348, 573,4168, 680, 921,2911,1279,1874, 285, // 5654\n 790,1448,1983, 719,2167,7658,7659,4441,3962,3963,1649,7660,1541, 563,7661,1077, // 5670\n7662,3349,3041,3451, 511,2997,3964,3965,3667,3966,1268,2564,3350,3207,4442,4443, // 5686\n7663, 535,1048,1276,1189,2912,2028,3142,1438,1373,2834,2952,1134,2012,7664,4169, // 5702\n1238,2578,3086,1259,7665, 700,7666,2953,3143,3668,4170,7667,4171,1146,1875,1906, // 5718\n4444,2601,3967, 781,2422, 132,1589, 203, 147, 273,2789,2402, 898,1786,2154,3968, // 5734\n3969,7668,3792,2790,7669,7670,4445,4446,7671,3208,7672,1635,3793, 965,7673,1804, // 5750\n2690,1516,3559,1121,1082,1329,3284,3970,1449,3794,  65,1128,2835,2913,2759,1590, // 5766\n3795,7674,7675,  12,2658,  45, 976,2579,3144,4447, 517,2528,1013,1037,3209,7676, // 5782\n3796,2836,7677,3797,7678,3452,7679,2602, 614,1998,2318,3798,3087,2724,2628,7680, // 5798\n2580,4172, 599,1269,7681,1810,3669,7682,2691,3088, 759,1060, 489,1805,3351,3285, // 5814\n1358,7683,7684,2386,1387,1215,2629,2252, 490,7685,7686,4173,1759,2387,2343,7687, // 5830\n4448,3799,1907,3971,2630,1806,3210,4449,3453,3286,2760,2344, 874,7688,7689,3454, // 5846\n3670,1858,  91,2914,3671,3042,3800,4450,7690,3145,3972,2659,7691,3455,1202,1403, // 5862\n3801,2954,2529,1517,2503,4451,3456,2504,7692,4452,7693,2692,1885,1495,1731,3973, // 5878\n2365,4453,7694,2029,7695,7696,3974,2693,1216, 237,2581,4174,2319,3975,3802,4454, // 5894\n4455,2694,3560,3457, 445,4456,7697,7698,7699,7700,2761,  61,3976,3672,1822,3977, // 5910\n7701, 687,2045, 935, 925, 405,2660, 703,1096,1859,2725,4457,3978,1876,1367,2695, // 5926\n3352, 918,2105,1781,2476, 334,3287,1611,1093,4458, 564,3146,3458,3673,3353, 945, // 5942\n2631,2057,4459,7702,1925, 872,4175,7703,3459,2696,3089, 349,4176,3674,3979,4460, // 5958\n3803,4177,3675,2155,3980,4461,4462,4178,4463,2403,2046, 782,3981, 400, 251,4179, // 5974\n1624,7704,7705, 277,3676, 299,1265, 476,1191,3804,2121,4180,4181,1109, 205,7706, // 5990\n2582,1000,2156,3561,1860,7707,7708,7709,4464,7710,4465,2565, 107,2477,2157,3982, // 6006\n3460,3147,7711,1533, 541,1301, 158, 753,4182,2872,3562,7712,1696, 370,1088,4183, // 6022\n4466,3563, 579, 327, 440, 162,2240, 269,1937,1374,3461, 968,3043,  56,1396,3090, // 6038\n2106,3288,3354,7713,1926,2158,4467,2998,7714,3564,7715,7716,3677,4468,2478,7717, // 6054\n2791,7718,1650,4469,7719,2603,7720,7721,3983,2661,3355,1149,3356,3984,3805,3985, // 6070\n7722,1076,  49,7723, 951,3211,3289,3290, 450,2837, 920,7724,1811,2792,2366,4184, // 6086\n1908,1138,2367,3806,3462,7725,3212,4470,1909,1147,1518,2423,4471,3807,7726,4472, // 6102\n2388,2604, 260,1795,3213,7727,7728,3808,3291, 708,7729,3565,1704,7730,3566,1351, // 6118\n1618,3357,2999,1886, 944,4185,3358,4186,3044,3359,4187,7731,3678, 422, 413,1714, // 6134\n3292, 500,2058,2345,4188,2479,7732,1344,1910, 954,7733,1668,7734,7735,3986,2404, // 6150\n4189,3567,3809,4190,7736,2302,1318,2505,3091, 133,3092,2873,4473, 629,  31,2838, // 6166\n2697,3810,4474, 850, 949,4475,3987,2955,1732,2088,4191,1496,1852,7737,3988, 620, // 6182\n3214, 981,1242,3679,3360,1619,3680,1643,3293,2139,2452,1970,1719,3463,2168,7738, // 6198\n3215,7739,7740,3361,1828,7741,1277,4476,1565,2047,7742,1636,3568,3093,7743, 869, // 6214\n2839, 655,3811,3812,3094,3989,3000,3813,1310,3569,4477,7744,7745,7746,1733, 558, // 6230\n4478,3681, 335,1549,3045,1756,4192,3682,1945,3464,1829,1291,1192, 470,2726,2107, // 6246\n2793, 913,1054,3990,7747,1027,7748,3046,3991,4479, 982,2662,3362,3148,3465,3216, // 6262\n3217,1946,2794,7749, 571,4480,7750,1830,7751,3570,2583,1523,2424,7752,2089, 984, // 6278\n4481,3683,1959,7753,3684, 852, 923,2795,3466,3685, 969,1519, 999,2048,2320,1705, // 6294\n7754,3095, 615,1662, 151, 597,3992,2405,2321,1049, 275,4482,3686,4193, 568,3687, // 6310\n3571,2480,4194,3688,7755,2425,2270, 409,3218,7756,1566,2874,3467,1002, 769,2840, // 6326\n 194,2090,3149,3689,2222,3294,4195, 628,1505,7757,7758,1763,2177,3001,3993, 521, // 6342\n1161,2584,1787,2203,2406,4483,3994,1625,4196,4197, 412,  42,3096, 464,7759,2632, // 6358\n4484,3363,1760,1571,2875,3468,2530,1219,2204,3814,2633,2140,2368,4485,4486,3295, // 6374\n1651,3364,3572,7760,7761,3573,2481,3469,7762,3690,7763,7764,2271,2091, 460,7765, // 6390\n4487,7766,3002, 962, 588,3574, 289,3219,2634,1116,  52,7767,3047,1796,7768,7769, // 6406\n7770,1467,7771,1598,1143,3691,4198,1984,1734,1067,4488,1280,3365, 465,4489,1572, // 6422\n 510,7772,1927,2241,1812,1644,3575,7773,4490,3692,7774,7775,2663,1573,1534,7776, // 6438\n7777,4199, 536,1807,1761,3470,3815,3150,2635,7778,7779,7780,4491,3471,2915,1911, // 6454\n2796,7781,3296,1122, 377,3220,7782, 360,7783,7784,4200,1529, 551,7785,2059,3693, // 6470\n1769,2426,7786,2916,4201,3297,3097,2322,2108,2030,4492,1404, 136,1468,1479, 672, // 6486\n1171,3221,2303, 271,3151,7787,2762,7788,2049, 678,2727, 865,1947,4493,7789,2013, // 6502\n3995,2956,7790,2728,2223,1397,3048,3694,4494,4495,1735,2917,3366,3576,7791,3816, // 6518\n 509,2841,2453,2876,3817,7792,7793,3152,3153,4496,4202,2531,4497,2304,1166,1010, // 6534\n 552, 681,1887,7794,7795,2957,2958,3996,1287,1596,1861,3154, 358, 453, 736, 175, // 6550\n 478,1117, 905,1167,1097,7796,1853,1530,7797,1706,7798,2178,3472,2287,3695,3473, // 6566\n3577,4203,2092,4204,7799,3367,1193,2482,4205,1458,2190,2205,1862,1888,1421,3298, // 6582\n2918,3049,2179,3474, 595,2122,7800,3997,7801,7802,4206,1707,2636, 223,3696,1359, // 6598\n 751,3098, 183,3475,7803,2797,3003, 419,2369, 633, 704,3818,2389, 241,7804,7805, // 6614\n7806, 838,3004,3697,2272,2763,2454,3819,1938,2050,3998,1309,3099,2242,1181,7807, // 6630\n1136,2206,3820,2370,1446,4207,2305,4498,7808,7809,4208,1055,2605, 484,3698,7810, // 6646\n3999, 625,4209,2273,3368,1499,4210,4000,7811,4001,4211,3222,2274,2275,3476,7812, // 6662\n7813,2764, 808,2606,3699,3369,4002,4212,3100,2532, 526,3370,3821,4213, 955,7814, // 6678\n1620,4214,2637,2427,7815,1429,3700,1669,1831, 994, 928,7816,3578,1260,7817,7818, // 6694\n7819,1948,2288, 741,2919,1626,4215,2729,2455, 867,1184, 362,3371,1392,7820,7821, // 6710\n4003,4216,1770,1736,3223,2920,4499,4500,1928,2698,1459,1158,7822,3050,3372,2877, // 6726\n1292,1929,2506,2842,3701,1985,1187,2071,2014,2607,4217,7823,2566,2507,2169,3702, // 6742\n2483,3299,7824,3703,4501,7825,7826, 666,1003,3005,1022,3579,4218,7827,4502,1813, // 6758\n2253, 574,3822,1603, 295,1535, 705,3823,4219, 283, 858, 417,7828,7829,3224,4503, // 6774\n4504,3051,1220,1889,1046,2276,2456,4004,1393,1599, 689,2567, 388,4220,7830,2484, // 6790\n 802,7831,2798,3824,2060,1405,2254,7832,4505,3825,2109,1052,1345,3225,1585,7833, // 6806\n 809,7834,7835,7836, 575,2730,3477, 956,1552,1469,1144,2323,7837,2324,1560,2457, // 6822\n3580,3226,4005, 616,2207,3155,2180,2289,7838,1832,7839,3478,4506,7840,1319,3704, // 6838\n3705,1211,3581,1023,3227,1293,2799,7841,7842,7843,3826, 607,2306,3827, 762,2878, // 6854\n1439,4221,1360,7844,1485,3052,7845,4507,1038,4222,1450,2061,2638,4223,1379,4508, // 6870\n2585,7846,7847,4224,1352,1414,2325,2921,1172,7848,7849,3828,3829,7850,1797,1451, // 6886\n7851,7852,7853,7854,2922,4006,4007,2485,2346, 411,4008,4009,3582,3300,3101,4509, // 6902\n1561,2664,1452,4010,1375,7855,7856,  47,2959, 316,7857,1406,1591,2923,3156,7858, // 6918\n1025,2141,3102,3157, 354,2731, 884,2224,4225,2407, 508,3706, 726,3583, 996,2428, // 6934\n3584, 729,7859, 392,2191,1453,4011,4510,3707,7860,7861,2458,3585,2608,1675,2800, // 6950\n 919,2347,2960,2348,1270,4511,4012,  73,7862,7863, 647,7864,3228,2843,2255,1550, // 6966\n1346,3006,7865,1332, 883,3479,7866,7867,7868,7869,3301,2765,7870,1212, 831,1347, // 6982\n4226,4512,2326,3830,1863,3053, 720,3831,4513,4514,3832,7871,4227,7872,7873,4515, // 6998\n7874,7875,1798,4516,3708,2609,4517,3586,1645,2371,7876,7877,2924, 669,2208,2665, // 7014\n2429,7878,2879,7879,7880,1028,3229,7881,4228,2408,7882,2256,1353,7883,7884,4518, // 7030\n3158, 518,7885,4013,7886,4229,1960,7887,2142,4230,7888,7889,3007,2349,2350,3833, // 7046\n 516,1833,1454,4014,2699,4231,4519,2225,2610,1971,1129,3587,7890,2766,7891,2961, // 7062\n1422, 577,1470,3008,1524,3373,7892,7893, 432,4232,3054,3480,7894,2586,1455,2508, // 7078\n2226,1972,1175,7895,1020,2732,4015,3481,4520,7896,2733,7897,1743,1361,3055,3482, // 7094\n2639,4016,4233,4521,2290, 895, 924,4234,2170, 331,2243,3056, 166,1627,3057,1098, // 7110\n7898,1232,2880,2227,3374,4522, 657, 403,1196,2372, 542,3709,3375,1600,4235,3483, // 7126\n7899,4523,2767,3230, 576, 530,1362,7900,4524,2533,2666,3710,4017,7901, 842,3834, // 7142\n7902,2801,2031,1014,4018, 213,2700,3376, 665, 621,4236,7903,3711,2925,2430,7904, // 7158\n2431,3302,3588,3377,7905,4237,2534,4238,4525,3589,1682,4239,3484,1380,7906, 724, // 7174\n2277, 600,1670,7907,1337,1233,4526,3103,2244,7908,1621,4527,7909, 651,4240,7910, // 7190\n1612,4241,2611,7911,2844,7912,2734,2307,3058,7913, 716,2459,3059, 174,1255,2701, // 7206\n4019,3590, 548,1320,1398, 728,4020,1574,7914,1890,1197,3060,4021,7915,3061,3062, // 7222\n3712,3591,3713, 747,7916, 635,4242,4528,7917,7918,7919,4243,7920,7921,4529,7922, // 7238\n3378,4530,2432, 451,7923,3714,2535,2072,4244,2735,4245,4022,7924,1764,4531,7925, // 7254\n4246, 350,7926,2278,2390,2486,7927,4247,4023,2245,1434,4024, 488,4532, 458,4248, // 7270\n4025,3715, 771,1330,2391,3835,2568,3159,2159,2409,1553,2667,3160,4249,7928,2487, // 7286\n2881,2612,1720,2702,4250,3379,4533,7929,2536,4251,7930,3231,4252,2768,7931,2015, // 7302\n2736,7932,1155,1017,3716,3836,7933,3303,2308, 201,1864,4253,1430,7934,4026,7935, // 7318\n7936,7937,7938,7939,4254,1604,7940, 414,1865, 371,2587,4534,4535,3485,2016,3104, // 7334\n4536,1708, 960,4255, 887, 389,2171,1536,1663,1721,7941,2228,4027,2351,2926,1580, // 7350\n7942,7943,7944,1744,7945,2537,4537,4538,7946,4539,7947,2073,7948,7949,3592,3380, // 7366\n2882,4256,7950,4257,2640,3381,2802, 673,2703,2460, 709,3486,4028,3593,4258,7951, // 7382\n1148, 502, 634,7952,7953,1204,4540,3594,1575,4541,2613,3717,7954,3718,3105, 948, // 7398\n3232, 121,1745,3837,1110,7955,4259,3063,2509,3009,4029,3719,1151,1771,3838,1488, // 7414\n4030,1986,7956,2433,3487,7957,7958,2093,7959,4260,3839,1213,1407,2803, 531,2737, // 7430\n2538,3233,1011,1537,7960,2769,4261,3106,1061,7961,3720,3721,1866,2883,7962,2017, // 7446\n 120,4262,4263,2062,3595,3234,2309,3840,2668,3382,1954,4542,7963,7964,3488,1047, // 7462\n2704,1266,7965,1368,4543,2845, 649,3383,3841,2539,2738,1102,2846,2669,7966,7967, // 7478\n1999,7968,1111,3596,2962,7969,2488,3842,3597,2804,1854,3384,3722,7970,7971,3385, // 7494\n2410,2884,3304,3235,3598,7972,2569,7973,3599,2805,4031,1460, 856,7974,3600,7975, // 7510\n2885,2963,7976,2886,3843,7977,4264, 632,2510, 875,3844,1697,3845,2291,7978,7979, // 7526\n4544,3010,1239, 580,4545,4265,7980, 914, 936,2074,1190,4032,1039,2123,7981,7982, // 7542\n7983,3386,1473,7984,1354,4266,3846,7985,2172,3064,4033, 915,3305,4267,4268,3306, // 7558\n1605,1834,7986,2739, 398,3601,4269,3847,4034, 328,1912,2847,4035,3848,1331,4270, // 7574\n3011, 937,4271,7987,3602,4036,4037,3387,2160,4546,3388, 524, 742, 538,3065,1012, // 7590\n7988,7989,3849,2461,7990, 658,1103, 225,3850,7991,7992,4547,7993,4548,7994,3236, // 7606\n1243,7995,4038, 963,2246,4549,7996,2705,3603,3161,7997,7998,2588,2327,7999,4550, // 7622\n8000,8001,8002,3489,3307, 957,3389,2540,2032,1930,2927,2462, 870,2018,3604,1746, // 7638\n2770,2771,2434,2463,8003,3851,8004,3723,3107,3724,3490,3390,3725,8005,1179,3066, // 7654\n8006,3162,2373,4272,3726,2541,3163,3108,2740,4039,8007,3391,1556,2542,2292, 977, // 7670\n2887,2033,4040,1205,3392,8008,1765,3393,3164,2124,1271,1689, 714,4551,3491,8009, // 7686\n2328,3852, 533,4273,3605,2181, 617,8010,2464,3308,3492,2310,8011,8012,3165,8013, // 7702\n8014,3853,1987, 618, 427,2641,3493,3394,8015,8016,1244,1690,8017,2806,4274,4552, // 7718\n8018,3494,8019,8020,2279,1576, 473,3606,4275,3395, 972,8021,3607,8022,3067,8023, // 7734\n8024,4553,4554,8025,3727,4041,4042,8026, 153,4555, 356,8027,1891,2888,4276,2143, // 7750\n 408, 803,2352,8028,3854,8029,4277,1646,2570,2511,4556,4557,3855,8030,3856,4278, // 7766\n8031,2411,3396, 752,8032,8033,1961,2964,8034, 746,3012,2465,8035,4279,3728, 698, // 7782\n4558,1892,4280,3608,2543,4559,3609,3857,8036,3166,3397,8037,1823,1302,4043,2706, // 7798\n3858,1973,4281,8038,4282,3167, 823,1303,1288,1236,2848,3495,4044,3398, 774,3859, // 7814\n8039,1581,4560,1304,2849,3860,4561,8040,2435,2161,1083,3237,4283,4045,4284, 344, // 7830\n1173, 288,2311, 454,1683,8041,8042,1461,4562,4046,2589,8043,8044,4563, 985, 894, // 7846\n8045,3399,3168,8046,1913,2928,3729,1988,8047,2110,1974,8048,4047,8049,2571,1194, // 7862\n 425,8050,4564,3169,1245,3730,4285,8051,8052,2850,8053, 636,4565,1855,3861, 760, // 7878\n1799,8054,4286,2209,1508,4566,4048,1893,1684,2293,8055,8056,8057,4287,4288,2210, // 7894\n 479,8058,8059, 832,8060,4049,2489,8061,2965,2490,3731, 990,3109, 627,1814,2642, // 7910\n4289,1582,4290,2125,2111,3496,4567,8062, 799,4291,3170,8063,4568,2112,1737,3013, // 7926\n1018, 543, 754,4292,3309,1676,4569,4570,4050,8064,1489,8065,3497,8066,2614,2889, // 7942\n4051,8067,8068,2966,8069,8070,8071,8072,3171,4571,4572,2182,1722,8073,3238,3239, // 7958\n1842,3610,1715, 481, 365,1975,1856,8074,8075,1962,2491,4573,8076,2126,3611,3240, // 7974\n 433,1894,2063,2075,8077, 602,2741,8078,8079,8080,8081,8082,3014,1628,3400,8083, // 7990\n3172,4574,4052,2890,4575,2512,8084,2544,2772,8085,8086,8087,3310,4576,2891,8088, // 8006\n4577,8089,2851,4578,4579,1221,2967,4053,2513,8090,8091,8092,1867,1989,8093,8094, // 8022\n8095,1895,8096,8097,4580,1896,4054, 318,8098,2094,4055,4293,8099,8100, 485,8101, // 8038\n 938,3862, 553,2670, 116,8102,3863,3612,8103,3498,2671,2773,3401,3311,2807,8104, // 8054\n3613,2929,4056,1747,2930,2968,8105,8106, 207,8107,8108,2672,4581,2514,8109,3015, // 8070\n 890,3614,3864,8110,1877,3732,3402,8111,2183,2353,3403,1652,8112,8113,8114, 941, // 8086\n2294, 208,3499,4057,2019, 330,4294,3865,2892,2492,3733,4295,8115,8116,8117,8118, // 8102\n//Everything below is of no interest for detection purpose\n2515,1613,4582,8119,3312,3866,2516,8120,4058,8121,1637,4059,2466,4583,3867,8122, // 8118\n2493,3016,3734,8123,8124,2192,8125,8126,2162,8127,8128,8129,8130,8131,8132,8133, // 8134\n8134,8135,8136,8137,8138,8139,8140,8141,8142,8143,8144,8145,8146,8147,8148,8149, // 8150\n8150,8151,8152,8153,8154,8155,8156,8157,8158,8159,8160,8161,8162,8163,8164,8165, // 8166\n8166,8167,8168,8169,8170,8171,8172,8173,8174,8175,8176,8177,8178,8179,8180,8181, // 8182\n8182,8183,8184,8185,8186,8187,8188,8189,8190,8191,8192,8193,8194,8195,8196,8197, // 8198\n8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8208,8209,8210,8211,8212,8213, // 8214\n8214,8215,8216,8217,8218,8219,8220,8221,8222,8223,8224,8225,8226,8227,8228,8229, // 8230\n8230,8231,8232,8233,8234,8235,8236,8237,8238,8239,8240,8241,8242,8243,8244,8245, // 8246\n8246,8247,8248,8249,8250,8251,8252,8253,8254,8255,8256,8257,8258,8259,8260,8261, // 8262\n8262,8263,8264,8265,8266,8267,8268,8269,8270,8271,8272,8273,8274,8275,8276,8277, // 8278\n8278,8279,8280,8281,8282,8283,8284,8285,8286,8287,8288,8289,8290,8291,8292,8293, // 8294\n8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,8304,8305,8306,8307,8308,8309, // 8310\n8310,8311,8312,8313,8314,8315,8316,8317,8318,8319,8320,8321,8322,8323,8324,8325, // 8326\n8326,8327,8328,8329,8330,8331,8332,8333,8334,8335,8336,8337,8338,8339,8340,8341, // 8342\n8342,8343,8344,8345,8346,8347,8348,8349,8350,8351,8352,8353,8354,8355,8356,8357, // 8358\n8358,8359,8360,8361,8362,8363,8364,8365,8366,8367,8368,8369,8370,8371,8372,8373, // 8374\n8374,8375,8376,8377,8378,8379,8380,8381,8382,8383,8384,8385,8386,8387,8388,8389, // 8390\n8390,8391,8392,8393,8394,8395,8396,8397,8398,8399,8400,8401,8402,8403,8404,8405, // 8406\n8406,8407,8408,8409,8410,8411,8412,8413,8414,8415,8416,8417,8418,8419,8420,8421, // 8422\n8422,8423,8424,8425,8426,8427,8428,8429,8430,8431,8432,8433,8434,8435,8436,8437, // 8438\n8438,8439,8440,8441,8442,8443,8444,8445,8446,8447,8448,8449,8450,8451,8452,8453, // 8454\n8454,8455,8456,8457,8458,8459,8460,8461,8462,8463,8464,8465,8466,8467,8468,8469, // 8470\n8470,8471,8472,8473,8474,8475,8476,8477,8478,8479,8480,8481,8482,8483,8484,8485, // 8486\n8486,8487,8488,8489,8490,8491,8492,8493,8494,8495,8496,8497,8498,8499,8500,8501, // 8502\n8502,8503,8504,8505,8506,8507,8508,8509,8510,8511,8512,8513,8514,8515,8516,8517, // 8518\n8518,8519,8520,8521,8522,8523,8524,8525,8526,8527,8528,8529,8530,8531,8532,8533, // 8534\n8534,8535,8536,8537,8538,8539,8540,8541,8542,8543,8544,8545,8546,8547,8548,8549, // 8550\n8550,8551,8552,8553,8554,8555,8556,8557,8558,8559,8560,8561,8562,8563,8564,8565, // 8566\n8566,8567,8568,8569,8570,8571,8572,8573,8574,8575,8576,8577,8578,8579,8580,8581, // 8582\n8582,8583,8584,8585,8586,8587,8588,8589,8590,8591,8592,8593,8594,8595,8596,8597, // 8598\n8598,8599,8600,8601,8602,8603,8604,8605,8606,8607,8608,8609,8610,8611,8612,8613, // 8614\n8614,8615,8616,8617,8618,8619,8620,8621,8622,8623,8624,8625,8626,8627,8628,8629, // 8630\n8630,8631,8632,8633,8634,8635,8636,8637,8638,8639,8640,8641,8642,8643,8644,8645, // 8646\n8646,8647,8648,8649,8650,8651,8652,8653,8654,8655,8656,8657,8658,8659,8660,8661, // 8662\n8662,8663,8664,8665,8666,8667,8668,8669,8670,8671,8672,8673,8674,8675,8676,8677, // 8678\n8678,8679,8680,8681,8682,8683,8684,8685,8686,8687,8688,8689,8690,8691,8692,8693, // 8694\n8694,8695,8696,8697,8698,8699,8700,8701,8702,8703,8704,8705,8706,8707,8708,8709, // 8710\n8710,8711,8712,8713,8714,8715,8716,8717,8718,8719,8720,8721,8722,8723,8724,8725, // 8726\n8726,8727,8728,8729,8730,8731,8732,8733,8734,8735,8736,8737,8738,8739,8740,8741\n]; // 8742\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.CharDistributionAnalysis = function() {\n    var ENOUGH_DATA_THRESHOLD = 1024;\n    var SURE_YES = 0.99;\n    var SURE_NO = 0.01;\n    var MINIMUM_DATA_THRESHOLD = 3;\n\n    var self = this;\n\n    function init() {\n        self._mCharToFreqOrder = null; // Mapping table to get frequency order from char order (get from GetOrder())\n        self._mTableSize = null; // Size of above table\n        self._mTypicalDistributionRatio = null; // This is a constant value which varies from language to language, used in calculating confidence.  See http://www.mozilla.org/projects/intl/UniversalCharsetDetection.html for further detail.\n        self.reset();\n    }\n\n    /**\n     * reset analyser, clear any state\n     */\n    this.reset = function() {\n        this._mDone = false; // If this flag is set to constants.True, detection is done and conclusion has been made\n        this._mTotalChars = 0; // Total characters encountered\n        this._mFreqChars = 0; // The number of characters whose frequency order is less than 512\n    }\n\n    /**\n     * feed a character with known length\n     */\n    this.feed = function(aStr, aCharLen) {\n        if( aCharLen == 2 ) {\n            // we only care about 2-bytes character in our distribution analysis\n            var order = this.getOrder(aStr);\n        } else {\n            order = -1;\n        }\n        if( order >= 0 ) {\n            this._mTotalChars++;\n            // order is valid\n            if( order < this._mTableSize ) {\n                if( 512 > this._mCharToFreqOrder[order] ) {\n                    this._mFreqChars++;\n                }\n            }\n        }\n    }\n\n    /**\n     * return confidence based on existing data\n     */\n    this.getConfidence = function() {\n        // if we didn't receive any character in our consideration range, return negative answer\n        if( this._mTotalChars <= 0 || this._mFreqChars <= MINIMUM_DATA_THRESHOLD) {\n            return SURE_NO;\n        }\n        if( this._mTotalChars != this._mFreqChars ) {\n            var r = this._mFreqChars / ((this._mTotalChars - this._mFreqChars) * this._mTypicalDistributionRatio);\n            if( r < SURE_YES ) {\n                return r;\n            }\n        }\n\n        // normalize confidence (we don't want to be 100% sure)\n        return SURE_YES;\n    }\n\n    this.gotEnoughData = function() {\n        // It is not necessary to receive all data to draw conclusion. For charset detection,\n        // certain amount of data is enough\n        return this._mTotalChars > ENOUGH_DATA_THRESHOLD;\n    }\n\n    this.getOrder = function(aStr) {\n        // We do not handle characters based on the original encoding string, but\n        // convert this encoding string to a number, here called order.\n        // This allows multiple encodings of a language to share one frequency table.\n        return -1;\n    }\n\n    init();\n}\n\njschardet.EUCTWDistributionAnalysis = function() {\n    jschardet.CharDistributionAnalysis.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCharToFreqOrder = jschardet.EUCTWCharToFreqOrder;\n        self._mTableSize = jschardet.EUCTW_TABLE_SIZE;\n        self._mTypicalDistributionRatio = jschardet.EUCTW_TYPICAL_DISTRIBUTION_RATIO;\n    }\n\n    this.getOrder = function(aStr) {\n        // for euc-TW encoding, we are interested\n        //   first  byte range: 0xc4 -- 0xfe\n        //   second byte range: 0xa1 -- 0xfe\n        // no validation needed here. State machine has done that\n        if( aStr.charCodeAt(0) >= 0xC4 ) {\n            return 94 * (aStr.charCodeAt(0) - 0xC4) + aStr.charCodeAt(1) - 0xA1;\n        } else {\n            return -1;\n        }\n    }\n\n    init();\n}\njschardet.EUCTWDistributionAnalysis.prototype = new jschardet.CharDistributionAnalysis();\n\njschardet.EUCKRDistributionAnalysis = function() {\n    jschardet.CharDistributionAnalysis.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCharToFreqOrder = jschardet.EUCKRCharToFreqOrder;\n        self._mTableSize = jschardet.EUCKR_TABLE_SIZE;\n        self._mTypicalDistributionRatio = jschardet.EUCKR_TYPICAL_DISTRIBUTION_RATIO;\n    }\n\n    this.getOrder = function(aStr) {\n        // for euc-KR encoding, we are interested\n        //   first  byte range: 0xb0 -- 0xfe\n        //   second byte range: 0xa1 -- 0xfe\n        // no validation needed here. State machine has done that\n        if( aStr.charCodeAt(0) >= 0xB0 ) {\n            return 94 * (aStr.charCodeAt(0) - 0xB0) + aStr.charCodeAt(1) - 0xA1;\n        } else {\n            return -1;\n        }\n    }\n\n    init();\n}\njschardet.EUCKRDistributionAnalysis.prototype = new jschardet.CharDistributionAnalysis();\n\njschardet.GB2312DistributionAnalysis = function() {\n    jschardet.CharDistributionAnalysis.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCharToFreqOrder = jschardet.GB2312CharToFreqOrder;\n        self._mTableSize = jschardet.GB2312_TABLE_SIZE;\n        self._mTypicalDistributionRatio = jschardet.GB2312_TYPICAL_DISTRIBUTION_RATIO;\n    }\n\n    this.getOrder = function(aStr) {\n        // for GB2312 encoding, we are interested\n        //  first  byte range: 0xb0 -- 0xfe\n        //  second byte range: 0xa1 -- 0xfe\n        // no validation needed here. State machine has done that\n        if( aStr.charCodeAt(0) >= 0xB0 && aStr.charCodeAt(1) >= 0xA1 ) {\n            return 94 * (aStr.charCodeAt(0) - 0xB0) + aStr.charCodeAt(1) - 0xA1;\n        } else {\n            return -1;\n        }\n    }\n\n    init();\n}\njschardet.GB2312DistributionAnalysis.prototype = new jschardet.CharDistributionAnalysis();\n\njschardet.Big5DistributionAnalysis = function() {\n    jschardet.CharDistributionAnalysis.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCharToFreqOrder = jschardet.Big5CharToFreqOrder;\n        self._mTableSize = jschardet.BIG5_TABLE_SIZE;\n        self._mTypicalDistributionRatio = jschardet.BIG5_TYPICAL_DISTRIBUTION_RATIO;\n    }\n\n    this.getOrder = function(aStr) {\n        // for big5 encoding, we are interested\n        //   first  byte range: 0xa4 -- 0xfe\n        //   second byte range: 0x40 -- 0x7e , 0xa1 -- 0xfe\n        // no validation needed here. State machine has done that\n        if( aStr.charCodeAt(0) >= 0xA4 ) {\n            if( aStr.charCodeAt(1) >= 0xA1 ) {\n                return 157 * (aStr.charCodeAt(0) - 0xA4) + aStr.charCodeAt(1) - 0xA1 + 63;\n            } else {\n                return 157 * (aStr.charCodeAt(0) - 0xA4) + aStr.charCodeAt(1) - 0x40;\n            }\n        } else {\n            return -1;\n        }\n    }\n\n    init();\n}\njschardet.Big5DistributionAnalysis.prototype = new jschardet.CharDistributionAnalysis();\n\njschardet.SJISDistributionAnalysis = function() {\n    jschardet.CharDistributionAnalysis.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCharToFreqOrder = jschardet.JISCharToFreqOrder;\n        self._mTableSize = jschardet.JIS_TABLE_SIZE;\n        self._mTypicalDistributionRatio = jschardet.JIS_TYPICAL_DISTRIBUTION_RATIO;\n    }\n\n    this.getOrder = function(aStr) {\n        // for sjis encoding, we are interested\n        //   first  byte range: 0x81 -- 0x9f , 0xe0 -- 0xef\n        //   second byte range: 0x40 -- 0x7e,  0x80 -- 0xfc\n        // no validation needed here. State machine has done that\n        if( aStr.charCodeAt(0) >= 0x81 && aStr.charCodeAt(0) <= 0x9F ) {\n            var order = 188 * (aStr.charCodeAt(0) - 0x81);\n        } else if( aStr.charCodeAt(0) >= 0xE0 && aStr.charCodeAt(0) <= 0xEF ) {\n            order = 188 * (aStr.charCodeAt(0) - 0xE0 + 31);\n        } else {\n            return -1;\n        }\n        order += aStr.charCodeAt(1) - 0x40;\n        if( aStr.charCodeAt(1) < 0x40 || aStr.charCodeAt(1) === 0x7F || aStr.charCodeAt(1) > 0xFC) {\n            order = -1;\n        }\n        return order;\n    }\n\n    init();\n}\njschardet.SJISDistributionAnalysis.prototype = new jschardet.CharDistributionAnalysis();\n\njschardet.EUCJPDistributionAnalysis = function() {\n    jschardet.CharDistributionAnalysis.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCharToFreqOrder = jschardet.JISCharToFreqOrder;\n        self._mTableSize = jschardet.JIS_TABLE_SIZE;\n        self._mTypicalDistributionRatio = jschardet.JIS_TYPICAL_DISTRIBUTION_RATIO;\n    }\n\n    this.getOrder = function(aStr) {\n        // for euc-JP encoding, we are interested\n        //   first  byte range: 0xa0 -- 0xfe\n        //   second byte range: 0xa1 -- 0xfe\n        // no validation needed here. State machine has done that\n        if( aStr[0] >= \"\\xA0\" ) {\n            return 94 * (aStr.charCodeAt(0) - 0xA1) + aStr.charCodeAt(1) - 0xA1;\n        } else {\n            return -1;\n        }\n    }\n\n    init();\n}\njschardet.EUCJPDistributionAnalysis.prototype = new jschardet.CharDistributionAnalysis();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\n// This is hiragana 2-char sequence table, the number in each cell represents its frequency category\njschardet.jp2CharContext = [\n[0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1],\n[2,4,0,4,0,3,0,4,0,3,4,4,4,2,4,3,3,4,3,2,3,3,4,2,3,3,3,2,4,1,4,3,3,1,5,4,3,4,3,4,3,5,3,0,3,5,4,2,0,3,1,0,3,3,0,3,3,0,1,1,0,4,3,0,3,3,0,4,0,2,0,3,5,5,5,5,4,0,4,1,0,3,4],\n[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],\n[0,4,0,5,0,5,0,4,0,4,5,4,4,3,5,3,5,1,5,3,4,3,4,4,3,4,3,3,4,3,5,4,4,3,5,5,3,5,5,5,3,5,5,3,4,5,5,3,1,3,2,0,3,4,0,4,2,0,4,2,1,5,3,2,3,5,0,4,0,2,0,5,4,4,5,4,5,0,4,0,0,4,4],\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n[0,3,0,4,0,3,0,3,0,4,5,4,3,3,3,3,4,3,5,4,4,3,5,4,4,3,4,3,4,4,4,4,5,3,4,4,3,4,5,5,4,5,5,1,4,5,4,3,0,3,3,1,3,3,0,4,4,0,3,3,1,5,3,3,3,5,0,4,0,3,0,4,4,3,4,3,3,0,4,1,1,3,4],\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n[0,4,0,3,0,3,0,4,0,3,4,4,3,2,2,1,2,1,3,1,3,3,3,3,3,4,3,1,3,3,5,3,3,0,4,3,0,5,4,3,3,5,4,4,3,4,4,5,0,1,2,0,1,2,0,2,2,0,1,0,0,5,2,2,1,4,0,3,0,1,0,4,4,3,5,4,3,0,2,1,0,4,3],\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n[0,3,0,5,0,4,0,2,1,4,4,2,4,1,4,2,4,2,4,3,3,3,4,3,3,3,3,1,4,2,3,3,3,1,4,4,1,1,1,4,3,3,2,0,2,4,3,2,0,3,3,0,3,1,1,0,0,0,3,3,0,4,2,2,3,4,0,4,0,3,0,4,4,5,3,4,4,0,3,0,0,1,4],\n[1,4,0,4,0,4,0,4,0,3,5,4,4,3,4,3,5,4,3,3,4,3,5,4,4,4,4,3,4,2,4,3,3,1,5,4,3,2,4,5,4,5,5,4,4,5,4,4,0,3,2,2,3,3,0,4,3,1,3,2,1,4,3,3,4,5,0,3,0,2,0,4,5,5,4,5,4,0,4,0,0,5,4],\n[0,5,0,5,0,4,0,3,0,4,4,3,4,3,3,3,4,0,4,4,4,3,4,3,4,3,3,1,4,2,4,3,4,0,5,4,1,4,5,4,4,5,3,2,4,3,4,3,2,4,1,3,3,3,2,3,2,0,4,3,3,4,3,3,3,4,0,4,0,3,0,4,5,4,4,4,3,0,4,1,0,1,3],\n[0,3,1,4,0,3,0,2,0,3,4,4,3,1,4,2,3,3,4,3,4,3,4,3,4,4,3,2,3,1,5,4,4,1,4,4,3,5,4,4,3,5,5,4,3,4,4,3,1,2,3,1,2,2,0,3,2,0,3,1,0,5,3,3,3,4,3,3,3,3,4,4,4,4,5,4,2,0,3,3,2,4,3],\n[0,2,0,3,0,1,0,1,0,0,3,2,0,0,2,0,1,0,2,1,3,3,3,1,2,3,1,0,1,0,4,2,1,1,3,3,0,4,3,3,1,4,3,3,0,3,3,2,0,0,0,0,1,0,0,2,0,0,0,0,0,4,1,0,2,3,2,2,2,1,3,3,3,4,4,3,2,0,3,1,0,3,3],\n[0,4,0,4,0,3,0,3,0,4,4,4,3,3,3,3,3,3,4,3,4,2,4,3,4,3,3,2,4,3,4,5,4,1,4,5,3,5,4,5,3,5,4,0,3,5,5,3,1,3,3,2,2,3,0,3,4,1,3,3,2,4,3,3,3,4,0,4,0,3,0,4,5,4,4,5,3,0,4,1,0,3,4],\n[0,2,0,3,0,3,0,0,0,2,2,2,1,0,1,0,0,0,3,0,3,0,3,0,1,3,1,0,3,1,3,3,3,1,3,3,3,0,1,3,1,3,4,0,0,3,1,1,0,3,2,0,0,0,0,1,3,0,1,0,0,3,3,2,0,3,0,0,0,0,0,3,4,3,4,3,3,0,3,0,0,2,3],\n[2,3,0,3,0,2,0,1,0,3,3,4,3,1,3,1,1,1,3,1,4,3,4,3,3,3,0,0,3,1,5,4,3,1,4,3,2,5,5,4,4,4,4,3,3,4,4,4,0,2,1,1,3,2,0,1,2,0,0,1,0,4,1,3,3,3,0,3,0,1,0,4,4,4,5,5,3,0,2,0,0,4,4],\n[0,2,0,1,0,3,1,3,0,2,3,3,3,0,3,1,0,0,3,0,3,2,3,1,3,2,1,1,0,0,4,2,1,0,2,3,1,4,3,2,0,4,4,3,1,3,1,3,0,1,0,0,1,0,0,0,1,0,0,0,0,4,1,1,1,2,0,3,0,0,0,3,4,2,4,3,2,0,1,0,0,3,3],\n[0,1,0,4,0,5,0,4,0,2,4,4,2,3,3,2,3,3,5,3,3,3,4,3,4,2,3,0,4,3,3,3,4,1,4,3,2,1,5,5,3,4,5,1,3,5,4,2,0,3,3,0,1,3,0,4,2,0,1,3,1,4,3,3,3,3,0,3,0,1,0,3,4,4,4,5,5,0,3,0,1,4,5],\n[0,2,0,3,0,3,0,0,0,2,3,1,3,0,4,0,1,1,3,0,3,4,3,2,3,1,0,3,3,2,3,1,3,0,2,3,0,2,1,4,1,2,2,0,0,3,3,0,0,2,0,0,0,1,0,0,0,0,2,2,0,3,2,1,3,3,0,2,0,2,0,0,3,3,1,2,4,0,3,0,2,2,3],\n[2,4,0,5,0,4,0,4,0,2,4,4,4,3,4,3,3,3,1,2,4,3,4,3,4,4,5,0,3,3,3,3,2,0,4,3,1,4,3,4,1,4,4,3,3,4,4,3,1,2,3,0,4,2,0,4,1,0,3,3,0,4,3,3,3,4,0,4,0,2,0,3,5,3,4,5,2,0,3,0,0,4,5],\n[0,3,0,4,0,1,0,1,0,1,3,2,2,1,3,0,3,0,2,0,2,0,3,0,2,0,0,0,1,0,1,1,0,0,3,1,0,0,0,4,0,3,1,0,2,1,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,4,2,2,3,1,0,3,0,0,0,1,4,4,4,3,0,0,4,0,0,1,4],\n[1,4,1,5,0,3,0,3,0,4,5,4,4,3,5,3,3,4,4,3,4,1,3,3,3,3,2,1,4,1,5,4,3,1,4,4,3,5,4,4,3,5,4,3,3,4,4,4,0,3,3,1,2,3,0,3,1,0,3,3,0,5,4,4,4,4,4,4,3,3,5,4,4,3,3,5,4,0,3,2,0,4,4],\n[0,2,0,3,0,1,0,0,0,1,3,3,3,2,4,1,3,0,3,1,3,0,2,2,1,1,0,0,2,0,4,3,1,0,4,3,0,4,4,4,1,4,3,1,1,3,3,1,0,2,0,0,1,3,0,0,0,0,2,0,0,4,3,2,4,3,5,4,3,3,3,4,3,3,4,3,3,0,2,1,0,3,3],\n[0,2,0,4,0,3,0,2,0,2,5,5,3,4,4,4,4,1,4,3,3,0,4,3,4,3,1,3,3,2,4,3,0,3,4,3,0,3,4,4,2,4,4,0,4,5,3,3,2,2,1,1,1,2,0,1,5,0,3,3,2,4,3,3,3,4,0,3,0,2,0,4,4,3,5,5,0,0,3,0,2,3,3],\n[0,3,0,4,0,3,0,1,0,3,4,3,3,1,3,3,3,0,3,1,3,0,4,3,3,1,1,0,3,0,3,3,0,0,4,4,0,1,5,4,3,3,5,0,3,3,4,3,0,2,0,1,1,1,0,1,3,0,1,2,1,3,3,2,3,3,0,3,0,1,0,1,3,3,4,4,1,0,1,2,2,1,3],\n[0,1,0,4,0,4,0,3,0,1,3,3,3,2,3,1,1,0,3,0,3,3,4,3,2,4,2,0,1,0,4,3,2,0,4,3,0,5,3,3,2,4,4,4,3,3,3,4,0,1,3,0,0,1,0,0,1,0,0,0,0,4,2,3,3,3,0,3,0,0,0,4,4,4,5,3,2,0,3,3,0,3,5],\n[0,2,0,3,0,0,0,3,0,1,3,0,2,0,0,0,1,0,3,1,1,3,3,0,0,3,0,0,3,0,2,3,1,0,3,1,0,3,3,2,0,4,2,2,0,2,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,1,2,0,1,0,1,0,0,0,1,3,1,2,0,0,0,1,0,0,1,4],\n[0,3,0,3,0,5,0,1,0,2,4,3,1,3,3,2,1,1,5,2,1,0,5,1,2,0,0,0,3,3,2,2,3,2,4,3,0,0,3,3,1,3,3,0,2,5,3,4,0,3,3,0,1,2,0,2,2,0,3,2,0,2,2,3,3,3,0,2,0,1,0,3,4,4,2,5,4,0,3,0,0,3,5],\n[0,3,0,3,0,3,0,1,0,3,3,3,3,0,3,0,2,0,2,1,1,0,2,0,1,0,0,0,2,1,0,0,1,0,3,2,0,0,3,3,1,2,3,1,0,3,3,0,0,1,0,0,0,0,0,2,0,0,0,0,0,2,3,1,2,3,0,3,0,1,0,3,2,1,0,4,3,0,1,1,0,3,3],\n[0,4,0,5,0,3,0,3,0,4,5,5,4,3,5,3,4,3,5,3,3,2,5,3,4,4,4,3,4,3,4,5,5,3,4,4,3,4,4,5,4,4,4,3,4,5,5,4,2,3,4,2,3,4,0,3,3,1,4,3,2,4,3,3,5,5,0,3,0,3,0,5,5,5,5,4,4,0,4,0,1,4,4],\n[0,4,0,4,0,3,0,3,0,3,5,4,4,2,3,2,5,1,3,2,5,1,4,2,3,2,3,3,4,3,3,3,3,2,5,4,1,3,3,5,3,4,4,0,4,4,3,1,1,3,1,0,2,3,0,2,3,0,3,0,0,4,3,1,3,4,0,3,0,2,0,4,4,4,3,4,5,0,4,0,0,3,4],\n[0,3,0,3,0,3,1,2,0,3,4,4,3,3,3,0,2,2,4,3,3,1,3,3,3,1,1,0,3,1,4,3,2,3,4,4,2,4,4,4,3,4,4,3,2,4,4,3,1,3,3,1,3,3,0,4,1,0,2,2,1,4,3,2,3,3,5,4,3,3,5,4,4,3,3,0,4,0,3,2,2,4,4],\n[0,2,0,1,0,0,0,0,0,1,2,1,3,0,0,0,0,0,2,0,1,2,1,0,0,1,0,0,0,0,3,0,0,1,0,1,1,3,1,0,0,0,1,1,0,1,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,1,2,2,0,3,4,0,0,0,1,1,0,0,1,0,0,0,0,0,1,1],\n[0,1,0,0,0,1,0,0,0,0,4,0,4,1,4,0,3,0,4,0,3,0,4,0,3,0,3,0,4,1,5,1,4,0,0,3,0,5,0,5,2,0,1,0,0,0,2,1,4,0,1,3,0,0,3,0,0,3,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],\n[1,4,0,5,0,3,0,2,0,3,5,4,4,3,4,3,5,3,4,3,3,0,4,3,3,3,3,3,3,2,4,4,3,1,3,4,4,5,4,4,3,4,4,1,3,5,4,3,3,3,1,2,2,3,3,1,3,1,3,3,3,5,3,3,4,5,0,3,0,3,0,3,4,3,4,4,3,0,3,0,2,4,3],\n[0,1,0,4,0,0,0,0,0,1,4,0,4,1,4,2,4,0,3,0,1,0,1,0,0,0,0,0,2,0,3,1,1,1,0,3,0,0,0,1,2,1,0,0,1,1,1,1,0,1,0,0,0,1,0,0,3,0,0,0,0,3,2,0,2,2,0,1,0,0,0,2,3,2,3,3,0,0,0,0,2,1,0],\n[0,5,1,5,0,3,0,3,0,5,4,4,5,1,5,3,3,0,4,3,4,3,5,3,4,3,3,2,4,3,4,3,3,0,3,3,1,4,4,3,4,4,4,3,4,5,5,3,2,3,1,1,3,3,1,3,1,1,3,3,2,4,5,3,3,5,0,4,0,3,0,4,4,3,5,3,3,0,3,4,0,4,3],\n[0,5,0,5,0,3,0,2,0,4,4,3,5,2,4,3,3,3,4,4,4,3,5,3,5,3,3,1,4,0,4,3,3,0,3,3,0,4,4,4,4,5,4,3,3,5,5,3,2,3,1,2,3,2,0,1,0,0,3,2,2,4,4,3,1,5,0,4,0,3,0,4,3,1,3,2,1,0,3,3,0,3,3],\n[0,4,0,5,0,5,0,4,0,4,5,5,5,3,4,3,3,2,5,4,4,3,5,3,5,3,4,0,4,3,4,4,3,2,4,4,3,4,5,4,4,5,5,0,3,5,5,4,1,3,3,2,3,3,1,3,1,0,4,3,1,4,4,3,4,5,0,4,0,2,0,4,3,4,4,3,3,0,4,0,0,5,5],\n[0,4,0,4,0,5,0,1,1,3,3,4,4,3,4,1,3,0,5,1,3,0,3,1,3,1,1,0,3,0,3,3,4,0,4,3,0,4,4,4,3,4,4,0,3,5,4,1,0,3,0,0,2,3,0,3,1,0,3,1,0,3,2,1,3,5,0,3,0,1,0,3,2,3,3,4,4,0,2,2,0,4,4],\n[2,4,0,5,0,4,0,3,0,4,5,5,4,3,5,3,5,3,5,3,5,2,5,3,4,3,3,4,3,4,5,3,2,1,5,4,3,2,3,4,5,3,4,1,2,5,4,3,0,3,3,0,3,2,0,2,3,0,4,1,0,3,4,3,3,5,0,3,0,1,0,4,5,5,5,4,3,0,4,2,0,3,5],\n[0,5,0,4,0,4,0,2,0,5,4,3,4,3,4,3,3,3,4,3,4,2,5,3,5,3,4,1,4,3,4,4,4,0,3,5,0,4,4,4,4,5,3,1,3,4,5,3,3,3,3,3,3,3,0,2,2,0,3,3,2,4,3,3,3,5,3,4,1,3,3,5,3,2,0,0,0,0,4,3,1,3,3],\n[0,1,0,3,0,3,0,1,0,1,3,3,3,2,3,3,3,0,3,0,0,0,3,1,3,0,0,0,2,2,2,3,0,0,3,2,0,1,2,4,1,3,3,0,0,3,3,3,0,1,0,0,2,1,0,0,3,0,3,1,0,3,0,0,1,3,0,2,0,1,0,3,3,1,3,3,0,0,1,1,0,3,3],\n[0,2,0,3,0,2,1,4,0,2,2,3,1,1,3,1,1,0,2,0,3,1,2,3,1,3,0,0,1,0,4,3,2,3,3,3,1,4,2,3,3,3,3,1,0,3,1,4,0,1,1,0,1,2,0,1,1,0,1,1,0,3,1,3,2,2,0,1,0,0,0,2,3,3,3,1,0,0,0,0,0,2,3],\n[0,5,0,4,0,5,0,2,0,4,5,5,3,3,4,3,3,1,5,4,4,2,4,4,4,3,4,2,4,3,5,5,4,3,3,4,3,3,5,5,4,5,5,1,3,4,5,3,1,4,3,1,3,3,0,3,3,1,4,3,1,4,5,3,3,5,0,4,0,3,0,5,3,3,1,4,3,0,4,0,1,5,3],\n[0,5,0,5,0,4,0,2,0,4,4,3,4,3,3,3,3,3,5,4,4,4,4,4,4,5,3,3,5,2,4,4,4,3,4,4,3,3,4,4,5,5,3,3,4,3,4,3,3,4,3,3,3,3,1,2,2,1,4,3,3,5,4,4,3,4,0,4,0,3,0,4,4,4,4,4,1,0,4,2,0,2,4],\n[0,4,0,4,0,3,0,1,0,3,5,2,3,0,3,0,2,1,4,2,3,3,4,1,4,3,3,2,4,1,3,3,3,0,3,3,0,0,3,3,3,5,3,3,3,3,3,2,0,2,0,0,2,0,0,2,0,0,1,0,0,3,1,2,2,3,0,3,0,2,0,4,4,3,3,4,1,0,3,0,0,2,4],\n[0,0,0,4,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,0,1,0,2,0,1,0,0,0,0,0,3,1,3,0,3,2,0,0,0,1,0,3,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,2,0,0,0,0,0,0,2],\n[0,2,1,3,0,2,0,2,0,3,3,3,3,1,3,1,3,3,3,3,3,3,4,2,2,1,2,1,4,0,4,3,1,3,3,3,2,4,3,5,4,3,3,3,3,3,3,3,0,1,3,0,2,0,0,1,0,0,1,0,0,4,2,0,2,3,0,3,3,0,3,3,4,2,3,1,4,0,1,2,0,2,3],\n[0,3,0,3,0,1,0,3,0,2,3,3,3,0,3,1,2,0,3,3,2,3,3,2,3,2,3,1,3,0,4,3,2,0,3,3,1,4,3,3,2,3,4,3,1,3,3,1,1,0,1,1,0,1,0,1,0,1,0,0,0,4,1,1,0,3,0,3,1,0,2,3,3,3,3,3,1,0,0,2,0,3,3],\n[0,0,0,0,0,0,0,0,0,0,3,0,2,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,3,0,3,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,0,2,3,0,0,0,0,0,0,0,0,3],\n[0,2,0,3,1,3,0,3,0,2,3,3,3,1,3,1,3,1,3,1,3,3,3,1,3,0,2,3,1,1,4,3,3,2,3,3,1,2,2,4,1,3,3,0,1,4,2,3,0,1,3,0,3,0,0,1,3,0,2,0,0,3,3,2,1,3,0,3,0,2,0,3,4,4,4,3,1,0,3,0,0,3,3],\n[0,2,0,1,0,2,0,0,0,1,3,2,2,1,3,0,1,1,3,0,3,2,3,1,2,0,2,0,1,1,3,3,3,0,3,3,1,1,2,3,2,3,3,1,2,3,2,0,0,1,0,0,0,0,0,0,3,0,1,0,0,2,1,2,1,3,0,3,0,0,0,3,4,4,4,3,2,0,2,0,0,2,4],\n[0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,3,1,0,0,0,0,0,0,0,3],\n[0,3,0,3,0,2,0,3,0,3,3,3,2,3,2,2,2,0,3,1,3,3,3,2,3,3,0,0,3,0,3,2,2,0,2,3,1,4,3,4,3,3,2,3,1,5,4,4,0,3,1,2,1,3,0,3,1,1,2,0,2,3,1,3,1,3,0,3,0,1,0,3,3,4,4,2,1,0,2,1,0,2,4],\n[0,1,0,3,0,1,0,2,0,1,4,2,5,1,4,0,2,0,2,1,3,1,4,0,2,1,0,0,2,1,4,1,1,0,3,3,0,5,1,3,2,3,3,1,0,3,2,3,0,1,0,0,0,0,0,0,1,0,0,0,0,4,0,1,0,3,0,2,0,1,0,3,3,3,4,3,3,0,0,0,0,2,3],\n[0,0,0,1,0,0,0,0,0,0,2,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,1,0,0,0,0,0,3],\n[0,1,0,3,0,4,0,3,0,2,4,3,1,0,3,2,2,1,3,1,2,2,3,1,1,1,2,1,3,0,1,2,0,1,3,2,1,3,0,5,5,1,0,0,1,3,2,1,0,3,0,0,1,0,0,0,0,0,3,4,0,1,1,1,3,2,0,2,0,1,0,2,3,3,1,2,3,0,1,0,1,0,4],\n[0,0,0,1,0,3,0,3,0,2,2,1,0,0,4,0,3,0,3,1,3,0,3,0,3,0,1,0,3,0,3,1,3,0,3,3,0,0,1,2,1,1,1,0,1,2,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,2,2,1,2,0,0,2,0,0,0,0,2,3,3,3,3,0,0,0,0,1,4],\n[0,0,0,3,0,3,0,0,0,0,3,1,1,0,3,0,1,0,2,0,1,0,0,0,0,0,0,0,1,0,3,0,2,0,2,3,0,0,2,2,3,1,2,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,2,3],\n[2,4,0,5,0,5,0,4,0,3,4,3,3,3,4,3,3,3,4,3,4,4,5,4,5,5,5,2,3,0,5,5,4,1,5,4,3,1,5,4,3,4,4,3,3,4,3,3,0,3,2,0,2,3,0,3,0,0,3,3,0,5,3,2,3,3,0,3,0,3,0,3,4,5,4,5,3,0,4,3,0,3,4],\n[0,3,0,3,0,3,0,3,0,3,3,4,3,2,3,2,3,0,4,3,3,3,3,3,3,3,3,0,3,2,4,3,3,1,3,4,3,4,4,4,3,4,4,3,2,4,4,1,0,2,0,0,1,1,0,2,0,0,3,1,0,5,3,2,1,3,0,3,0,1,2,4,3,2,4,3,3,0,3,2,0,4,4],\n[0,3,0,3,0,1,0,0,0,1,4,3,3,2,3,1,3,1,4,2,3,2,4,2,3,4,3,0,2,2,3,3,3,0,3,3,3,0,3,4,1,3,3,0,3,4,3,3,0,1,1,0,1,0,0,0,4,0,3,0,0,3,1,2,1,3,0,4,0,1,0,4,3,3,4,3,3,0,2,0,0,3,3],\n[0,3,0,4,0,1,0,3,0,3,4,3,3,0,3,3,3,1,3,1,3,3,4,3,3,3,0,0,3,1,5,3,3,1,3,3,2,5,4,3,3,4,5,3,2,5,3,4,0,1,0,0,0,0,0,2,0,0,1,1,0,4,2,2,1,3,0,3,0,2,0,4,4,3,5,3,2,0,1,1,0,3,4],\n[0,5,0,4,0,5,0,2,0,4,4,3,3,2,3,3,3,1,4,3,4,1,5,3,4,3,4,0,4,2,4,3,4,1,5,4,0,4,4,4,4,5,4,1,3,5,4,2,1,4,1,1,3,2,0,3,1,0,3,2,1,4,3,3,3,4,0,4,0,3,0,4,4,4,3,3,3,0,4,2,0,3,4],\n[1,4,0,4,0,3,0,1,0,3,3,3,1,1,3,3,2,2,3,3,1,0,3,2,2,1,2,0,3,1,2,1,2,0,3,2,0,2,2,3,3,4,3,0,3,3,1,2,0,1,1,3,1,2,0,0,3,0,1,1,0,3,2,2,3,3,0,3,0,0,0,2,3,3,4,3,3,0,1,0,0,1,4],\n[0,4,0,4,0,4,0,0,0,3,4,4,3,1,4,2,3,2,3,3,3,1,4,3,4,0,3,0,4,2,3,3,2,2,5,4,2,1,3,4,3,4,3,1,3,3,4,2,0,2,1,0,3,3,0,0,2,0,3,1,0,4,4,3,4,3,0,4,0,1,0,2,4,4,4,4,4,0,3,2,0,3,3],\n[0,0,0,1,0,4,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,3,2,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2],\n[0,2,0,3,0,4,0,4,0,1,3,3,3,0,4,0,2,1,2,1,1,1,2,0,3,1,1,0,1,0,3,1,0,0,3,3,2,0,1,1,0,0,0,0,0,1,0,2,0,2,2,0,3,1,0,0,1,0,1,1,0,1,2,0,3,0,0,0,0,1,0,0,3,3,4,3,1,0,1,0,3,0,2],\n[0,0,0,3,0,5,0,0,0,0,1,0,2,0,3,1,0,1,3,0,0,0,2,0,0,0,1,0,0,0,1,1,0,0,4,0,0,0,2,3,0,1,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,3],\n[0,2,0,5,0,5,0,1,0,2,4,3,3,2,5,1,3,2,3,3,3,0,4,1,2,0,3,0,4,0,2,2,1,1,5,3,0,0,1,4,2,3,2,0,3,3,3,2,0,2,4,1,1,2,0,1,1,0,3,1,0,1,3,1,2,3,0,2,0,0,0,1,3,5,4,4,4,0,3,0,0,1,3],\n[0,4,0,5,0,4,0,4,0,4,5,4,3,3,4,3,3,3,4,3,4,4,5,3,4,5,4,2,4,2,3,4,3,1,4,4,1,3,5,4,4,5,5,4,4,5,5,5,2,3,3,1,4,3,1,3,3,0,3,3,1,4,3,4,4,4,0,3,0,4,0,3,3,4,4,5,0,0,4,3,0,4,5],\n[0,4,0,4,0,3,0,3,0,3,4,4,4,3,3,2,4,3,4,3,4,3,5,3,4,3,2,1,4,2,4,4,3,1,3,4,2,4,5,5,3,4,5,4,1,5,4,3,0,3,2,2,3,2,1,3,1,0,3,3,3,5,3,3,3,5,4,4,2,3,3,4,3,3,3,2,1,0,3,2,1,4,3],\n[0,4,0,5,0,4,0,3,0,3,5,5,3,2,4,3,4,0,5,4,4,1,4,4,4,3,3,3,4,3,5,5,2,3,3,4,1,2,5,5,3,5,5,2,3,5,5,4,0,3,2,0,3,3,1,1,5,1,4,1,0,4,3,2,3,5,0,4,0,3,0,5,4,3,4,3,0,0,4,1,0,4,4],\n[1,3,0,4,0,2,0,2,0,2,5,5,3,3,3,3,3,0,4,2,3,4,4,4,3,4,0,0,3,4,5,4,3,3,3,3,2,5,5,4,5,5,5,4,3,5,5,5,1,3,1,0,1,0,0,3,2,0,4,2,0,5,2,3,2,4,1,3,0,3,0,4,5,4,5,4,3,0,4,2,0,5,4],\n[0,3,0,4,0,5,0,3,0,3,4,4,3,2,3,2,3,3,3,3,3,2,4,3,3,2,2,0,3,3,3,3,3,1,3,3,3,0,4,4,3,4,4,1,1,4,4,2,0,3,1,0,1,1,0,4,1,0,2,3,1,3,3,1,3,4,0,3,0,1,0,3,1,3,0,0,1,0,2,0,0,4,4],\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n[0,3,0,3,0,2,0,3,0,1,5,4,3,3,3,1,4,2,1,2,3,4,4,2,4,4,5,0,3,1,4,3,4,0,4,3,3,3,2,3,2,5,3,4,3,2,2,3,0,0,3,0,2,1,0,1,2,0,0,0,0,2,1,1,3,1,0,2,0,4,0,3,4,4,4,5,2,0,2,0,0,1,3],\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,1,1,0,0,0,4,2,1,1,0,1,0,3,2,0,0,3,1,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,2,0,0,0,1,4,0,4,2,1,0,0,0,0,0,1],\n[0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,3,1,0,0,0,2,0,2,1,0,0,1,2,1,0,1,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,3,1,0,0,0,0,0,1,0,0,2,1,0,0,0,0,0,0,0,0,2],\n[0,4,0,4,0,4,0,3,0,4,4,3,4,2,4,3,2,0,4,4,4,3,5,3,5,3,3,2,4,2,4,3,4,3,1,4,0,2,3,4,4,4,3,3,3,4,4,4,3,4,1,3,4,3,2,1,2,1,3,3,3,4,4,3,3,5,0,4,0,3,0,4,3,3,3,2,1,0,3,0,0,3,3],\n[0,4,0,3,0,3,0,3,0,3,5,5,3,3,3,3,4,3,4,3,3,3,4,4,4,3,3,3,3,4,3,5,3,3,1,3,2,4,5,5,5,5,4,3,4,5,5,3,2,2,3,3,3,3,2,3,3,1,2,3,2,4,3,3,3,4,0,4,0,2,0,4,3,2,2,1,2,0,3,0,0,4,1]\n];\n\njschardet.JapaneseContextAnalysis = function() {\n    var NUM_OF_CATEGORY = 6;\n    var DONT_KNOW = -1;\n    var ENOUGH_REL_THRESHOLD = 100;\n    var MAX_REL_THRESHOLD = 1000;\n    var MINIMUM_DATA_THRESHOLD = 4;\n    var self = this;\n\n    function init() {\n        self.reset();\n    }\n\n    this.reset = function() {\n        this._mTotalRel = 0; // total sequence received\n        this._mRelSample = []; // category counters, each interger counts sequence in its category\n        for( var i = 0; i < NUM_OF_CATEGORY; this._mRelSample[i++] = 0 );\n        this._mNeedToSkipCharNum = 0; // if last byte in current buffer is not the last byte of a character, we need to know how many bytes to skip in next buffer\n        this._mLastCharOrder = -1; // The order of previous char\n        this._mDone = false; // If this flag is set to true, detection is done and conclusion has been made\n    }\n\n    this.feed = function(aBuf, aLen) {\n        if( this._mDone ) return;\n\n        // The buffer we got is byte oriented, and a character may span in more than one\n        // buffers. In case the last one or two byte in last buffer is not complete, we\n        // record how many byte needed to complete that character and skip these bytes here.\n        // We can choose to record those bytes as well and analyse the character once it\n        // is complete, but since a character will not make much difference, by simply skipping\n        // this character will simply our logic and improve performance.\n        var i = this._mNeedToSkipCharNum;\n        while( i < aLen ) {\n            var rets = this.getOrder(aBuf.slice(i,i+2));\n            var order = rets[0];\n            var charLen = rets[1];\n            i += charLen;\n            if( i > aLen ) {\n                this._mNeedToSkipCharNum = i - aLen;\n                this._mLastCharOrder = -1;\n            } else {\n                if( order != -1 && this._mLastCharOrder != -1 ) {\n                    this._mTotalRel += 1;\n                    if( this._mTotalRel > MAX_REL_THRESHOLD ) {\n                        this._mDone = true;\n                        break;\n                    }\n                    this._mRelSample[jschardet.jp2CharContext[this._mLastCharOrder][order]] += 1;\n                }\n                this._mLastCharOrder = order;\n            }\n        }\n    }\n\n    this.gotEnoughData = function() {\n        return this._mTotalRel > ENOUGH_REL_THRESHOLD;\n    }\n\n    this.getConfidence = function() {\n        // This is just one way to calculate confidence. It works well for me.\n        if( this._mTotalRel > MINIMUM_DATA_THRESHOLD ) {\n            return (this._mTotalRel - this._mRelSample[0]) / this._mTotalRel;\n        } else {\n            return DONT_KNOW;\n        }\n    }\n\n    this.getOrder = function(aStr) {\n        return [-1, 1];\n    }\n\n    init();\n}\n\njschardet.SJISContextAnalysis = function() {\n    this.getOrder = function(aStr) {\n        if( !aStr ) return [-1, 1];\n        // find out current char's byte length\n        if( (aStr.charCodeAt(0) >= 0x81 && aStr.charCodeAt(0) <= 0x9F) ||\n            (aStr.charCodeAt(0) >= 0xE0 && aStr.charCodeAt(0) <= 0xFC) ) {\n            var charLen = 2;\n        } else {\n            charLen = 1;\n        }\n\n        // return its order if it is hiragana\n        if( aStr.length > 1 ) {\n            if( aStr.charCodeAt(0) == 0x82 && aStr.charCodeAt(1) >= 0x9F &&\n                aStr.charCodeAt(0) <= 0xF1 ) {\n                return [aStr.charCodeAt(1) - 0x9F, charLen];\n            }\n        }\n\n        return [-1, charLen];\n    }\n}\njschardet.SJISContextAnalysis.prototype = new jschardet.JapaneseContextAnalysis();\n\njschardet.EUCJPContextAnalysis = function() {\n    this.getOrder = function(aStr) {\n        if( !aStr ) return [-1, 1];\n        // find out current char's byte length\n        if( aStr.charCodeAt(0) >= 0x8E ||\n            (aStr.charCodeAt(0) >= 0xA1 && aStr.charCodeAt(0) <= 0xFE) ) {\n            var charLen = 2;\n        } else if( aStr.charCodeAt(0) == 0x8F ) {\n            charLen = 3;\n        } else {\n            charLen = 1;\n        }\n\n        // return its order if it is hiragana\n        if( aStr.length > 1 ) {\n            if( aStr.charCodeAt(0) == 0xA4 && aStr.charCodeAt(1) >= 0xA1 &&\n                aStr.charCodeAt(1) <= 0xF3 ) {\n                return [aStr.charCodeAt(1) - 0xA1, charLen];\n            }\n        }\n\n        return [-1, charLen];\n    }\n}\njschardet.EUCJPContextAnalysis.prototype = new jschardet.JapaneseContextAnalysis();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.SJISProber = function() {\n    jschardet.MultiByteCharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCodingSM = new jschardet.CodingStateMachine(jschardet.SJISSMModel);\n        self._mDistributionAnalyzer = new jschardet.SJISDistributionAnalysis();\n        self._mContextAnalyzer = new jschardet.SJISContextAnalysis();\n        self.reset();\n    }\n\n    this.reset = function() {\n        jschardet.SJISProber.prototype.reset.apply(this);\n        this._mContextAnalyzer.reset();\n    }\n\n    this.getCharsetName = function() {\n        return \"SHIFT_JIS\";\n    }\n\n    this.feed = function(aBuf) {\n        var aLen = aBuf.length;\n        for( var i = 0; i < aLen; i++ ) {\n            var codingState = this._mCodingSM.nextState(aBuf[i]);\n            if( codingState == jschardet.Constants.error ) {\n                if( jschardet.Constants._debug ) {\n                    jschardet.log(this.getCharsetName() + \" prober hit error at byte \" + i + \"\\n\");\n                }\n                this._mState = jschardet.Constants.notMe;\n                break;\n            } else if( codingState == jschardet.Constants.itsMe ) {\n                this._mState = jschardet.Constants.foundIt;\n                break;\n            } else if( codingState == jschardet.Constants.start ) {\n                var charLen = this._mCodingSM.getCurrentCharLen();\n                if( i == 0 ) {\n                    this._mLastChar[1] = aBuf[0];\n                    this._mContextAnalyzer.feed(this._mLastChar.slice(2 - charLen), charLen);\n                    this._mDistributionAnalyzer.feed(this._mLastChar, charLen);\n                } else {\n                    this._mContextAnalyzer.feed(aBuf.slice(i + 1 - charLen, i + 3 - charLen), charLen);\n                    this._mDistributionAnalyzer.feed(aBuf.slice(i - 1, i + 1), charLen);\n                }\n            }\n        }\n\n        this._mLastChar[0] = aBuf[aLen - 1];\n\n        if( this.getState() == jschardet.Constants.detecting ) {\n            if( this._mContextAnalyzer.gotEnoughData() &&\n                this.getConfidence() > jschardet.Constants.SHORTCUT_THRESHOLD ) {\n                this._mState = jschardet.Constants.foundIt;\n            }\n        }\n\n        return this.getState();\n    }\n\n    this.getConfidence = function() {\n        var contxtCf = this._mContextAnalyzer.getConfidence();\n        var distribCf = this._mDistributionAnalyzer.getConfidence();\n        return Math.max(contxtCf, distribCf);\n    }\n\n    init();\n}\njschardet.SJISProber.prototype = new jschardet.MultiByteCharSetProber();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.UTF8Prober = function() {\n    jschardet.CharSetProber.apply(this);\n\n    var ONE_CHAR_PROB = 0.5;\n    var self = this;\n\n    function init() {\n        self._mCodingSM = new jschardet.CodingStateMachine(jschardet.UTF8SMModel);\n        self.reset();\n    }\n\n    this.reset = function() {\n        jschardet.UTF8Prober.prototype.reset.apply(this);\n        this._mCodingSM.reset();\n        this._mNumOfMBChar = 0;\n    }\n\n    this.getCharsetName = function() {\n        return \"UTF-8\";\n    }\n\n    this.feed = function(aBuf) {\n        for( var i = 0, c; i < aBuf.length; i++ ) {\n            c = aBuf[i];\n            var codingState = this._mCodingSM.nextState(c);\n            if( codingState == jschardet.Constants.error ) {\n                this._mState = jschardet.Constants.notMe;\n                break;\n            } else if( codingState == jschardet.Constants.itsMe ) {\n                this._mState = jschardet.Constants.foundIt;\n                break;\n            } else if( codingState == jschardet.Constants.start ) {\n                if( this._mCodingSM.getCurrentCharLen() >= 2 ) {\n                    this._mNumOfMBChar++;\n                }\n            }\n        }\n\n        if( this.getState() == jschardet.Constants.detecting ) {\n            if( this.getConfidence() > jschardet.Constants.SHORTCUT_THRESHOLD ) {\n                this._mState = jschardet.Constants.foundIt;\n            }\n        }\n\n        return this.getState();\n    }\n\n    this.getConfidence = function() {\n        var unlike = 0.99;\n        if( this._mNumOfMBChar < 6 ) {\n            for( var i = 0; i < this._mNumOfMBChar; i++ ) {\n                unlike *= ONE_CHAR_PROB;\n            }\n            return 1 - unlike;\n        } else {\n            return unlike;\n        }\n    }\n\n    init();\n}\njschardet.UTF8Prober.prototype = new jschardet.CharSetProber();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.CharSetGroupProber = function() {\n    jschardet.CharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mActiveNum = 0;\n        self._mProbers = [];\n        self._mBestGuessProber = null;\n    }\n\n    this.reset = function() {\n        jschardet.CharSetGroupProber.prototype.reset.apply(this);\n        this._mActiveNum = 0;\n        for( var i = 0, prober; prober = this._mProbers[i]; i++ ) {\n            if( prober ) {\n                prober.reset();\n                prober.active = true;\n                this._mActiveNum++;\n            }\n        }\n        this._mBestGuessProber = null;\n    }\n\n    this.getCharsetName = function() {\n        if( !this._mBestGuessProber ) {\n            this.getConfidence();\n            if( !this._mBestGuessProber ) return null;\n        }\n        return this._mBestGuessProber.getCharsetName();\n    }\n\n    this.feed = function(aBuf) {\n        for( var i = 0, prober; prober = this._mProbers[i]; i++ ) {\n            if( !prober || !prober.active ) continue;\n            var st = prober.feed(aBuf);\n            if( !st ) continue;\n            if( st == jschardet.Constants.foundIt ) {\n                this._mBestGuessProber = prober;\n                return this.getState();\n            } else if( st == jschardet.Constants.notMe ) {\n                prober.active = false;\n                this._mActiveNum--;\n                if( this._mActiveNum <= 0 ) {\n                    this._mState = jschardet.Constants.notMe;\n                    return this.getState();\n                }\n            }\n        }\n        return this.getState();\n    }\n\n    this.getConfidence = function() {\n        var st = this.getState();\n        if( st == jschardet.Constants.foundIt ) {\n            return 0.99;\n        } else if( st == jschardet.Constants.notMe ) {\n            return 0.01;\n        }\n        var bestConf = 0.0;\n        this._mBestGuessProber = null;\n        for( var i = 0, prober; prober = this._mProbers[i]; i++ ) {\n            if( !prober ) continue;\n            if( !prober.active ) {\n                if( jschardet.Constants._debug ) {\n                    jschardet.log(prober.getCharsetName() + \" not active\\n\");\n                }\n                continue;\n            }\n            var cf = prober.getConfidence();\n            if( jschardet.Constants._debug ) {\n                jschardet.log(prober.getCharsetName() + \" confidence = \" + cf + \"\\n\");\n            }\n            if( bestConf < cf ) {\n                bestConf = cf;\n                this._mBestGuessProber = prober;\n            }\n        }\n        if( !this._mBestGuessProber ) return 0.0;\n        return bestConf;\n    }\n\n    init();\n}\njschardet.CharSetGroupProber.prototype = new jschardet.CharSetProber();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.EUCJPProber = function() {\n    jschardet.MultiByteCharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCodingSM = new jschardet.CodingStateMachine(jschardet.EUCJPSMModel);\n        self._mDistributionAnalyzer = new jschardet.EUCJPDistributionAnalysis();\n        self._mContextAnalyzer = new jschardet.EUCJPContextAnalysis();\n        self.reset();\n    }\n\n    this.reset = function() {\n        jschardet.EUCJPProber.prototype.reset.apply(this);\n        this._mContextAnalyzer.reset();\n    }\n\n    this.getCharsetName = function() {\n        return \"EUC-JP\";\n    }\n\n    this.feed = function(aBuf) {\n        var aLen = aBuf.length;\n        for( var i = 0; i < aLen; i++ ) {\n            var codingState = this._mCodingSM.nextState(aBuf[i]);\n            if( codingState == jschardet.Constants.error ) {\n                if( jschardet.Constants._debug ) {\n                    jschardet.log(this.getCharsetName() + \" prober hit error at byte \" + i + \"\\n\");\n                }\n                this._mState = jschardet.Constants.notMe;\n                break;\n            } else if( codingState == jschardet.Constants.itsMe ) {\n                this._mState = jschardet.Constants.foundIt;\n                break;\n            } else if( codingState == jschardet.Constants.start ) {\n                var charLen = this._mCodingSM.getCurrentCharLen();\n                if( i == 0 ) {\n                    this._mLastChar[1] = aBuf[0];\n                    this._mContextAnalyzer.feed(this._mLastChar, charLen);\n                    this._mDistributionAnalyzer.feed(this._mLastChar, charLen);\n                } else {\n                    this._mContextAnalyzer.feed(aBuf.slice(i-1,i+1), charLen);\n                    this._mDistributionAnalyzer.feed(aBuf.slice(i-1,i+1), charLen);\n                }\n            }\n        }\n\n        this._mLastChar[0] = aBuf[aLen - 1];\n\n        if( this.getState() == jschardet.Constants.detecting ) {\n            if( this._mContextAnalyzer.gotEnoughData() &&\n                this.getConfidence() > jschardet.Constants.SHORTCUT_THRESHOLD ) {\n                this._mState = jschardet.Constants.foundIt;\n            }\n        }\n\n        return this.getState();\n    }\n\n    this.getConfidence = function() {\n        var contxtCf = this._mContextAnalyzer.getConfidence();\n        var distribCf = this._mDistributionAnalyzer.getConfidence();\n\n        return Math.max(contxtCf, distribCf);\n    }\n\n    init();\n}\njschardet.EUCJPProber.prototype = new jschardet.MultiByteCharSetProber();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.GB2312Prober = function() {\n    jschardet.MultiByteCharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCodingSM = new jschardet.CodingStateMachine(jschardet.GB2312SMModel);\n        self._mDistributionAnalyzer = new jschardet.GB2312DistributionAnalysis();\n        self.reset();\n    }\n\n    this.getCharsetName = function() {\n        return \"GB2312\";\n    }\n\n    init();\n}\njschardet.GB2312Prober.prototype = new jschardet.MultiByteCharSetProber();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.EUCKRProber = function() {\n    jschardet.MultiByteCharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCodingSM = new jschardet.CodingStateMachine(jschardet.EUCKRSMModel);\n        self._mDistributionAnalyzer = new jschardet.EUCKRDistributionAnalysis();\n        self.reset();\n    }\n\n    this.getCharsetName = function() {\n        return \"EUC-KR\";\n    }\n\n    init();\n}\njschardet.EUCKRProber.prototype = new jschardet.MultiByteCharSetProber();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.Big5Prober = function() {\n    jschardet.MultiByteCharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCodingSM = new jschardet.CodingStateMachine(jschardet.Big5SMModel);\n        self._mDistributionAnalyzer = new jschardet.Big5DistributionAnalysis();\n        self.reset();\n    }\n\n    this.getCharsetName = function() {\n        return \"Big5\";\n    }\n\n    init();\n}\njschardet.Big5Prober.prototype = new jschardet.MultiByteCharSetProber();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.EUCTWProber = function() {\n    jschardet.MultiByteCharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCodingSM = new jschardet.CodingStateMachine(jschardet.EUCTWSMModel);\n        self._mDistributionAnalyzer = new jschardet.EUCTWDistributionAnalysis();\n        self.reset();\n    }\n\n    this.getCharsetName = function() {\n        return \"EUC-TW\";\n    }\n\n    init();\n}\njschardet.EUCTWProber.prototype = new jschardet.MultiByteCharSetProber();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.MBCSGroupProber = function() {\n    jschardet.CharSetGroupProber.apply(this);\n    this._mProbers = [\n        new jschardet.UTF8Prober(),\n        new jschardet.SJISProber(),\n        new jschardet.EUCJPProber(),\n        new jschardet.GB2312Prober(),\n        new jschardet.EUCKRProber(),\n        new jschardet.Big5Prober(),\n        new jschardet.EUCTWProber()\n    ];\n    this.reset();\n}\njschardet.MBCSGroupProber.prototype = new jschardet.CharSetGroupProber();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.SingleByteCharSetProber = function(model, reversed, nameProber) {\n    jschardet.CharSetProber.apply(this);\n\n    var SAMPLE_SIZE = 64;\n    var SB_ENOUGH_REL_THRESHOLD = 1024;\n    var POSITIVE_SHORTCUT_THRESHOLD = 0.95;\n    var NEGATIVE_SHORTCUT_THRESHOLD = 0.05;\n    var SYMBOL_CAT_ORDER = 250;\n    var NUMBER_OF_SEQ_CAT = 4;\n    var POSITIVE_CAT = NUMBER_OF_SEQ_CAT - 1;\n    //var NEGATIVE_CAT = 0;\n\n    var self = this;\n\n    function init(model, reversed, nameProber) {\n        self._mModel = model;\n        self._mReversed = reversed; // \"true\" if we need to reverse every pair in the model lookup\n        self._mNameProber = nameProber; // Optional auxiliary prober for name decision\n        self.reset();\n    }\n\n    this.reset = function() {\n        jschardet.SingleByteCharSetProber.prototype.reset.apply(this);\n        this._mLastOrder = 255; // char order of last character\n        this._mSeqCounters = [];\n        for( var i = 0; i < NUMBER_OF_SEQ_CAT; this._mSeqCounters[i++] = 0 );\n        this._mTotalSeqs = 0;\n        this._mTotalChar = 0;\n        this._mFreqChar = 0; // characters that fall in our sampling range\n    }\n\n    this.getCharsetName = function() {\n        if( this._mNameProber ) {\n            return this._mNameProber.getCharsetName();\n        } else {\n            return this._mModel.charsetName;\n        }\n    }\n\n    this.feed = function(aBuf) {\n        if( ! this._mModel.keepEnglishLetter ) {\n            aBuf = this.filterWithoutEnglishLetters(aBuf);\n        }\n        var aLen = aBuf.length;\n        if( !aLen ) {\n            return this.getState();\n        }\n        for( var i = 0, c; i < aLen; i++ )\n        {\n            c = aBuf.charCodeAt(i);\n            var order = this._mModel.charToOrderMap[c];\n            if( order < SYMBOL_CAT_ORDER ) {\n                this._mTotalChar++;\n            }\n            if( order < SAMPLE_SIZE ) {\n                this._mFreqChar++;\n                if( this._mLastOrder < SAMPLE_SIZE ) {\n                    this._mTotalSeqs++;\n                    if( !this._mReversed ) {\n                        this._mSeqCounters[this._mModel.precedenceMatrix[(this._mLastOrder * SAMPLE_SIZE) + order]]++;\n                    } else { // reverse the order of the letters in the lookup\n                        this._mSeqCounters[this._mModel.precedenceMatrix[(order * SAMPLE_SIZE) + this._mLastOrder]]++;\n                    }\n                }\n            }\n            this._mLastOrder = order;\n        }\n\n        if( this.getState() == jschardet.Constants.detecting ) {\n            if( self._mTotalSeqs > SB_ENOUGH_REL_THRESHOLD ) {\n                var cf = this.getConfidence();\n                if( cf > POSITIVE_SHORTCUT_THRESHOLD ) {\n                    if( jschardet.Constants._debug ) {\n                        jschardet.log(this._mModel.charsetName + \" confidence = \" + cf + \", we have a winner\\n\");\n                    }\n                } else if( cf < NEGATIVE_SHORTCUT_THRESHOLD ) {\n                    if( jschardet.Constants._debug ) {\n                        jschardet.log(this._mModel.charsetName + \" confidence = \" + cf + \", below negative shortcut threshhold \" + NEGATIVE_SHORTCUT_THRESHOLD + \"\\n\");\n                    }\n                    this._mState = jschardet.Constants.notMe;\n                }\n            }\n        }\n\n        return this.getState();\n    }\n\n    this.getConfidence = function() {\n        var r = 0.01;\n        if( this._mTotalSeqs > 0 ) {\n            //jschardet.log(this._mSeqCounters[POSITIVE_CAT] + \" \" + this._mTotalSeqs + \" \" + this._mModel.mTypicalPositiveRatio);\n            r = (1.0 * this._mSeqCounters[POSITIVE_CAT]) / this._mTotalSeqs / this._mModel.mTypicalPositiveRatio;\n            //jschardet.log(r + \" \" + this._mFreqChar + \" \" + this._mTotalChar);\n            r *= this._mFreqChar / this._mTotalChar;\n            if( r >= 1.0 ) {\n                r = 0.99;\n            }\n        }\n        return r;\n    }\n\n    reversed = reversed !== undefined ? reversed : false;\n    nameProber = nameProber !== undefined ? nameProber : null;\n    init(model, reversed, nameProber);\n}\njschardet.SingleByteCharSetProber.prototype = new jschardet.CharSetProber();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\n// 255: Control characters that usually does not exist in any text\n// 254: Carriage/Return\n// 253: symbol (punctuation) that does not belong to word\n// 252: 0 - 9\n\n// Character Mapping Table:\njschardet.Latin7_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253, 82,100,104, 94, 98,101,116,102,111,187,117, 92, 88,113, 85,  // 40\n 79,118,105, 83, 67,114,119, 95, 99,109,188,253,253,253,253,253,  // 50\n253, 72, 70, 80, 81, 60, 96, 93, 89, 68,120, 97, 77, 86, 69, 55,  // 60\n 78,115, 65, 66, 58, 76,106,103, 87,107,112,253,253,253,253,253,  // 70\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 80\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 90\n253,233, 90,253,253,253,253,253,253,253,253,253,253, 74,253,253,  // a0\n253,253,253,253,247,248, 61, 36, 46, 71, 73,253, 54,253,108,123,  // b0\n110, 31, 51, 43, 41, 34, 91, 40, 52, 47, 44, 53, 38, 49, 59, 39,  // c0\n 35, 48,250, 37, 33, 45, 56, 50, 84, 57,120,121, 17, 18, 22, 15,  // d0\n124,  1, 29, 20, 21,  3, 32, 13, 25,  5, 11, 16, 10,  6, 30,  4,  // e0\n  9,  8, 14,  7,  2, 12, 28, 23, 42, 24, 64, 75, 19, 26, 27,253   // f0\n];\n\njschardet.win1253_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253, 82,100,104, 94, 98,101,116,102,111,187,117, 92, 88,113, 85,  // 40\n 79,118,105, 83, 67,114,119, 95, 99,109,188,253,253,253,253,253,  // 50\n253, 72, 70, 80, 81, 60, 96, 93, 89, 68,120, 97, 77, 86, 69, 55,  // 60\n 78,115, 65, 66, 58, 76,106,103, 87,107,112,253,253,253,253,253,  // 70\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 80\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 90\n253,233, 61,253,253,253,253,253,253,253,253,253,253, 74,253,253,  // a0\n253,253,253,253,247,253,253, 36, 46, 71, 73,253, 54,253,108,123,  // b0\n110, 31, 51, 43, 41, 34, 91, 40, 52, 47, 44, 53, 38, 49, 59, 39,  // c0\n 35, 48,250, 37, 33, 45, 56, 50, 84, 57,120,121, 17, 18, 22, 15,  // d0\n124,  1, 29, 20, 21,  3, 32, 13, 25,  5, 11, 16, 10,  6, 30,  4,  // e0\n  9,  8, 14,  7,  2, 12, 28, 23, 42, 24, 64, 75, 19, 26, 27,253   // f0\n]\n\n// Model Table:\n// total sequences: 100%\n// first 512 sequences: 98.2851%\n// first 1024 sequences:1.7001%\n// rest  sequences:     0.0359%\n// negative sequences:  0.0148%\njschardet.GreekLangModel = [\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,3,2,2,3,3,3,3,3,3,3,3,1,3,3,3,0,2,2,3,3,0,3,0,3,2,0,3,3,3,0,\n3,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,0,3,3,0,3,2,3,3,0,3,2,3,3,3,0,0,3,0,3,0,3,3,2,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,\n0,2,3,2,2,3,3,3,3,3,3,3,3,0,3,3,3,3,0,2,3,3,0,3,3,3,3,2,3,3,3,0,\n2,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,0,2,1,3,3,3,3,2,3,3,2,3,3,2,0,\n0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,0,3,3,3,3,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,3,0,3,2,3,3,0,\n2,0,1,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,2,3,0,0,0,0,3,3,0,3,1,3,3,3,0,3,3,0,3,3,3,3,0,0,0,0,\n2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,0,3,0,3,3,3,3,3,0,3,2,2,2,3,0,2,3,3,3,3,3,2,3,3,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,3,2,2,2,3,3,3,3,0,3,1,3,3,3,3,2,3,3,3,3,3,3,3,2,2,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,2,0,3,0,0,0,3,3,2,3,3,3,3,3,0,0,3,2,3,0,2,3,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,0,3,3,3,3,0,0,3,3,0,2,3,0,3,0,3,3,3,0,0,3,0,3,0,2,2,3,3,0,0,\n0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,2,0,3,2,3,3,3,3,0,3,3,3,3,3,0,3,3,2,3,2,3,3,2,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,2,3,2,3,3,3,3,3,3,0,2,3,2,3,2,2,2,3,2,3,3,2,3,0,2,2,2,3,0,\n2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,3,0,0,0,3,3,3,2,3,3,0,0,3,0,3,0,0,0,3,2,0,3,0,3,0,0,2,0,2,0,\n0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,0,3,3,3,3,3,3,0,3,3,0,3,0,0,0,3,3,0,3,3,3,0,0,1,2,3,0,\n3,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,2,0,0,3,2,2,3,3,0,3,3,3,3,3,2,1,3,0,3,2,3,3,2,1,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,3,3,0,2,3,3,3,3,3,3,0,0,3,0,3,0,0,0,3,3,0,3,2,3,0,0,3,3,3,0,\n3,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,0,3,3,3,3,3,3,0,0,3,0,3,0,0,0,3,2,0,3,2,3,0,0,3,2,3,0,\n2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,3,1,2,2,3,3,3,3,3,3,0,2,3,0,3,0,0,0,3,3,0,3,0,2,0,0,2,3,1,0,\n2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,0,3,3,3,3,0,3,0,3,3,2,3,0,3,3,3,3,3,3,0,3,3,3,0,2,3,0,0,3,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,0,3,3,3,0,0,3,0,0,0,3,3,0,3,0,2,3,3,0,0,3,0,3,0,3,3,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,3,0,0,0,3,3,3,3,3,3,0,0,3,0,2,0,0,0,3,3,0,3,0,3,0,0,2,0,2,0,\n0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,3,0,3,0,2,0,3,2,0,3,2,3,2,3,0,0,3,2,3,2,3,3,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,3,0,0,2,3,3,3,3,3,0,0,0,3,0,2,1,0,0,3,2,2,2,0,3,0,0,2,2,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,0,3,3,3,2,0,3,0,3,0,3,3,0,2,1,2,3,3,0,0,3,0,3,0,3,3,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,2,3,3,3,0,3,3,3,3,3,3,0,2,3,0,3,0,0,0,2,1,0,2,2,3,0,0,2,2,2,0,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,3,0,0,2,3,3,3,2,3,0,0,1,3,0,2,0,0,0,0,3,0,1,0,2,0,0,1,1,1,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,1,0,3,0,0,0,3,2,0,3,2,3,3,3,0,0,3,0,3,2,2,2,1,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,0,3,3,3,0,0,3,0,0,0,0,2,0,2,3,3,2,2,2,2,3,0,2,0,2,2,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,2,0,0,0,0,0,0,2,3,0,2,0,2,3,2,0,0,3,0,3,0,3,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,3,2,3,3,2,2,3,0,2,0,3,0,0,0,2,0,0,0,0,1,2,0,2,0,2,0,\n0,2,0,2,0,2,2,0,0,1,0,2,2,2,0,2,2,2,0,2,2,2,0,0,2,0,0,1,0,0,0,0,\n0,2,0,3,3,2,0,0,0,0,0,0,1,3,0,2,0,2,2,2,0,0,2,0,3,0,0,2,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,0,2,3,2,0,2,2,0,2,0,2,2,0,2,0,2,2,2,0,0,0,0,0,0,2,3,0,0,0,2,\n0,1,2,0,0,0,0,2,2,0,0,0,2,1,0,2,2,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,\n0,0,2,1,0,2,3,2,2,3,2,3,2,0,0,3,3,3,0,0,3,2,0,0,0,1,1,0,2,0,2,2,\n0,2,0,2,0,2,2,0,0,2,0,2,2,2,0,2,2,2,2,0,0,2,0,0,0,2,0,1,0,0,0,0,\n0,3,0,3,3,2,2,0,3,0,0,0,2,2,0,2,2,2,1,2,0,0,1,2,2,0,0,3,0,0,0,2,\n0,1,2,0,0,0,1,2,0,0,0,0,0,0,0,2,2,0,1,0,0,2,0,0,0,2,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,2,3,3,2,2,0,0,0,2,0,2,3,3,0,2,0,0,0,0,0,0,2,2,2,0,2,2,0,2,0,2,\n0,2,2,0,0,2,2,2,2,1,0,0,2,2,0,2,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,\n0,2,0,3,2,3,0,0,0,3,0,0,2,2,0,2,0,2,2,2,0,0,2,0,0,0,0,0,0,0,0,2,\n0,0,2,2,0,0,2,2,2,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,2,0,0,3,2,0,2,2,2,2,2,0,0,0,2,0,0,0,0,2,0,1,0,0,2,0,1,0,0,0,\n0,2,2,2,0,2,2,0,1,2,0,2,2,2,0,2,2,2,2,1,2,2,0,0,2,0,0,0,0,0,0,0,\n0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\n0,2,0,2,0,2,2,0,0,0,0,1,2,1,0,0,2,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,3,2,3,0,0,2,0,0,0,2,2,0,2,0,0,0,1,0,0,2,0,2,0,2,2,0,0,0,0,\n0,0,2,0,0,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,\n0,2,2,3,2,2,0,0,0,0,0,0,1,3,0,2,0,2,2,0,0,0,1,0,2,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,2,0,2,0,3,2,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n0,0,2,0,0,0,0,1,1,0,0,2,1,2,0,2,2,0,1,0,0,1,0,0,0,2,0,0,0,0,0,0,\n0,3,0,2,2,2,0,0,2,0,0,0,2,0,0,0,2,3,0,2,0,0,0,0,0,0,2,2,0,0,0,2,\n0,1,2,0,0,0,1,2,2,1,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,2,1,2,0,2,2,0,2,0,0,2,0,0,0,0,1,2,1,0,2,1,0,0,0,0,0,0,0,0,0,0,\n0,0,2,0,0,0,3,1,2,2,0,2,0,0,0,0,2,0,0,0,2,0,0,3,0,0,0,0,2,2,2,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,2,1,0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,2,\n0,2,2,0,0,2,2,2,2,2,0,1,2,0,0,0,2,2,0,1,0,2,0,0,2,2,0,0,0,0,0,0,\n0,0,0,0,1,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,\n0,1,2,0,0,0,0,2,2,1,0,1,0,1,0,2,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,\n0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,2,0,0,2,2,0,0,0,0,1,0,0,0,0,0,0,2,\n0,2,2,0,0,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,\n0,2,2,2,2,0,0,0,3,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,1,\n0,0,2,0,0,0,0,1,2,0,0,0,0,0,0,2,2,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,\n0,2,0,2,2,2,0,0,2,0,0,0,0,0,0,0,2,2,2,0,0,0,2,0,0,0,0,0,0,0,0,2,\n0,0,1,0,0,0,0,2,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,\n0,3,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,\n0,0,2,0,0,0,0,2,2,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,2,0,2,2,1,0,0,0,0,0,0,2,0,0,2,0,2,2,2,0,0,0,0,0,0,2,0,0,0,0,2,\n0,0,2,0,0,2,0,2,2,0,0,0,0,2,0,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,\n0,0,3,0,0,0,2,2,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,\n0,2,2,2,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,\n0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\n0,2,0,0,0,2,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,0,0,0,\n0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,2,0,2,0,0,0,\n0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,2,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\n];\n\njschardet.Latin7GreekModel = {\n    \"charToOrderMap\"        : jschardet.Latin7_CharToOrderMap,\n    \"precedenceMatrix\"      : jschardet.GreekLangModel,\n    \"mTypicalPositiveRatio\" : 0.982851,\n    \"keepEnglishLetter\"     : false,\n    \"charsetName\"           : \"ISO-8859-7\"\n};\n\njschardet.Win1253GreekModel = {\n    \"charToOrderMap\"        : jschardet.win1253_CharToOrderMap,\n    \"precedenceMatrix\"      : jschardet.GreekLangModel,\n    \"mTypicalPositiveRatio\" : 0.982851,\n    \"keepEnglishLetter\"     : false,\n    \"charsetName\"           : \"windows-1253\"\n};\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\n// 255: Control characters that usually does not exist in any text\n// 254: Carriage/Return\n// 253: symbol (punctuation) that does not belong to word\n// 252: 0 - 9\n\n// The following result for thai was collected from a limited sample (1M).\n\n// Character Mapping Table:\njschardet.TIS620CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253,182,106,107,100,183,184,185,101, 94,186,187,108,109,110,111,  // 40\n188,189,190, 89, 95,112,113,191,192,193,194,253,253,253,253,253,  // 50\n253, 64, 72, 73,114, 74,115,116,102, 81,201,117, 90,103, 78, 82,  // 60\n 96,202, 91, 79, 84,104,105, 97, 98, 92,203,253,253,253,253,253,  // 70\n209,210,211,212,213, 88,214,215,216,217,218,219,220,118,221,222,\n223,224, 99, 85, 83,225,226,227,228,229,230,231,232,233,234,235,\n236,  5, 30,237, 24,238, 75,  8, 26, 52, 34, 51,119, 47, 58, 57,\n 49, 53, 55, 43, 20, 19, 44, 14, 48,  3, 17, 25, 39, 62, 31, 54,\n 45,  9, 16,  2, 61, 15,239, 12, 42, 46, 18, 21, 76,  4, 66, 63,\n 22, 10,  1, 36, 23, 13, 40, 27, 32, 35, 86,240,241,242,243,244,\n 11, 28, 41, 29, 33,245, 50, 37,  6,  7, 67, 77, 38, 93,246,247,\n 68, 56, 59, 65, 69, 60, 70, 80, 71, 87,248,249,250,251,252,253\n];\n\n// Model Table:\n// total sequences: 100%\n// first 512 sequences: 92.6386%\n// first 1024 sequences:7.3177%\n// rest  sequences:     1.0230%\n// negative sequences:  0.0436%\njschardet.ThaiLangModel = [\n0,1,3,3,3,3,0,0,3,3,0,3,3,0,3,3,3,3,3,3,3,3,0,0,3,3,3,0,3,3,3,3,\n0,3,3,0,0,0,1,3,0,3,3,2,3,3,0,1,2,3,3,3,3,0,2,0,2,0,0,3,2,1,2,2,\n3,0,3,3,2,3,0,0,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,0,3,2,3,0,2,2,2,3,\n0,2,3,0,0,0,0,1,0,1,2,3,1,1,3,2,2,0,1,1,0,0,1,0,0,0,0,0,0,0,1,1,\n3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,3,3,2,3,2,3,3,2,2,2,\n3,1,2,3,0,3,3,2,2,1,2,3,3,1,2,0,1,3,0,1,0,0,1,0,0,0,0,0,0,0,1,1,\n3,3,2,2,3,3,3,3,1,2,3,3,3,3,3,2,2,2,2,3,3,2,2,3,3,2,2,3,2,3,2,2,\n3,3,1,2,3,1,2,2,3,3,1,0,2,1,0,0,3,1,2,1,0,0,1,0,0,0,0,0,0,1,0,1,\n3,3,3,3,3,3,2,2,3,3,3,3,2,3,2,2,3,3,2,2,3,2,2,2,2,1,1,3,1,2,1,1,\n3,2,1,0,2,1,0,1,0,1,1,0,1,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,\n3,3,3,2,3,2,3,3,2,2,3,2,3,3,2,3,1,1,2,3,2,2,2,3,2,2,2,2,2,1,2,1,\n2,2,1,1,3,3,2,1,0,1,2,2,0,1,3,0,0,0,1,1,0,0,0,0,0,2,3,0,0,2,1,1,\n3,3,2,3,3,2,0,0,3,3,0,3,3,0,2,2,3,1,2,2,1,1,1,0,2,2,2,0,2,2,1,1,\n0,2,1,0,2,0,0,2,0,1,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,\n3,3,2,3,3,2,0,0,3,3,0,2,3,0,2,1,2,2,2,2,1,2,0,0,2,2,2,0,2,2,1,1,\n0,2,1,0,2,0,0,2,0,1,1,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,\n3,3,2,3,2,3,2,0,2,2,1,3,2,1,3,2,1,2,3,2,2,3,0,2,3,2,2,1,2,2,2,2,\n1,2,2,0,0,0,0,2,0,1,2,0,1,1,1,0,1,0,3,1,1,0,0,0,0,0,0,0,0,0,1,0,\n3,3,2,3,3,2,3,2,2,2,3,2,2,3,2,2,1,2,3,2,2,3,1,3,2,2,2,3,2,2,2,3,\n3,2,1,3,0,1,1,1,0,2,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,2,0,0,\n1,0,0,3,0,3,3,3,3,3,0,0,3,0,2,2,3,3,3,3,3,0,0,0,1,1,3,0,0,0,0,2,\n0,0,1,0,0,0,0,0,0,0,2,3,0,0,0,3,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,\n2,0,3,3,3,3,0,0,2,3,0,0,3,0,3,3,2,3,3,3,3,3,0,0,3,3,3,0,0,0,3,3,\n0,0,3,0,0,0,0,2,0,0,2,1,1,3,0,0,1,0,0,2,3,0,1,0,0,0,0,0,0,0,1,0,\n3,3,3,3,2,3,3,3,3,3,3,3,1,2,1,3,3,2,2,1,2,2,2,3,1,1,2,0,2,1,2,1,\n2,2,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,\n3,0,2,1,2,3,3,3,0,2,0,2,2,0,2,1,3,2,2,1,2,1,0,0,2,2,1,0,2,1,2,2,\n0,1,1,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,2,1,3,3,1,1,3,0,2,3,1,1,3,2,1,1,2,0,2,2,3,2,1,1,1,1,1,2,\n3,0,0,1,3,1,2,1,2,0,3,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,\n3,3,1,1,3,2,3,3,3,1,3,2,1,3,2,1,3,2,2,2,2,1,3,3,1,2,1,3,1,2,3,0,\n2,1,1,3,2,2,2,1,2,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,\n3,3,2,3,2,3,3,2,3,2,3,2,3,3,2,1,0,3,2,2,2,1,2,2,2,1,2,2,1,2,1,1,\n2,2,2,3,0,1,3,1,1,1,1,0,1,1,0,2,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,2,3,2,2,1,1,3,2,3,2,3,2,0,3,2,2,1,2,0,2,2,2,1,2,2,2,2,1,\n3,2,1,2,2,1,0,2,0,1,0,0,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,2,3,1,2,3,3,2,2,3,0,1,1,2,0,3,3,2,2,3,0,1,1,3,0,0,0,0,\n3,1,0,3,3,0,2,0,2,1,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,2,3,2,3,3,0,1,3,1,1,2,1,2,1,1,3,1,1,0,2,3,1,1,1,1,1,1,1,1,\n3,1,1,2,2,2,2,1,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n3,2,2,1,1,2,1,3,3,2,3,2,2,3,2,2,3,1,2,2,1,2,0,3,2,1,2,2,2,2,2,1,\n3,2,1,2,2,2,1,1,1,1,0,0,1,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,1,3,3,0,2,1,0,3,2,0,0,3,1,0,1,1,0,1,0,0,0,0,0,1,\n1,0,0,1,0,3,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,2,2,2,3,0,0,1,3,0,3,2,0,3,2,2,3,3,3,3,3,1,0,2,2,2,0,2,2,1,2,\n0,2,3,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n3,0,2,3,1,3,3,2,3,3,0,3,3,0,3,2,2,3,2,3,3,3,0,0,2,2,3,0,1,1,1,3,\n0,0,3,0,0,0,2,2,0,1,3,0,1,2,2,2,3,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,\n3,2,3,3,2,0,3,3,2,2,3,1,3,2,1,3,2,0,1,2,2,0,2,3,2,1,0,3,0,0,0,0,\n3,0,0,2,3,1,3,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,3,2,2,2,1,2,0,1,3,1,1,3,1,3,0,0,2,1,1,1,1,2,1,1,1,0,2,1,0,1,\n1,2,0,0,0,3,1,1,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0,3,1,0,0,0,1,0,\n3,3,3,3,2,2,2,2,2,1,3,1,1,1,2,0,1,1,2,1,2,1,3,2,0,0,3,1,1,1,1,1,\n3,1,0,2,3,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,2,3,0,3,3,0,2,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,2,3,1,3,0,0,1,2,0,0,2,0,3,3,2,3,3,3,2,3,0,0,2,2,2,0,0,0,2,2,\n0,0,1,0,0,0,0,3,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n0,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,1,2,3,1,3,3,0,0,1,0,3,0,0,0,0,0,\n0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,1,2,3,1,2,3,1,0,3,0,2,2,1,0,2,1,1,2,0,1,0,0,1,1,1,1,0,1,0,0,\n1,0,0,0,0,1,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,2,1,0,1,1,1,3,1,2,2,2,2,2,2,1,1,1,1,0,3,1,0,1,3,1,1,1,1,\n1,1,0,2,0,1,3,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,\n3,0,2,2,1,3,3,2,3,3,0,1,1,0,2,2,1,2,1,3,3,1,0,0,3,2,0,0,0,0,2,1,\n0,1,0,0,0,0,1,2,0,1,1,3,1,1,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\n0,0,3,0,0,1,0,0,0,3,0,0,3,0,3,1,0,1,1,1,3,2,0,0,0,3,0,0,0,0,2,0,\n0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,\n3,3,1,3,2,1,3,3,1,2,2,0,1,2,1,0,1,2,0,0,0,0,0,3,0,0,0,3,0,0,0,0,\n3,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,1,2,0,3,3,3,2,2,0,1,1,0,1,3,0,0,0,2,2,0,0,0,0,3,1,0,1,0,0,0,\n0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,2,3,1,2,0,0,2,1,0,3,1,0,1,2,0,1,1,1,1,3,0,0,3,1,1,0,2,2,1,1,\n0,2,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,0,3,1,2,0,0,2,2,0,1,2,0,1,0,1,3,1,2,1,0,0,0,2,0,3,0,0,0,1,0,\n0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,1,1,2,2,0,0,0,2,0,2,1,0,1,1,0,1,1,1,2,1,0,0,1,1,1,0,2,1,1,1,\n0,1,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,\n0,0,0,2,0,1,3,1,1,1,1,0,0,0,0,3,2,0,1,0,0,0,1,2,0,0,0,1,0,0,0,0,\n0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,2,3,2,2,0,0,0,1,0,0,0,0,2,3,2,1,2,2,3,0,0,0,2,3,1,0,0,0,1,1,\n0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,\n3,3,2,2,0,1,0,0,0,0,2,0,2,0,1,0,0,0,1,1,0,0,0,2,1,0,1,0,1,1,0,0,\n0,1,0,2,0,0,1,0,3,0,1,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,1,0,0,1,0,0,0,0,0,1,1,2,0,0,0,0,1,0,0,1,3,1,0,0,0,0,1,1,0,0,\n0,1,0,0,0,0,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,\n3,3,1,1,1,1,2,3,0,0,2,1,1,1,1,1,0,2,1,1,0,0,0,2,1,0,1,2,1,1,0,1,\n2,1,0,3,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,3,1,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,\n0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,2,0,0,0,0,0,0,1,2,1,0,1,1,0,2,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,2,0,0,0,1,3,0,1,0,0,0,2,0,0,0,0,0,0,0,1,2,0,0,0,0,0,\n3,3,0,0,1,1,2,0,0,1,2,1,0,1,1,1,0,1,1,0,0,2,1,1,0,1,0,0,1,1,1,0,\n0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,2,2,1,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,\n2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,3,0,0,1,1,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,1,0,1,2,0,1,2,0,0,1,1,0,2,0,1,0,0,1,0,0,0,0,1,0,0,0,2,0,0,0,0,\n1,0,0,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,2,1,3,0,0,0,0,1,1,0,0,0,0,0,0,0,3,\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,0,1,0,1,0,0,2,0,0,2,0,0,1,1,2,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,\n1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,3,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,\n1,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,1,1,0,0,2,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\n];\n\njschardet.TIS620ThaiModel = {\n    \"charToOrderMap\"        : jschardet.TIS620CharToOrderMap,\n    \"precedenceMatrix\"      : jschardet.ThaiLangModel,\n    \"mTypicalPositiveRatio\" : 0.926386,\n    \"keepEnglishLetter\"     : false,\n    \"charsetName\"           : \"TIS-620\"\n};\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\n// 255: Control characters that usually does not exist in any text\n// 254: Carriage/Return\n// 253: symbol (punctuation) that does not belong to word\n// 252: 0 - 9\n\n// Character Mapping Table:\n// this table is modified base on win1251BulgarianCharToOrderMap, so\n// only number <64 is sure valid\n\njschardet.Latin5_BulgarianCharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253, 77, 90, 99,100, 72,109,107,101, 79,185, 81,102, 76, 94, 82,  // 40\n110,186,108, 91, 74,119, 84, 96,111,187,115,253,253,253,253,253,  // 50\n253, 65, 69, 70, 66, 63, 68,112,103, 92,194,104, 95, 86, 87, 71,  // 60\n116,195, 85, 93, 97,113,196,197,198,199,200,253,253,253,253,253,  // 70\n194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,  // 80\n210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,  // 90\n 81,226,227,228,229,230,105,231,232,233,234,235,236, 45,237,238,  // a0\n 31, 32, 35, 43, 37, 44, 55, 47, 40, 59, 33, 46, 38, 36, 41, 30,  // b0\n 39, 28, 34, 51, 48, 49, 53, 50, 54, 57, 61,239, 67,240, 60, 56,  // c0\n  1, 18,  9, 20, 11,  3, 23, 15,  2, 26, 12, 10, 14,  6,  4, 13,  // d0\n  7,  8,  5, 19, 29, 25, 22, 21, 27, 24, 17, 75, 52,241, 42, 16,  // e0\n 62,242,243,244, 58,245, 98,246,247,248,249,250,251, 91,252,253   // f0\n];\n\njschardet.win1251BulgarianCharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253, 77, 90, 99,100, 72,109,107,101, 79,185, 81,102, 76, 94, 82,  // 40\n110,186,108, 91, 74,119, 84, 96,111,187,115,253,253,253,253,253,  // 50\n253, 65, 69, 70, 66, 63, 68,112,103, 92,194,104, 95, 86, 87, 71,  // 60\n116,195, 85, 93, 97,113,196,197,198,199,200,253,253,253,253,253,  // 70\n206,207,208,209,210,211,212,213,120,214,215,216,217,218,219,220,  // 80\n221, 78, 64, 83,121, 98,117,105,222,223,224,225,226,227,228,229,  // 90\n 88,230,231,232,233,122, 89,106,234,235,236,237,238, 45,239,240,  // a0\n 73, 80,118,114,241,242,243,244,245, 62, 58,246,247,248,249,250,  // b0\n 31, 32, 35, 43, 37, 44, 55, 47, 40, 59, 33, 46, 38, 36, 41, 30,  // c0\n 39, 28, 34, 51, 48, 49, 53, 50, 54, 57, 61,251, 67,252, 60, 56,  // d0\n  1, 18,  9, 20, 11,  3, 23, 15,  2, 26, 12, 10, 14,  6,  4, 13,  // e0\n  7,  8,  5, 19, 29, 25, 22, 21, 27, 24, 17, 75, 52,253, 42, 16   // f0\n];\n\n// Model Table:\n// total sequences: 100%\n// first 512 sequences: 96.9392%\n// first 1024 sequences:3.0618%\n// rest  sequences:     0.2992%\n// negative sequences:  0.0020%\njschardet.BulgarianLangModel = [\n0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,2,2,3,2,2,1,2,2,\n3,1,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,0,3,0,1,\n0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,3,3,3,3,0,3,1,0,\n0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,3,3,3,3,3,3,3,0,3,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,3,3,3,3,3,3,3,0,3,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,2,3,2,2,1,3,3,3,3,2,2,2,1,1,2,0,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,2,3,2,2,3,3,1,1,2,3,3,2,3,3,3,3,2,1,2,0,2,0,3,0,0,\n0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,1,3,3,3,3,3,2,3,2,3,3,3,3,3,2,3,3,1,3,0,3,0,2,0,0,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,3,1,3,3,2,3,3,3,1,3,3,2,3,2,2,2,0,0,2,0,2,0,2,0,0,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,3,3,0,3,3,3,2,2,3,3,3,1,2,2,3,2,1,1,2,0,2,0,0,0,0,\n1,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,2,3,3,1,2,3,2,2,2,3,3,3,3,3,2,2,3,1,2,0,2,1,2,0,0,\n0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,1,3,3,3,3,3,2,3,3,3,2,3,3,2,3,2,2,2,3,1,2,0,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,3,3,3,3,1,1,1,2,2,1,3,1,3,2,2,3,0,0,1,0,1,0,1,0,0,\n0,0,0,1,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,2,2,3,2,2,3,1,2,1,1,1,2,3,1,3,1,2,2,0,1,1,1,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,1,3,2,2,3,3,1,2,3,1,1,3,3,3,3,1,2,2,1,1,1,0,2,0,2,0,1,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,2,3,3,3,2,2,1,1,2,0,2,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,0,1,2,1,3,3,2,3,3,3,3,3,2,3,2,1,0,3,1,2,1,2,1,2,3,2,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,1,3,3,2,3,3,2,2,2,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,3,3,3,3,0,3,3,3,3,3,2,1,1,2,1,3,3,0,3,1,1,1,1,3,2,0,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,1,1,3,1,3,3,2,3,2,2,2,3,0,2,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,2,3,3,2,2,3,2,1,1,1,1,1,3,1,3,1,1,0,0,0,1,0,0,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,2,3,2,0,3,2,0,3,0,2,0,0,2,1,3,1,0,0,1,0,0,0,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,2,1,1,1,1,2,1,1,2,1,1,1,2,2,1,2,1,1,1,0,1,1,0,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,2,1,3,1,1,2,1,3,2,1,1,0,1,2,3,2,1,1,1,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,3,3,3,3,2,2,1,0,1,0,0,1,0,0,0,2,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,2,3,2,3,3,1,3,2,1,1,1,2,1,1,2,1,3,0,1,0,0,0,1,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,1,2,2,3,3,2,3,2,2,2,3,1,2,2,1,1,2,1,1,2,2,0,1,1,0,1,0,2,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,2,1,3,1,0,2,2,1,3,2,1,0,0,2,0,2,0,1,0,0,0,0,0,0,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,1,2,0,2,3,1,2,3,2,0,1,3,1,2,1,1,1,0,0,1,0,0,2,2,2,3,\n2,2,2,2,1,2,1,1,2,2,1,1,2,0,1,1,1,0,0,1,1,0,0,1,1,0,0,0,1,1,0,1,\n3,3,3,3,3,2,1,2,2,1,2,0,2,0,1,0,1,2,1,2,1,1,0,0,0,1,0,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,\n3,3,2,3,3,1,1,3,1,0,3,2,1,0,0,0,1,2,0,2,0,1,0,0,0,1,0,1,2,1,2,2,\n1,1,1,1,1,1,1,2,2,2,1,1,1,1,1,1,1,0,1,2,1,1,1,0,0,0,0,0,1,1,0,0,\n3,1,0,1,0,2,3,2,2,2,3,2,2,2,2,2,1,0,2,1,2,1,1,1,0,1,2,1,2,2,2,1,\n1,1,2,2,2,2,1,2,1,1,0,1,2,1,2,2,2,1,1,1,0,1,1,1,1,2,0,1,0,0,0,0,\n2,3,2,3,3,0,0,2,1,0,2,1,0,0,0,0,2,3,0,2,0,0,0,0,0,1,0,0,2,0,1,2,\n2,1,2,1,2,2,1,1,1,2,1,1,1,0,1,2,2,1,1,1,1,1,0,1,1,1,0,0,1,2,0,0,\n3,3,2,2,3,0,2,3,1,1,2,0,0,0,1,0,0,2,0,2,0,0,0,1,0,1,0,1,2,0,2,2,\n1,1,1,1,2,1,0,1,2,2,2,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,\n2,3,2,3,3,0,0,3,0,1,1,0,1,0,0,0,2,2,1,2,0,0,0,0,0,0,0,0,2,0,1,2,\n2,2,1,1,1,1,1,2,2,2,1,0,2,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,1,0,0,\n3,3,3,3,2,2,2,2,2,0,2,1,1,1,1,2,1,2,1,1,0,2,0,1,0,1,0,0,2,0,1,2,\n1,1,1,1,1,1,1,2,2,1,1,0,2,0,1,0,2,0,0,1,1,1,0,0,2,0,0,0,1,1,0,0,\n2,3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,0,0,0,1,2,0,1,2,\n2,2,2,1,1,2,1,1,2,2,2,1,2,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,0,\n2,3,3,3,3,0,2,2,0,2,1,0,0,0,1,1,1,2,0,2,0,0,0,3,0,0,0,0,2,0,2,2,\n1,1,1,2,1,2,1,1,2,2,2,1,2,0,1,1,1,0,1,1,1,1,0,2,1,0,0,0,1,1,0,0,\n2,3,3,3,3,0,2,1,0,0,2,0,0,0,0,0,1,2,0,2,0,0,0,0,0,0,0,0,2,0,1,2,\n1,1,1,2,1,1,1,1,2,2,2,0,1,0,1,1,1,0,0,1,1,1,0,0,1,0,0,0,0,1,0,0,\n3,3,2,2,3,0,1,0,1,0,0,0,0,0,0,0,1,1,0,3,0,0,0,0,0,0,0,0,1,0,2,2,\n1,1,1,1,1,2,1,1,2,2,1,2,2,1,0,1,1,1,1,1,0,1,0,0,1,0,0,0,1,1,0,0,\n3,1,0,1,0,2,2,2,2,3,2,1,1,1,2,3,0,0,1,0,2,1,1,0,1,1,1,1,2,1,1,1,\n1,2,2,1,2,1,2,2,1,1,0,1,2,1,2,2,1,1,1,0,0,1,1,1,2,1,0,1,0,0,0,0,\n2,1,0,1,0,3,1,2,2,2,2,1,2,2,1,1,1,0,2,1,2,2,1,1,2,1,1,0,2,1,1,1,\n1,2,2,2,2,2,2,2,1,2,0,1,1,0,2,1,1,1,1,1,0,0,1,1,1,1,0,1,0,0,0,0,\n2,1,1,1,1,2,2,2,2,1,2,2,2,1,2,2,1,1,2,1,2,3,2,2,1,1,1,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,2,2,3,2,0,1,2,0,1,2,1,1,0,1,0,1,2,1,2,0,0,0,1,1,0,0,0,1,0,0,2,\n1,1,0,0,1,1,0,1,1,1,1,0,2,0,1,1,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,\n2,0,0,0,0,1,2,2,2,2,2,2,2,1,2,1,1,1,1,1,1,1,0,1,1,1,1,1,2,1,1,1,\n1,2,2,2,2,1,1,2,1,2,1,1,1,0,2,1,2,1,1,1,0,2,1,1,1,1,0,1,0,0,0,0,\n3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,\n1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,2,2,3,2,0,0,0,0,1,0,0,0,0,0,0,1,1,0,2,0,0,0,0,0,0,0,0,1,0,1,2,\n1,1,1,1,1,1,0,0,2,2,2,2,2,0,1,1,0,1,1,1,1,1,0,0,1,0,0,0,1,1,0,1,\n2,3,1,2,1,0,1,1,0,2,2,2,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,1,2,\n1,1,1,1,2,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,\n2,2,2,2,2,0,0,2,0,0,2,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,0,2,2,\n1,1,1,1,1,0,0,1,2,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,\n1,2,2,2,2,0,0,2,0,1,1,0,0,0,1,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,1,1,\n0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n1,2,2,3,2,0,0,1,0,0,1,0,0,0,0,0,0,1,0,2,0,0,0,1,0,0,0,0,0,0,0,2,\n1,1,0,0,1,0,0,0,1,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,\n2,1,2,2,2,1,2,1,2,2,1,1,2,1,1,1,0,1,1,1,1,2,0,1,0,1,1,1,1,0,1,1,\n1,1,2,1,1,1,1,1,1,0,0,1,2,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,\n1,0,0,1,3,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,2,2,2,1,0,0,1,0,2,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,2,0,0,1,\n0,2,0,1,0,0,1,1,2,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,\n1,2,2,2,2,0,1,1,0,2,1,0,1,1,1,0,0,1,0,2,0,1,0,0,0,0,0,0,0,0,0,1,\n0,1,0,0,1,0,0,0,1,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,\n2,2,2,2,2,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,\n0,1,0,1,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,\n2,0,1,0,0,1,2,1,1,1,1,1,1,2,2,1,0,0,1,0,1,0,0,0,0,1,1,1,1,0,0,0,\n1,1,2,1,1,1,1,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,2,1,2,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,\n0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,\n0,1,1,0,1,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,\n1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,2,0,0,2,0,1,0,0,1,0,0,1,\n1,1,0,0,1,1,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,\n1,1,1,1,1,1,1,2,0,0,0,0,0,0,2,1,0,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\n];\n\njschardet.Latin5BulgarianModel = {\n    \"charToOrderMap\"        : jschardet.Latin5_BulgarianCharToOrderMap,\n    \"precedenceMatrix\"      : jschardet.BulgarianLangModel,\n    \"mTypicalPositiveRatio\" : 0.969392,\n    \"keepEnglishLetter\"     : false,\n    \"charsetName\"           : \"ISO-8859-5\"\n};\n\njschardet.Win1251BulgarianModel = {\n    \"charToOrderMap\"        : jschardet.win1251BulgarianCharToOrderMap,\n    \"precedenceMatrix\"      : jschardet.BulgarianLangModel,\n    \"mTypicalPositiveRatio\" : 0.969392,\n    \"keepEnglishLetter\"     : false,\n    \"charsetName\"           : \"windows-1251\"\n};\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\n// KOI8-R language model\n// Character Mapping Table:\njschardet.KOI8R_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\n191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,  // 80\n207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,  // 90\n223,224,225, 68,226,227,228,229,230,231,232,233,234,235,236,237,  // a0\n238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,  // b0\n 27,  3, 21, 28, 13,  2, 39, 19, 26,  4, 23, 11,  8, 12,  5,  1,  // c0\n 15, 16,  9,  7,  6, 14, 24, 10, 17, 18, 20, 25, 30, 29, 22, 54,  // d0\n 59, 37, 44, 58, 41, 48, 53, 46, 55, 42, 60, 36, 49, 38, 31, 34,  // e0\n 35, 43, 45, 32, 40, 52, 56, 33, 61, 62, 51, 57, 47, 63, 50, 70   // f0\n];\n\njschardet.win1251_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\n191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,\n207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,\n223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,\n239,240,241,242,243,244,245,246, 68,247,248,249,250,251,252,253,\n 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,\n 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,\n  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,\n  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16\n];\n\njschardet.latin5_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\n191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,\n207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,\n223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,\n 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,\n 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,\n  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,\n  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16,\n239, 68,240,241,242,243,244,245,246,247,248,249,250,251,252,255\n];\n\njschardet.macCyrillic_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\n 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,\n 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,\n191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,\n207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,\n223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,\n239,240,241,242,243,244,245,246,247,248,249,250,251,252, 68, 16,\n  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,\n  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27,255\n];\n\njschardet.IBM855_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\n191,192,193,194, 68,195,196,197,198,199,200,201,202,203,204,205,\n206,207,208,209,210,211,212,213,214,215,216,217, 27, 59, 54, 70,\n  3, 37, 21, 44, 28, 58, 13, 41,  2, 48, 39, 53, 19, 46,218,219,\n220,221,222,223,224, 26, 55,  4, 42,225,226,227,228, 23, 60,229,\n230,231,232,233,234,235, 11, 36,236,237,238,239,240,241,242,243,\n  8, 49, 12, 38,  5, 31,  1, 34, 15,244,245,246,247, 35, 16,248,\n 43,  9, 45,  7, 32,  6, 40, 14, 52, 24, 56, 10, 33, 17, 61,249,\n250, 18, 62, 20, 51, 25, 57, 30, 47, 29, 63, 22, 50,251,252,255\n];\n\njschardet.IBM866_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\n 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,\n 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,\n  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,\n191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,\n207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,\n223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,\n  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16,\n239, 68,240,241,242,243,244,245,246,247,248,249,250,251,252,255\n];\n\n// Model Table:\n// total sequences: 100%\n// first 512 sequences: 97.6601%\n// first 1024 sequences: 2.3389%\n// rest  sequences:      0.1237%\n// negative sequences:   0.0009%\njschardet.RussianLangModel = [\n0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,3,3,3,3,1,3,3,3,2,3,2,3,3,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,2,2,2,2,2,0,0,2,\n3,3,3,2,3,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,3,2,3,2,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,2,2,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,2,3,3,1,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,2,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,\n0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,\n0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,2,2,2,3,1,3,3,1,3,3,3,3,2,2,3,0,2,2,2,3,3,2,1,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,3,3,3,3,3,2,2,3,2,3,3,3,2,1,2,2,0,1,2,2,2,2,2,2,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,3,0,2,2,3,3,2,1,2,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,3,3,1,2,3,2,2,3,2,3,3,3,3,2,2,3,0,3,2,2,3,1,1,1,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,2,3,3,3,3,2,2,2,0,3,3,3,2,2,2,2,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,3,3,2,3,2,2,0,1,3,2,1,2,2,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,2,1,1,3,0,1,1,1,1,2,1,1,0,2,2,2,1,2,0,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,3,3,2,2,2,2,1,3,2,3,2,3,2,1,2,2,0,1,1,2,1,2,1,2,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,2,3,3,3,2,2,2,2,0,2,2,2,2,3,1,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n3,2,3,2,2,3,3,3,3,3,3,3,3,3,1,3,2,0,0,3,3,3,3,2,3,3,3,3,2,3,2,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,3,3,3,3,3,2,2,3,3,0,2,1,0,3,2,3,2,3,0,0,1,2,0,0,1,0,1,2,1,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,3,0,2,3,3,3,3,2,3,3,3,3,1,2,2,0,0,2,3,2,2,2,3,2,3,2,2,3,0,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,2,3,0,2,3,2,3,0,1,2,3,3,2,0,2,3,0,0,2,3,2,2,0,1,3,1,3,2,2,1,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,3,0,2,3,3,3,3,3,3,3,3,2,1,3,2,0,0,2,2,3,3,3,2,3,3,0,2,2,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,2,3,3,2,2,2,3,3,0,0,1,1,1,1,1,2,0,0,1,1,1,1,0,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,0,3,2,3,3,2,3,2,0,2,1,0,1,1,0,1,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,3,3,3,2,2,2,2,3,1,3,2,3,1,1,2,1,0,2,2,2,2,1,3,1,0,\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n2,2,3,3,3,3,3,1,2,2,1,3,1,0,3,0,0,3,0,0,0,1,1,0,1,2,1,0,0,0,0,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,2,2,1,1,3,3,3,2,2,1,2,2,3,1,1,2,0,0,2,2,1,3,0,0,2,1,1,2,1,1,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,2,3,3,3,3,1,2,2,2,1,2,1,3,3,1,1,2,1,2,1,2,2,0,2,0,0,1,1,0,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,3,3,3,3,3,2,1,3,2,2,3,2,0,3,2,0,3,0,1,0,1,1,0,0,1,1,1,1,0,1,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,2,3,3,3,2,2,2,3,3,1,2,1,2,1,0,1,0,1,1,0,1,0,0,2,1,1,1,0,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,\n3,1,1,2,1,2,3,3,2,2,1,2,2,3,0,2,1,0,0,2,2,3,2,1,2,2,2,2,2,3,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,1,1,0,1,1,2,2,1,1,3,0,0,1,3,1,1,1,0,0,0,1,0,1,1,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,1,3,3,3,2,0,0,0,2,1,0,1,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,0,1,0,0,2,3,2,2,2,1,2,2,2,1,2,1,0,0,1,1,1,0,2,0,1,1,1,0,0,1,1,\n1,0,0,0,0,0,1,2,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,\n2,3,3,3,3,0,0,0,0,1,0,0,0,0,3,0,1,2,1,0,0,0,0,0,0,0,1,1,0,0,1,1,\n1,0,1,0,1,2,0,0,1,1,2,1,0,1,1,1,1,0,1,1,1,1,0,1,0,0,1,0,0,1,1,0,\n2,2,3,2,2,2,3,1,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,0,1,0,1,1,1,0,2,1,\n1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,0,1,1,0,\n3,3,3,2,2,2,2,3,2,2,1,1,2,2,2,2,1,1,3,1,2,1,2,0,0,1,1,0,1,0,2,1,\n1,1,1,1,1,2,1,0,1,1,1,1,0,1,0,0,1,1,0,0,1,0,1,0,0,1,0,0,0,1,1,0,\n2,0,0,1,0,3,2,2,2,2,1,2,1,2,1,2,0,0,0,2,1,2,2,1,1,2,2,0,1,1,0,2,\n1,1,1,1,1,0,1,1,1,2,1,1,1,2,1,0,1,2,1,1,1,1,0,1,1,1,0,0,1,0,0,1,\n1,3,2,2,2,1,1,1,2,3,0,0,0,0,2,0,2,2,1,0,0,0,0,0,0,1,0,0,0,0,1,1,\n1,0,1,1,0,1,0,1,1,0,1,1,0,2,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,\n2,3,2,3,2,1,2,2,2,2,1,0,0,0,2,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,2,1,\n1,1,2,1,0,2,0,0,1,0,1,0,0,1,0,0,1,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,\n3,0,0,1,0,2,2,2,3,2,2,2,2,2,2,2,0,0,0,2,1,2,1,1,1,2,2,0,0,0,1,2,\n1,1,1,1,1,0,1,2,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,\n2,3,2,3,3,2,0,1,1,1,0,0,1,0,2,0,1,1,3,1,0,0,0,0,0,0,0,1,0,0,2,1,\n1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,1,0,0,1,1,0,1,0,0,0,0,0,0,1,0,\n2,3,3,3,3,1,2,2,2,2,0,1,1,0,2,1,1,1,2,1,0,1,1,0,0,1,0,1,0,0,2,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,3,3,3,2,0,0,1,1,2,2,1,0,0,2,0,1,1,3,0,0,1,0,0,0,0,0,1,0,1,2,1,\n1,1,2,0,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,0,1,0,0,0,0,0,0,1,0,1,1,0,\n1,3,2,3,2,1,0,0,2,2,2,0,1,0,2,0,1,1,1,0,1,0,0,0,3,0,1,1,0,0,2,1,\n1,1,1,0,1,1,0,0,0,0,1,1,0,1,0,0,2,1,1,0,1,0,0,0,1,0,1,0,0,1,1,0,\n3,1,2,1,1,2,2,2,2,2,2,1,2,2,1,1,0,0,0,2,2,2,0,0,0,1,2,1,0,1,0,1,\n2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,0,1,0,1,1,0,1,1,1,0,0,1,\n3,0,0,0,0,2,0,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,0,1,0,1,1,0,0,1,0,1,\n1,1,0,0,1,0,0,0,1,0,1,1,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,\n1,3,3,2,2,0,0,0,2,2,0,0,0,1,2,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,2,1,\n0,1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,\n2,3,2,3,2,0,0,0,0,1,1,0,0,0,2,0,2,0,2,0,0,0,0,0,1,0,0,1,0,0,1,1,\n1,1,2,0,1,2,1,0,1,1,2,1,1,1,1,1,2,1,1,0,1,0,0,1,1,1,1,1,0,1,1,0,\n1,3,2,2,2,1,0,0,2,2,1,0,1,2,2,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,1,\n0,0,1,1,0,1,1,0,0,1,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,1,0,2,3,1,2,2,2,2,2,2,1,1,0,0,0,1,0,1,0,2,1,1,1,0,0,0,0,1,\n1,1,0,1,1,0,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,\n2,0,2,0,0,1,0,3,2,1,2,1,2,2,0,1,0,0,0,2,1,0,0,2,1,1,1,1,0,2,0,2,\n2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,0,1,1,1,1,0,0,0,1,1,1,1,0,1,0,0,1,\n1,2,2,2,2,1,0,0,1,0,0,0,0,0,2,0,1,1,1,1,0,0,0,0,1,0,1,2,0,0,2,0,\n1,0,1,1,1,2,1,0,1,0,1,1,0,0,1,0,1,1,1,0,1,0,0,0,1,0,0,1,0,1,1,0,\n2,1,2,2,2,0,3,0,1,1,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n0,0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,\n1,2,2,3,2,2,0,0,1,1,2,0,1,2,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,\n0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,\n2,2,1,1,2,1,2,2,2,2,2,1,2,2,0,1,0,0,0,1,2,2,2,1,2,1,1,1,1,1,2,1,\n1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,0,1,\n1,2,2,2,2,0,1,0,2,2,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,\n0,0,1,0,0,1,0,0,0,0,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,2,2,2,2,0,0,0,2,2,2,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,\n0,1,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,2,2,2,2,0,0,0,0,1,0,0,1,1,2,0,0,0,0,1,0,1,0,0,1,0,0,2,0,0,0,1,\n0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,\n1,2,2,2,1,1,2,0,2,1,1,1,1,0,2,2,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,\n0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n1,0,2,1,2,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,\n0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,\n1,0,0,0,0,2,0,1,2,1,0,1,1,1,0,1,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,1,\n0,0,0,0,0,1,0,0,1,1,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,\n2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n1,1,1,0,1,0,1,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n1,1,0,1,1,0,1,0,1,0,0,0,0,1,1,0,1,1,0,0,0,0,0,1,0,1,1,0,1,0,0,0,\n0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0\n];\n\njschardet.Koi8rModel = {\n    \"charToOrderMap\"          : jschardet.KOI8R_CharToOrderMap,\n    \"precedenceMatrix\"        : jschardet.RussianLangModel,\n    \"mTypicalPositiveRatio\"   : 0.976601,\n    \"keepEnglishLetter\"       : false,\n    \"charsetName\"             : \"KOI8-R\"\n};\n\njschardet.Win1251CyrillicModel = {\n    \"charToOrderMap\"          : jschardet.win1251_CharToOrderMap,\n    \"precedenceMatrix\"        : jschardet.RussianLangModel,\n    \"mTypicalPositiveRatio\"   : 0.976601,\n    \"keepEnglishLetter\"       : false,\n    \"charsetName\"             : \"windows-1251\"\n};\n\njschardet.Latin5CyrillicModel = {\n    \"charToOrderMap\"          : jschardet.latin5_CharToOrderMap,\n    \"precedenceMatrix\"        : jschardet.RussianLangModel,\n    \"mTypicalPositiveRatio\"   : 0.976601,\n    \"keepEnglishLetter\"       : false,\n    \"charsetName\"             : \"ISO-8859-5\"\n};\n\njschardet.MacCyrillicModel = {\n    \"charToOrderMap\"          : jschardet.macCyrillic_CharToOrderMap,\n    \"precedenceMatrix\"        : jschardet.RussianLangModel,\n    \"mTypicalPositiveRatio\"   : 0.976601,\n    \"keepEnglishLetter\"       : false,\n    \"charsetName\"             : \"MacCyrillic\"\n};\n\njschardet.Ibm866Model = {\n    \"charToOrderMap\"          : jschardet.IBM866_CharToOrderMap,\n    \"precedenceMatrix\"        : jschardet.RussianLangModel,\n    \"mTypicalPositiveRatio\"   : 0.976601,\n    \"keepEnglishLetter\"       : false,\n    \"charsetName\"             : \"IBM866\"\n};\n\njschardet.Ibm855Model = {\n    \"charToOrderMap\"          : jschardet.IBM855_CharToOrderMap,\n    \"precedenceMatrix\"        : jschardet.RussianLangModel,\n    \"mTypicalPositiveRatio\"   : 0.976601,\n    \"keepEnglishLetter\"       : false,\n    \"charsetName\"             : \"IBM855\"\n};\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\n// This prober doesn't actually recognize a language or a charset.\n// It is a helper prober for the use of the Hebrew model probers\n\n////// General ideas of the Hebrew charset recognition //////\n//\n// Four main charsets exist in Hebrew:\n// \"ISO-8859-8\" - Visual Hebrew\n// \"windows-1255\" - Logical Hebrew\n// \"ISO-8859-8-I\" - Logical Hebrew\n// \"x-mac-hebrew\" - ?? Logical Hebrew ??\n//\n// Both \"ISO\" charsets use a completely identical set of code points, whereas\n// \"windows-1255\" and \"x-mac-hebrew\" are two different proper supersets of\n// these code points. windows-1255 defines additional characters in the range\n// 0x80-0x9F as some misc punctuation marks as well as some Hebrew-specific\n// diacritics and additional 'Yiddish' ligature letters in the range 0xc0-0xd6.\n// x-mac-hebrew defines similar additional code points but with a different\n// mapping.\n//\n// As far as an average Hebrew text with no diacritics is concerned, all four\n// charsets are identical with respect to code points. Meaning that for the\n// main Hebrew alphabet, all four map the same values to all 27 Hebrew letters\n// (including final letters).\n//\n// The dominant difference between these charsets is their directionality.\n// \"Visual\" directionality means that the text is ordered as if the renderer is\n// not aware of a BIDI rendering algorithm. The renderer sees the text and\n// draws it from left to right. The text itself when ordered naturally is read\n// backwards. A buffer of Visual Hebrew generally looks like so:\n// \"[last word of first line spelled backwards] [whole line ordered backwards\n// and spelled backwards] [first word of first line spelled backwards]\n// [end of line] [last word of second line] ... etc' \"\n// adding punctuation marks, numbers and English text to visual text is\n// naturally also \"visual\" and from left to right.\n//\n// \"Logical\" directionality means the text is ordered \"naturally\" according to\n// the order it is read. It is the responsibility of the renderer to display\n// the text from right to left. A BIDI algorithm is used to place general\n// punctuation marks, numbers and English text in the text.\n//\n// Texts in x-mac-hebrew are almost impossible to find on the Internet. From\n// what little evidence I could find, it seems that its general directionality\n// is Logical.\n//\n// To sum up all of the above, the Hebrew probing mechanism knows about two\n// charsets:\n// Visual Hebrew - \"ISO-8859-8\" - backwards text - Words and sentences are\n//    backwards while line order is natural. For charset recognition purposes\n//    the line order is unimportant (In fact, for this implementation, even\n//    word order is unimportant).\n// Logical Hebrew - \"windows-1255\" - normal, naturally ordered text.\n//\n// \"ISO-8859-8-I\" is a subset of windows-1255 and doesn't need to be\n//    specifically identified.\n// \"x-mac-hebrew\" is also identified as windows-1255. A text in x-mac-hebrew\n//    that contain special punctuation marks or diacritics is displayed with\n//    some unconverted characters showing as question marks. This problem might\n//    be corrected using another model prober for x-mac-hebrew. Due to the fact\n//    that x-mac-hebrew texts are so rare, writing another model prober isn't\n//    worth the effort and performance hit.\n//\n//////// The Prober ////////\n//\n// The prober is divided between two SBCharSetProbers and a HebrewProber,\n// all of which are managed, created, fed data, inquired and deleted by the\n// SBCSGroupProber. The two SBCharSetProbers identify that the text is in\n// fact some kind of Hebrew, Logical or Visual. The final decision about which\n// one is it is made by the HebrewProber by combining final-letter scores\n// with the scores of the two SBCharSetProbers to produce a final answer.\n//\n// The SBCSGroupProber is responsible for stripping the original text of HTML\n// tags, English characters, numbers, low-ASCII punctuation characters, spaces\n// and new lines. It reduces any sequence of such characters to a single space.\n// The buffer fed to each prober in the SBCS group prober is pure text in\n// high-ASCII.\n// The two SBCharSetProbers (model probers) share the same language model:\n// Win1255Model.\n// The first SBCharSetProber uses the model normally as any other\n// SBCharSetProber does, to recognize windows-1255, upon which this model was\n// built. The second SBCharSetProber is told to make the pair-of-letter\n// lookup in the language model backwards. This in practice exactly simulates\n// a visual Hebrew model using the windows-1255 logical Hebrew model.\n//\n// The HebrewProber is not using any language model. All it does is look for\n// final-letter evidence suggesting the text is either logical Hebrew or visual\n// Hebrew. Disjointed from the model probers, the results of the HebrewProber\n// alone are meaningless. HebrewProber always returns 0.00 as confidence\n// since it never identifies a charset by itself. Instead, the pointer to the\n// HebrewProber is passed to the model probers as a helper \"Name Prober\".\n// When the Group prober receives a positive identification from any prober,\n// it asks for the name of the charset identified. If the prober queried is a\n// Hebrew model prober, the model prober forwards the call to the\n// HebrewProber to make the final decision. In the HebrewProber, the\n// decision is made according to the final-letters scores maintained and Both\n// model probers scores. The answer is returned in the form of the name of the\n// charset identified, either \"windows-1255\" or \"ISO-8859-8\".\n\njschardet.HebrewProber = function() {\n    jschardet.CharSetProber.apply(this);\n\n    // windows-1255 / ISO-8859-8 code points of interest\n    var FINAL_KAF = '\\xea'\n    var NORMAL_KAF = '\\xeb'\n    var FINAL_MEM = '\\xed'\n    var NORMAL_MEM = '\\xee'\n    var FINAL_NUN = '\\xef'\n    var NORMAL_NUN = '\\xf0'\n    var FINAL_PE = '\\xf3'\n    var NORMAL_PE = '\\xf4'\n    var FINAL_TSADI = '\\xf5'\n    var NORMAL_TSADI = '\\xf6'\n\n    // Minimum Visual vs Logical final letter score difference.\n    // If the difference is below this, don't rely solely on the final letter score distance.\n    var MIN_FINAL_CHAR_DISTANCE = 5\n\n    // Minimum Visual vs Logical model score difference.\n    // If the difference is below this, don't rely at all on the model score distance.\n    var MIN_MODEL_DISTANCE = 0.01\n\n    var VISUAL_HEBREW_NAME = \"ISO-8859-8\"\n    var LOGICAL_HEBREW_NAME = \"windows-1255\"\n    var self = this;\n\n    function init() {\n        self._mLogicalProber = null;\n        self._mVisualProber = null;\n        self.reset();\n    }\n\n    this.reset = function() {\n        this._mFinalCharLogicalScore = 0;\n        this._mFinalCharVisualScore = 0;\n        // The two last characters seen in the previous buffer,\n        // mPrev and mBeforePrev are initialized to space in order to simulate a word\n        // delimiter at the beginning of the data\n        this._mPrev = \" \";\n        this._mBeforePrev = \" \";\n        // These probers are owned by the group prober.\n    }\n\n    this.setModelProbers = function(logicalProber, visualProber) {\n        this._mLogicalProber = logicalProber;\n        this._mVisualProber = visualProber;\n    }\n\n    this.isFinal = function(c) {\n        return [FINAL_KAF, FINAL_MEM, FINAL_NUN, FINAL_PE, FINAL_TSADI].indexOf(c) != -1;\n    }\n\n    this.isNonFinal = function(c) {\n        // The normal Tsadi is not a good Non-Final letter due to words like\n        // 'lechotet' (to chat) containing an apostrophe after the tsadi. This\n        // apostrophe is converted to a space in FilterWithoutEnglishLetters causing\n        // the Non-Final tsadi to appear at an end of a word even though this is not\n        // the case in the original text.\n        // The letters Pe and Kaf rarely display a related behavior of not being a\n        // good Non-Final letter. Words like 'Pop', 'Winamp' and 'Mubarak' for\n        // example legally end with a Non-Final Pe or Kaf. However, the benefit of\n        // these letters as Non-Final letters outweighs the damage since these words\n        // are quite rare.\n        return [NORMAL_KAF, NORMAL_MEM, NORMAL_NUN, NORMAL_PE].indexOf(c) != -1;\n    }\n\n    this.feed = function(aBuf) {\n        // Final letter analysis for logical-visual decision.\n        // Look for evidence that the received buffer is either logical Hebrew or\n        // visual Hebrew.\n        // The following cases are checked:\n        // 1) A word longer than 1 letter, ending with a final letter. This is an\n        //    indication that the text is laid out \"naturally\" since the final letter\n        //    really appears at the end. +1 for logical score.\n        // 2) A word longer than 1 letter, ending with a Non-Final letter. In normal\n        //    Hebrew, words ending with Kaf, Mem, Nun, Pe or Tsadi, should not end with\n        //    the Non-Final form of that letter. Exceptions to this rule are mentioned\n        //    above in isNonFinal(). This is an indication that the text is laid out\n        //    backwards. +1 for visual score\n        // 3) A word longer than 1 letter, starting with a final letter. Final letters\n        //    should not appear at the beginning of a word. This is an indication that\n        //    the text is laid out backwards. +1 for visual score.\n        //\n        // The visual score and logical score are accumulated throughout the text and\n        // are finally checked against each other in GetCharSetName().\n        // No checking for final letters in the middle of words is done since that case\n        // is not an indication for either Logical or Visual text.\n        //\n        // We automatically filter out all 7-bit characters (replace them with spaces)\n        // so the word boundary detection works properly. [MAP]\n\n        if( this.getState() == jschardet.Constants.notMe ) {\n            // Both model probers say it's not them. No reason to continue.\n            return jschardet.Constants.notMe;\n        }\n\n        aBuf = this.filterHighBitOnly(aBuf);\n\n        for( var i = 0, cur; i < aBuf.length; i++ ) {\n            cur = aBuf[i];\n            if( cur == \" \" ) {\n                // We stand on a space - a word just ended\n                if( this._mBeforePrev != \" \" ) {\n                    // next-to-last char was not a space so self._mPrev is not a 1 letter word\n                    if( this.isFinal(this._mPrev) ) {\n                        // case (1) [-2:not space][-1:final letter][cur:space]\n                        this._mFinalCharLogicalScore++;\n                    } else if( this.isNonFinal(this._mPrev) ) {\n                        // case (2) [-2:not space][-1:Non-Final letter][cur:space]\n                        this._mFinalCharVisualScore++;\n                    }\n                }\n            } else {\n                // Not standing on a space\n                if( this._mBeforePrev == \" \" && this.isFinal(this._mPrev) && cur != \" \" ) {\n                    // case (3) [-2:space][-1:final letter][cur:not space]\n                    this._mFinalCharVisualScore++;\n                }\n            }\n            this._mBeforePrev = this._mPrev;\n            this._mPrev = cur;\n        }\n        // Forever detecting, till the end or until both model probers return eNotMe (handled above)\n        return jschardet.Constants.detecting;\n    }\n\n    this.getCharsetName = function() {\n        // Make the decision: is it Logical or Visual?\n        // If the final letter score distance is dominant enough, rely on it.\n        var finalsub = this._mFinalCharLogicalScore - this._mFinalCharVisualScore;\n        if( finalsub >= MIN_FINAL_CHAR_DISTANCE ) {\n            return LOGICAL_HEBREW_NAME;\n        }\n        if( finalsub <= -MIN_FINAL_CHAR_DISTANCE ) {\n            return VISUAL_HEBREW_NAME;\n        }\n\n        // It's not dominant enough, try to rely on the model scores instead.\n        var modelsub = this._mLogicalProber.getConfidence() - this._mVisualProber.getConfidence();\n        if( modelsub > MIN_MODEL_DISTANCE ) {\n            return LOGICAL_HEBREW_NAME;\n        }\n        if( modelsub < -MIN_MODEL_DISTANCE ) {\n            return VISUAL_HEBREW_NAME;\n        }\n\n        // Still no good, back to final letter distance, maybe it'll save the day.\n        if( finalsub < 0 ) {\n            return VISUAL_HEBREW_NAME;\n        }\n\n        // (finalsub > 0 - Logical) or (don't know what to do) default to Logical.\n        return LOGICAL_HEBREW_NAME;\n    }\n\n    this.getState = function() {\n        // Remain active as long as any of the model probers are active.\n        if( this._mLogicalProber.getState() == jschardet.Constants.notMe &&\n            this._mVisualProber.getState() == jschardet.Constants.notMe ) {\n            return jschardet.Constants.notMe;\n        }\n        return jschardet.Constants.detecting;\n    }\n\n    init();\n}\njschardet.HebrewProber.prototype = new jschardet.CharSetProber();\n\n// https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Objects/Array/IndexOf\nif (!Array.prototype.indexOf)\n{\n    Array.prototype.indexOf = function(elt /*, from*/)\n    {\n        var len = this.length >>> 0;\n\n        var from = Number(arguments[1]) || 0;\n        from = (from < 0)\n             ? Math.ceil(from)\n             : Math.floor(from);\n        if (from < 0)\n            from += len;\n\n        for (; from < len; from++)\n        {\n            if (from in this &&\n                this[from] === elt)\n                return from;\n        }\n        return -1;\n    };\n}\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\n// 255: Control characters that usually does not exist in any text\n// 254: Carriage/Return\n// 253: symbol (punctuation) that does not belong to word\n// 252: 0 - 9\n\n// Windows-1255 language model\n// Character Mapping Table:\njschardet.win1255_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253, 69, 91, 79, 80, 92, 89, 97, 90, 68,111,112, 82, 73, 95, 85,  // 40\n 78,121, 86, 71, 67,102,107, 84,114,103,115,253,253,253,253,253,  // 50\n253, 50, 74, 60, 61, 42, 76, 70, 64, 53,105, 93, 56, 65, 54, 49,  // 60\n 66,110, 51, 43, 44, 63, 81, 77, 98, 75,108,253,253,253,253,253,  // 70\n124,202,203,204,205, 40, 58,206,207,208,209,210,211,212,213,214,\n215, 83, 52, 47, 46, 72, 32, 94,216,113,217,109,218,219,220,221,\n 34,116,222,118,100,223,224,117,119,104,125,225,226, 87, 99,227,\n106,122,123,228, 55,229,230,101,231,232,120,233, 48, 39, 57,234,\n 30, 59, 41, 88, 33, 37, 36, 31, 29, 35,235, 62, 28,236,126,237,\n238, 38, 45,239,240,241,242,243,127,244,245,246,247,248,249,250,\n  9,  8, 20, 16,  3,  2, 24, 14, 22,  1, 25, 15,  4, 11,  6, 23,\n 12, 19, 13, 26, 18, 27, 21, 17,  7, 10,  5,251,252,128, 96,253\n];\n\n// Model Table:\n// total sequences: 100%\n// first 512 sequences: 98.4004%\n// first 1024 sequences: 1.5981%\n// rest  sequences:      0.087%\n// negative sequences:   0.0015%\njschardet.HebrewLangModel = [\n0,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,3,2,1,2,0,1,0,0,\n3,0,3,1,0,0,1,3,2,0,1,1,2,0,2,2,2,1,1,1,1,2,1,1,1,2,0,0,2,2,0,1,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,\n1,2,1,2,1,2,0,0,2,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,\n1,2,1,3,1,1,0,0,2,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,1,2,2,1,3,\n1,2,1,1,2,2,0,0,2,2,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,2,2,2,3,2,\n1,2,1,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,2,2,3,2,2,2,1,2,2,2,2,\n1,2,1,1,2,2,0,1,2,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,0,2,2,2,2,2,\n0,2,0,2,2,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,0,2,2,2,\n0,2,1,2,2,2,0,0,2,1,0,0,0,0,1,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,2,3,2,2,2,\n1,2,1,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,\n3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,2,0,2,\n0,2,1,2,2,2,0,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,2,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,2,2,3,2,1,2,1,1,1,\n0,1,1,1,1,1,3,0,1,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,1,0,0,1,0,0,0,0,\n0,0,1,0,0,0,0,0,2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,\n0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,2,3,3,3,2,1,2,3,3,2,3,3,3,3,2,3,2,1,2,0,2,1,2,\n0,2,0,2,2,2,0,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,\n3,3,3,3,3,3,3,3,3,2,3,3,3,1,2,2,3,3,2,3,2,3,2,2,3,1,2,2,0,2,2,2,\n0,2,1,2,2,2,0,0,1,2,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,2,2,2,3,3,3,3,1,3,2,2,2,\n0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,2,3,2,2,2,1,2,2,0,2,2,2,2,\n0,2,0,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,1,3,2,3,3,2,3,3,2,2,1,2,2,2,2,2,2,\n0,2,1,2,1,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,2,3,2,3,3,2,3,3,3,3,2,3,2,3,3,3,3,3,2,2,2,2,2,2,2,1,\n0,2,0,1,2,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,2,1,2,3,3,3,3,3,3,3,2,3,2,3,2,1,2,3,0,2,1,2,2,\n0,2,1,1,2,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,\n3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,1,3,1,2,2,2,1,2,3,3,1,2,1,2,2,2,2,\n0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,0,2,3,3,3,1,3,3,3,1,2,2,2,2,1,1,2,2,2,2,2,2,\n0,2,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,2,3,3,3,2,2,3,3,3,2,1,2,3,2,3,2,2,2,2,1,2,1,1,1,2,2,\n0,2,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,0,0,0,0,0,\n1,0,1,0,0,0,0,0,2,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,2,3,3,2,3,1,2,2,2,2,3,2,3,1,1,2,2,1,2,2,1,1,0,2,2,2,2,\n0,1,0,1,2,2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\n3,0,0,1,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,\n0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,1,0,1,0,1,1,0,1,1,0,0,0,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\n3,2,2,1,2,2,2,2,2,2,2,1,2,2,1,2,2,1,1,1,1,1,1,1,1,2,1,1,0,3,3,3,\n0,3,0,2,2,2,2,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,2,2,2,1,1,1,2,0,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,0,2,2,0,0,0,0,0,0,\n0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,1,0,2,1,0,\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,\n0,3,1,1,2,2,2,2,2,1,2,2,2,1,1,2,2,2,2,2,2,2,1,2,2,1,0,1,1,1,1,0,\n0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,2,1,1,1,1,2,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,\n0,0,2,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,0,0,\n2,1,1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,1,2,1,2,1,1,1,1,0,0,0,0,\n0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,2,1,2,2,2,2,2,2,2,2,2,2,1,2,1,2,1,1,2,1,1,1,2,1,2,1,2,0,1,0,1,\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,1,2,2,2,1,2,2,2,2,2,2,2,2,1,2,1,1,1,1,1,1,2,1,2,1,1,0,1,0,1,\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,1,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,\n0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,1,1,1,1,1,1,1,0,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,2,0,1,1,1,0,1,0,0,0,1,1,0,1,1,0,0,0,0,0,1,1,0,0,\n0,1,1,1,2,1,2,2,2,0,2,0,2,0,1,1,2,1,1,1,1,2,1,0,1,1,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,1,0,0,0,0,0,1,0,1,2,2,0,1,0,0,1,1,2,2,1,2,0,2,0,0,0,1,2,0,1,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,2,0,2,1,2,0,2,0,0,1,1,1,1,1,1,0,1,0,0,0,1,0,0,1,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,1,0,0,0,0,0,1,0,2,1,1,0,1,0,0,1,1,1,2,2,0,0,1,0,0,0,1,0,0,1,\n1,1,2,1,0,1,1,1,0,1,0,1,1,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,2,1,\n0,2,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,1,0,0,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,1,1,1,1,1,1,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,1,0,0,0,1,1,0,1,\n2,0,1,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,1,1,1,0,1,0,0,1,1,2,1,1,2,0,1,0,0,0,1,1,0,1,\n1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,0,0,2,1,1,2,0,2,0,0,0,1,1,0,1,\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,2,1,1,0,1,0,0,2,2,1,2,1,1,0,1,0,0,0,1,1,0,1,\n2,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,1,0,1,\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,2,1,1,1,0,2,1,1,0,0,0,2,1,0,1,\n1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,1,1,0,2,1,1,0,1,0,0,0,1,1,0,1,\n2,2,1,1,1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,2,1,1,0,1,0,0,1,1,0,1,2,1,0,2,0,0,0,1,1,0,1,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,\n0,1,0,0,2,0,2,1,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,1,1,1,0,1,0,0,1,0,0,0,1,0,0,1,\n1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,0,2,1,1,1,1,1,0,1,0,0,0,0,1,0,1,\n0,1,1,1,2,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,1,1,1,1,1,0,1,0,0,0,1,1,0,0\n];\n\njschardet.Win1255HebrewModel = {\n    \"charToOrderMap\"        : jschardet.win1255_CharToOrderMap,\n    \"precedenceMatrix\"      : jschardet.HebrewLangModel,\n    \"mTypicalPositiveRatio\" : 0.984004,\n    \"keepEnglishLetter\"     : false,\n    \"charsetName\"           : \"windows-1255\"\n};\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\n// 255: Control characters that usually does not exist in any text\n// 254: Carriage/Return\n// 253: symbol (punctuation) that does not belong to word\n// 252: 0 - 9\n\n// Character Mapping Table:\njschardet.Latin2_HungarianCharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253, 28, 40, 54, 45, 32, 50, 49, 38, 39, 53, 36, 41, 34, 35, 47,\n 46, 71, 43, 33, 37, 57, 48, 64, 68, 55, 52,253,253,253,253,253,\n253,  2, 18, 26, 17,  1, 27, 12, 20,  9, 22,  7,  6, 13,  4,  8,\n 23, 67, 10,  5,  3, 21, 19, 65, 62, 16, 11,253,253,253,253,253,\n159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,\n175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,\n191,192,193,194,195,196,197, 75,198,199,200,201,202,203,204,205,\n 79,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,\n221, 51, 81,222, 78,223,224,225,226, 44,227,228,229, 61,230,231,\n232,233,234, 58,235, 66, 59,236,237,238, 60, 69, 63,239,240,241,\n 82, 14, 74,242, 70, 80,243, 72,244, 15, 83, 77, 84, 30, 76, 85,\n245,246,247, 25, 73, 42, 24,248,249,250, 31, 56, 29,251,252,253\n]\n\njschardet.win1250HungarianCharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253, 28, 40, 54, 45, 32, 50, 49, 38, 39, 53, 36, 41, 34, 35, 47,\n 46, 72, 43, 33, 37, 57, 48, 64, 68, 55, 52,253,253,253,253,253,\n253,  2, 18, 26, 17,  1, 27, 12, 20,  9, 22,  7,  6, 13,  4,  8,\n 23, 67, 10,  5,  3, 21, 19, 65, 62, 16, 11,253,253,253,253,253,\n161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,\n177,178,179,180, 78,181, 69,182,183,184,185,186,187,188,189,190,\n191,192,193,194,195,196,197, 76,198,199,200,201,202,203,204,205,\n 81,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,\n221, 51, 83,222, 80,223,224,225,226, 44,227,228,229, 61,230,231,\n232,233,234, 58,235, 66, 59,236,237,238, 60, 70, 63,239,240,241,\n 84, 14, 75,242, 71, 82,243, 73,244, 15, 85, 79, 86, 30, 77, 87,\n245,246,247, 25, 74, 42, 24,248,249,250, 31, 56, 29,251,252,253\n];\n\n// Model Table:\n// total sequences: 100%\n// first 512 sequences: 94.7368%\n// first 1024 sequences:5.2623%\n// rest  sequences:     0.8894%\n// negative sequences:  0.0009%\njschardet.HungarianLangModel = [\n0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,\n3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,1,1,2,2,2,2,2,1,2,\n3,2,2,3,3,3,3,3,2,3,3,3,3,3,3,1,2,3,3,3,3,2,3,3,1,1,3,3,0,1,1,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,\n3,2,1,3,3,3,3,3,2,3,3,3,3,3,1,1,2,3,3,3,3,3,3,3,1,1,3,2,0,1,1,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,1,1,2,3,3,3,1,3,3,3,3,3,1,3,3,2,2,0,3,2,3,\n0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,3,3,3,2,3,3,2,3,3,3,3,3,2,3,3,2,2,3,2,3,2,0,3,2,2,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,\n3,3,3,3,3,3,2,3,3,3,3,3,2,3,3,3,1,2,3,2,2,3,1,2,3,3,2,2,0,3,3,3,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,0,2,3,2,\n0,0,0,1,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,1,1,1,3,3,2,1,3,2,2,3,2,1,3,2,2,1,0,3,3,1,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,2,2,3,3,3,3,3,1,2,3,3,3,3,1,2,1,3,3,3,3,2,2,3,1,1,3,2,0,1,1,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,2,1,3,3,3,3,3,2,2,1,3,3,3,0,1,1,2,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,2,3,3,3,2,0,3,2,3,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,0,\n3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,3,1,3,2,2,2,3,1,1,3,3,1,1,0,3,3,2,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,3,2,3,3,3,3,3,1,2,3,2,2,0,2,2,2,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,2,2,2,3,1,3,3,2,2,1,3,3,3,1,1,3,1,2,3,2,3,2,2,2,1,0,2,2,2,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,\n3,1,1,3,3,3,3,3,1,2,3,3,3,3,1,2,1,3,3,3,2,2,3,2,1,0,3,2,0,1,1,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,1,3,3,3,3,3,1,2,3,3,3,3,1,1,0,3,3,3,3,0,2,3,0,0,2,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,2,3,3,2,2,2,2,3,3,0,1,2,3,2,3,2,2,3,2,1,2,0,2,2,2,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,\n3,3,3,3,3,3,1,2,3,3,3,2,1,2,3,3,2,2,2,3,2,3,3,1,3,3,1,1,0,2,3,2,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,1,2,2,2,2,3,3,3,1,1,1,3,3,1,1,3,1,1,3,2,1,2,3,1,1,0,2,2,2,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,2,1,2,1,1,3,3,1,1,1,1,3,3,1,1,2,2,1,2,1,1,2,2,1,1,0,2,2,1,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,1,1,2,1,1,3,3,1,0,1,1,3,3,2,0,1,1,2,3,1,0,2,2,1,0,0,1,3,2,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,2,1,3,3,3,3,3,1,2,3,2,3,3,2,1,1,3,2,3,2,1,2,2,0,1,2,1,0,0,1,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,3,3,3,2,2,2,2,3,1,2,2,1,1,3,3,0,3,2,1,2,3,2,1,3,3,1,1,0,2,1,3,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,2,2,2,3,2,3,3,3,2,1,1,3,3,1,1,1,2,2,3,2,3,2,2,2,1,0,2,2,1,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n1,0,0,3,3,3,3,3,0,0,3,3,2,3,0,0,0,2,3,3,1,0,1,2,0,0,1,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,2,3,3,3,3,3,1,2,3,3,2,2,1,1,0,3,3,2,2,1,2,2,1,0,2,2,0,1,1,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,2,2,1,3,1,2,3,3,2,2,1,1,2,2,1,1,1,1,3,2,1,1,1,1,2,1,0,1,2,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,\n2,3,3,1,1,1,1,1,3,3,3,0,1,1,3,3,1,1,1,1,1,2,2,0,3,1,1,2,0,2,1,1,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,1,0,1,2,1,2,2,0,1,2,3,1,2,0,0,0,2,1,1,1,1,1,2,0,0,1,1,0,0,0,0,\n1,2,1,2,2,2,1,2,1,2,0,2,0,2,2,1,1,2,1,1,2,1,1,1,0,1,0,0,0,1,1,0,\n1,1,1,2,3,2,3,3,0,1,2,2,3,1,0,1,0,2,1,2,2,0,1,1,0,0,1,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,3,3,2,2,1,0,0,3,2,3,2,0,0,0,1,1,3,0,0,1,1,0,0,2,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,1,2,2,3,3,1,0,1,3,2,3,1,1,1,0,1,1,1,1,1,3,1,0,0,2,2,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,1,1,2,2,2,1,0,1,2,3,3,2,0,0,0,2,1,1,1,2,1,1,1,0,1,1,1,0,0,0,\n1,2,2,2,2,2,1,1,1,2,0,2,1,1,1,1,1,2,1,1,1,1,1,1,0,1,1,1,0,0,1,1,\n3,2,2,1,0,0,1,1,2,2,0,3,0,1,2,1,1,0,0,1,1,1,0,1,1,1,1,0,2,1,1,1,\n2,2,1,1,1,2,1,2,1,1,1,1,1,1,1,2,1,1,1,2,3,1,1,1,1,1,1,1,1,1,0,1,\n2,3,3,0,1,0,0,0,3,3,1,0,0,1,2,2,1,0,0,0,0,2,0,0,1,1,1,0,2,1,1,1,\n2,1,1,1,1,1,1,2,1,1,0,1,1,0,1,1,1,0,1,2,1,1,0,1,1,1,1,1,1,1,0,1,\n2,3,3,0,1,0,0,0,2,2,0,0,0,0,1,2,2,0,0,0,0,1,0,0,1,1,0,0,2,0,1,0,\n2,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,0,1,1,1,1,1,0,1,\n3,2,2,0,1,0,1,0,2,3,2,0,0,1,2,2,1,0,0,1,1,1,0,0,2,1,0,1,2,2,1,1,\n2,1,1,1,1,1,1,2,1,1,1,1,1,1,0,2,1,0,1,1,0,1,1,1,0,1,1,2,1,1,0,1,\n2,2,2,0,0,1,0,0,2,2,1,1,0,0,2,1,1,0,0,0,1,2,0,0,2,1,0,0,2,1,1,1,\n2,1,1,1,1,2,1,2,1,1,1,2,2,1,1,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,0,1,\n1,2,3,0,0,0,1,0,3,2,1,0,0,1,2,1,1,0,0,0,0,2,1,0,1,1,0,0,2,1,2,1,\n1,1,0,0,0,1,0,1,1,1,1,1,2,0,0,1,0,0,0,2,0,0,1,1,1,1,1,1,1,1,0,1,\n3,0,0,2,1,2,2,1,0,0,2,1,2,2,0,0,0,2,1,1,1,0,1,1,0,0,1,1,2,0,0,0,\n1,2,1,2,2,1,1,2,1,2,0,1,1,1,1,1,1,1,1,1,2,1,1,0,0,1,1,1,1,0,0,1,\n1,3,2,0,0,0,1,0,2,2,2,0,0,0,2,2,1,0,0,0,0,3,1,1,1,1,0,0,2,1,1,1,\n2,1,0,1,1,1,0,1,1,1,1,1,1,1,0,2,1,0,0,1,0,1,1,0,1,1,1,1,1,1,0,1,\n2,3,2,0,0,0,1,0,2,2,0,0,0,0,2,1,1,0,0,0,0,2,1,0,1,1,0,0,2,1,1,0,\n2,1,1,1,1,2,1,2,1,2,0,1,1,1,0,2,1,1,1,2,1,1,1,1,0,1,1,1,1,1,0,1,\n3,1,1,2,2,2,3,2,1,1,2,2,1,1,0,1,0,2,2,1,1,1,1,1,0,0,1,1,0,1,1,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,2,2,0,0,0,0,0,2,2,0,0,0,0,2,2,1,0,0,0,1,1,0,0,1,2,0,0,2,1,1,1,\n2,2,1,1,1,2,1,2,1,1,0,1,1,1,1,2,1,1,1,2,1,1,1,1,0,1,2,1,1,1,0,1,\n1,0,0,1,2,3,2,1,0,0,2,0,1,1,0,0,0,1,1,1,1,0,1,1,0,0,1,0,0,0,0,0,\n1,2,1,2,1,2,1,1,1,2,0,2,1,1,1,0,1,2,0,0,1,1,1,0,0,0,0,0,0,0,0,0,\n2,3,2,0,0,0,0,0,1,1,2,1,0,0,1,1,1,0,0,0,0,2,0,0,1,1,0,0,2,1,1,1,\n2,1,1,1,1,1,1,2,1,0,1,1,1,1,0,2,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,\n1,2,2,0,1,1,1,0,2,2,2,0,0,0,3,2,1,0,0,0,1,1,0,0,1,1,0,1,1,1,0,0,\n1,1,0,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,0,0,1,1,1,0,1,0,1,\n2,1,0,2,1,1,2,2,1,1,2,1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,1,1,1,0,0,0,\n1,2,2,2,2,2,1,1,1,2,0,2,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,1,0,\n1,2,3,0,0,0,1,0,2,2,0,0,0,0,2,2,0,0,0,0,0,1,0,0,1,0,0,0,2,0,1,0,\n2,1,1,1,1,1,0,2,0,0,0,1,2,1,1,1,1,0,1,2,0,1,0,1,0,1,1,1,0,1,0,1,\n2,2,2,0,0,0,1,0,2,1,2,0,0,0,1,1,2,0,0,0,0,1,0,0,1,1,0,0,2,1,0,1,\n2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,1,1,1,1,1,0,1,\n1,2,2,0,0,0,1,0,2,2,2,0,0,0,1,1,0,0,0,0,0,1,1,0,2,0,0,1,1,1,0,1,\n1,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,0,0,0,1,\n1,0,0,1,0,1,2,1,0,0,1,1,1,2,0,0,0,1,1,0,1,0,1,1,0,0,1,0,0,0,0,0,\n0,2,1,2,1,1,1,1,1,2,0,2,0,1,1,0,1,2,1,0,1,1,1,0,0,0,0,0,0,1,0,0,\n2,1,1,0,1,2,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,2,1,0,1,\n2,2,1,1,1,1,1,2,1,1,0,1,1,1,1,2,1,1,1,2,1,1,0,1,0,1,1,1,1,1,0,1,\n1,2,2,0,0,0,0,0,1,1,0,0,0,0,2,1,0,0,0,0,0,2,0,0,2,2,0,0,2,0,0,1,\n2,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,\n1,1,2,0,0,3,1,0,2,1,1,1,0,0,1,1,1,0,0,0,1,1,0,0,0,1,0,0,1,0,1,0,\n1,2,1,0,1,1,1,2,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,0,0,0,1,0,0,\n2,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,2,0,0,0,\n2,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,2,1,1,0,0,1,1,1,1,1,0,1,\n2,1,1,1,2,1,1,1,0,1,1,2,1,0,0,0,0,1,1,1,1,0,1,0,0,0,0,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,1,0,1,1,1,1,1,0,0,1,1,2,1,0,0,0,1,1,0,0,0,1,1,0,0,1,0,1,0,0,0,\n1,2,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,\n2,0,0,0,1,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,2,0,0,1,0,0,1,0,1,0,0,0,\n0,1,1,1,1,1,1,1,1,2,0,1,1,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,\n1,0,0,1,1,1,1,1,0,0,2,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,\n0,1,1,1,1,1,1,0,1,1,0,1,0,1,1,0,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,\n1,0,0,1,1,1,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n0,1,1,1,1,1,0,0,1,1,0,1,0,1,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,\n0,0,0,1,0,0,0,0,0,0,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,1,1,1,0,1,0,0,1,1,0,1,0,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,\n2,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,0,0,1,0,1,0,1,1,1,0,0,1,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,\n0,1,1,1,1,1,1,0,1,1,0,1,0,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0\n];\n\njschardet.Latin2HungarianModel = {\n    \"charToOrderMap\"        : jschardet.Latin2_HungarianCharToOrderMap,\n    \"precedenceMatrix\"      : jschardet.HungarianLangModel,\n    \"mTypicalPositiveRatio\" : 0.947368,\n    \"keepEnglishLetter\"     : true,\n    \"charsetName\"           : \"ISO-8859-2\"\n};\n\njschardet.Win1250HungarianModel = {\n    \"charToOrderMap\"        : jschardet.win1250HungarianCharToOrderMap,\n    \"precedenceMatrix\"      : jschardet.HungarianLangModel,\n    \"mTypicalPositiveRatio\" : 0.947368,\n    \"keepEnglishLetter\"     : true,\n    \"charsetName\"           : \"windows-1250\"\n};\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.SBCSGroupProber = function() {\n    jschardet.CharSetGroupProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mProbers = [\n            new jschardet.SingleByteCharSetProber(jschardet.Win1251CyrillicModel),\n            new jschardet.SingleByteCharSetProber(jschardet.Koi8rModel),\n            new jschardet.SingleByteCharSetProber(jschardet.Latin5CyrillicModel),\n            new jschardet.SingleByteCharSetProber(jschardet.MacCyrillicModel),\n            new jschardet.SingleByteCharSetProber(jschardet.Ibm866Model),\n            new jschardet.SingleByteCharSetProber(jschardet.Ibm855Model),\n            new jschardet.SingleByteCharSetProber(jschardet.Latin7GreekModel),\n            new jschardet.SingleByteCharSetProber(jschardet.Win1253GreekModel),\n            new jschardet.SingleByteCharSetProber(jschardet.Latin5BulgarianModel),\n            new jschardet.SingleByteCharSetProber(jschardet.Win1251BulgarianModel),\n            new jschardet.SingleByteCharSetProber(jschardet.Latin2HungarianModel),\n            new jschardet.SingleByteCharSetProber(jschardet.Win1250HungarianModel),\n            new jschardet.SingleByteCharSetProber(jschardet.TIS620ThaiModel)\n        ];\n        var hebrewProber = new jschardet.HebrewProber();\n        var logicalHebrewProber = new jschardet.SingleByteCharSetProber(jschardet.Win1255HebrewModel, false, hebrewProber);\n        var visualHebrewProber = new jschardet.SingleByteCharSetProber(jschardet.Win1255HebrewModel, true, hebrewProber);\n        hebrewProber.setModelProbers(logicalHebrewProber, visualHebrewProber);\n        self._mProbers.push(hebrewProber, logicalHebrewProber, visualHebrewProber);\n\n        self.reset();\n    }\n\n    init();\n}\njschardet.SBCSGroupProber.prototype = new jschardet.CharSetGroupProber();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\n(function() {\n    var UDF = 0; // undefined\n    var OTH = 1; // other\n    jschardet.OTH = 1;\n    var ASC = 2; // ascii capital letter\n    var ASS = 3; // ascii small letter\n    var ACV = 4; // accent capital vowel\n    var ACO = 5; // accent capital other\n    var ASV = 6; // accent small vowel\n    var ASO = 7; // accent small other\n\n    jschardet.Latin1_CharToClass = [\n      OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 00 - 07\n      OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 08 - 0F\n      OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 10 - 17\n      OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 18 - 1F\n      OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 20 - 27\n      OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 28 - 2F\n      OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 30 - 37\n      OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 38 - 3F\n      OTH, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   // 40 - 47\n      ASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   // 48 - 4F\n      ASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   // 50 - 57\n      ASC, ASC, ASC, OTH, OTH, OTH, OTH, OTH,   // 58 - 5F\n      OTH, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   // 60 - 67\n      ASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   // 68 - 6F\n      ASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   // 70 - 77\n      ASS, ASS, ASS, OTH, OTH, OTH, OTH, OTH,   // 78 - 7F\n      OTH, UDF, OTH, ASO, OTH, OTH, OTH, OTH,   // 80 - 87\n      OTH, OTH, ACO, OTH, ACO, UDF, ACO, UDF,   // 88 - 8F\n      UDF, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 90 - 97\n      OTH, OTH, ASO, OTH, ASO, UDF, ASO, ACO,   // 98 - 9F\n      OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // A0 - A7\n      OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // A8 - AF\n      OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // B0 - B7\n      OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // B8 - BF\n      ACV, ACV, ACV, ACV, ACV, ACV, ACO, ACO,   // C0 - C7\n      ACV, ACV, ACV, ACV, ACV, ACV, ACV, ACV,   // C8 - CF\n      ACO, ACO, ACV, ACV, ACV, ACV, ACV, OTH,   // D0 - D7\n      ACV, ACV, ACV, ACV, ACV, ACO, ACO, ACO,   // D8 - DF\n      ASV, ASV, ASV, ASV, ASV, ASV, ASO, ASO,   // E0 - E7\n      ASV, ASV, ASV, ASV, ASV, ASV, ASV, ASV,   // E8 - EF\n      ASO, ASO, ASV, ASV, ASV, ASV, ASV, OTH,   // F0 - F7\n      ASV, ASV, ASV, ASV, ASV, ASO, ASO, ASO    // F8 - FF\n    ];\n\n    // 0 : illegal\n    // 1 : very unlikely\n    // 2 : normal\n    // 3 : very likely\n    jschardet.Latin1ClassModel = [\n    // UDF OTH ASC ASS ACV ACO ASV ASO\n       0,  0,  0,  0,  0,  0,  0,  0,  // UDF\n       0,  3,  3,  3,  3,  3,  3,  3,  // OTH\n       0,  3,  3,  3,  3,  3,  3,  3,  // ASC\n       0,  3,  3,  3,  1,  1,  3,  3,  // ASS\n       0,  3,  3,  3,  1,  2,  1,  2,  // ACV\n       0,  3,  3,  3,  3,  3,  3,  3,  // ACO\n       0,  3,  1,  3,  1,  1,  1,  3,  // ASV\n       0,  3,  1,  3,  1,  1,  3,  3   // ASO\n    ];\n})();\n\njschardet.Latin1Prober = function() {\n    jschardet.CharSetProber.apply(this);\n\n    var FREQ_CAT_NUM = 4;\n    var CLASS_NUM = 8; // total classes\n    var self = this;\n\n    function init() {\n        self.reset();\n    }\n\n    this.reset = function() {\n        this._mLastCharClass = jschardet.OTH;\n        this._mFreqCounter = [];\n        for( var i = 0; i < FREQ_CAT_NUM; this._mFreqCounter[i++] = 0 );\n        jschardet.Latin1Prober.prototype.reset.apply(this);\n    }\n\n    this.getCharsetName = function() {\n        return \"windows-1252\";\n    }\n\n    this.feed = function(aBuf) {\n        aBuf = this.filterWithEnglishLetters(aBuf);\n        for( var i = 0; i < aBuf.length; i++ ) {\n            var c = aBuf.charCodeAt(i);\n            var charClass = jschardet.Latin1_CharToClass[c];\n            var freq = jschardet.Latin1ClassModel[(this._mLastCharClass * CLASS_NUM) + charClass];\n            if( freq == 0 ) {\n                this._mState = jschardet.Constants.notMe;\n                break;\n            }\n            this._mFreqCounter[freq]++;\n            this._mLastCharClass = charClass;\n        }\n\n        return this.getState();\n    }\n\n    this.getConfidence = function() {\n        var confidence;\n        var constants;\n        \n        if( this.getState() == jschardet.Constants.notMe ) {\n            return 0.01;\n        }\n\n        var total = 0;\n        for( var i = 0; i < this._mFreqCounter.length; i++ ) {\n            total += this._mFreqCounter[i];\n        }\n        if( total < 0.01 ) {\n            constants = 0.0;\n        } else {\n            confidence = (this._mFreqCounter[3] / total) - (this._mFreqCounter[1] * 20 / total);\n        }\n        if( confidence < 0 ) {\n            confidence = 0.0;\n        }\n        // lower the confidence of latin1 so that other more accurate detector\n        // can take priority.\n        //\n        // antonio.afonso: need to change this otherwise languages like pt, es, fr using latin1 will never be detected.\n        confidence = confidence * 0.95;\n        return confidence;\n    }\n\n    init();\n}\njschardet.Latin1Prober.prototype = new jschardet.CharSetProber();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n!function(jschardet) {\n\njschardet.EscCharSetProber = function() {\n    jschardet.CharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCodingSM = [\n            new jschardet.CodingStateMachine(jschardet.HZSMModel),\n            new jschardet.CodingStateMachine(jschardet.ISO2022CNSMModel),\n            new jschardet.CodingStateMachine(jschardet.ISO2022JPSMModel),\n            new jschardet.CodingStateMachine(jschardet.ISO2022KRSMModel)\n        ];\n        self.reset();\n    }\n\n    this.reset = function() {\n        jschardet.EscCharSetProber.prototype.reset.apply(this);\n        for( var i = 0, codingSM; codingSM = this._mCodingSM[i]; i++ ) {\n            if( !codingSM ) continue;\n            codingSM.active = true;\n            codingSM.reset();\n        }\n        this._mActiveSM = self._mCodingSM.length;\n        this._mDetectedCharset = null;\n    }\n\n    this.getCharsetName = function() {\n        return this._mDetectedCharset;\n    }\n\n    this.getConfidence = function() {\n        if( this._mDetectedCharset ) {\n            return 0.99;\n        } else {\n            return 0.00;\n        }\n    }\n\n    this.feed = function(aBuf) {\n        for( var i = 0, c; i < aBuf.length; i++ ) {\n            c = aBuf[i];\n            for( var j = 0, codingSM; codingSM = this._mCodingSM[j]; j++ ) {\n                if( !codingSM || !codingSM.active ) continue;\n                var codingState = codingSM.nextState(c);\n                if( codingState == jschardet.Constants.error ) {\n                    codingSM.active = false;\n                    this._mActiveSM--;\n                    if( this._mActiveSM <= 0 ) {\n                        this._mState = jschardet.Constants.notMe;\n                        return this.getState();\n                    }\n                } else if( codingState == jschardet.Constants.itsMe ) {\n                    this._mState = jschardet.Constants.foundIt;\n                    this._mDetectedCharset = codingSM.getCodingStateMachine();\n                    return this.getState();\n                }\n            }\n        }\n\n        return this.getState();\n    }\n\n    init();\n}\njschardet.EscCharSetProber.prototype = new jschardet.CharSetProber();\n\n}(require('./init'));\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n/**\n * This is a port from the python port, version \"2.0.1\"\n */\n\n!function(jschardet) {\n\njschardet.UniversalDetector = function() {\n    var MINIMUM_THRESHOLD = jschardet.Constants.MINIMUM_THRESHOLD;\n    var _state = {\n        pureAscii   : 0,\n        escAscii    : 1,\n        highbyte    : 2\n    };\n    var self = this;\n\n    function init() {\n        self._highBitDetector = /[\\x80-\\xFF]/;\n        self._escDetector = /(\\x1B|~\\{)/;\n        self._mEscCharsetProber = null;\n        self._mCharsetProbers = [];\n        self.reset();\n    }\n\n    this.reset = function() {\n        this.result = {\"encoding\": null, \"confidence\": 0.0};\n        this.done = false;\n        this._mStart = true;\n        this._mGotData = false;\n        this._mInputState = _state.pureAscii;\n        this._mLastChar = \"\";\n        this._mBOM = \"\";\n        if( this._mEscCharsetProber ) {\n            this._mEscCharsetProber.reset();\n        }\n        for( var i = 0, prober; prober = this._mCharsetProbers[i]; i++ ) {\n            prober.reset();\n        }\n    }\n\n    this.feed = function(aBuf) {\n        if( this.done ) return;\n\n        var aLen = aBuf.length;\n        if( !aLen ) return;\n\n        if( !this._mGotData ) {\n            this._mBOM += aBuf;\n            // If the data starts with BOM, we know it is UTF\n            if( this._mBOM.slice(0,3) == \"\\xEF\\xBB\\xBF\" ) {\n                // EF BB BF  UTF-8 with BOM\n                this.result = {\"encoding\": \"UTF-8\", \"confidence\": 1.0};\n            } else if( this._mBOM.slice(0,4) == \"\\xFF\\xFE\\x00\\x00\" ) {\n                // FF FE 00 00  UTF-32, little-endian BOM\n                this.result = {\"encoding\": \"UTF-32LE\", \"confidence\": 1.0};\n            } else if( this._mBOM.slice(0,4) == \"\\x00\\x00\\xFE\\xFF\" ) {\n                // 00 00 FE FF  UTF-32, big-endian BOM\n                this.result = {\"encoding\": \"UTF-32BE\", \"confidence\": 1.0};\n            } else if( this._mBOM.slice(0,4) == \"\\xFE\\xFF\\x00\\x00\" ) {\n                // FE FF 00 00  UCS-4, unusual octet order BOM (3412)\n                this.result = {\"encoding\": \"X-ISO-10646-UCS-4-3412\", \"confidence\": 1.0};\n            } else if( this._mBOM.slice(0,4) == \"\\x00\\x00\\xFF\\xFE\" ) {\n                // 00 00 FF FE  UCS-4, unusual octet order BOM (2143)\n                this.result = {\"encoding\": \"X-ISO-10646-UCS-4-2143\", \"confidence\": 1.0};\n            } else if( this._mBOM.slice(0,2) == \"\\xFF\\xFE\" ) {\n                // FF FE  UTF-16, little endian BOM\n                this.result = {\"encoding\": \"UTF-16LE\", \"confidence\": 1.0};\n            } else if( this._mBOM.slice(0,2) == \"\\xFE\\xFF\" ) {\n                // FE FF  UTF-16, big endian BOM\n                this.result = {\"encoding\": \"UTF-16BE\", \"confidence\": 1.0};\n            }\n\n            // If we got to 4 chars without being able to detect a BOM we\n            // stop trying.\n            if( this._mBOM.length > 3 ) {\n                this._mGotData = true;\n            }\n        }\n\n        if( this.result.encoding && (this.result.confidence > 0.0) ) {\n            this.done = true;\n            return;\n        }\n\n        if( this._mInputState == _state.pureAscii ) {\n            if( this._highBitDetector.test(aBuf) ) {\n                this._mInputState = _state.highbyte;\n            } else if( this._escDetector.test(this._mLastChar + aBuf) ) {\n                this._mInputState = _state.escAscii;\n            }\n        }\n\n        this._mLastChar = aBuf.slice(-1);\n\n        if( this._mInputState == _state.escAscii ) {\n            if( !this._mEscCharsetProber ) {\n                this._mEscCharsetProber = new jschardet.EscCharSetProber();\n            }\n            if( this._mEscCharsetProber.feed(aBuf) == jschardet.Constants.foundIt ) {\n                this.result = {\n                    \"encoding\": this._mEscCharsetProber.getCharsetName(),\n                    \"confidence\": this._mEscCharsetProber.getConfidence()\n                };\n                this.done = true;\n            }\n        } else if( this._mInputState == _state.highbyte ) {\n            if( this._mCharsetProbers.length == 0 ) {\n                this._mCharsetProbers = [\n                    new jschardet.MBCSGroupProber(),\n                    new jschardet.SBCSGroupProber(),\n                    new jschardet.Latin1Prober()\n                ];\n            }\n            for( var i = 0, prober; prober = this._mCharsetProbers[i]; i++ ) {\n                if( prober.feed(aBuf) == jschardet.Constants.foundIt ) {\n                    this.result = {\n                        \"encoding\": prober.getCharsetName(),\n                        \"confidence\": prober.getConfidence()\n                    };\n                    this.done = true;\n                    break;\n                }\n            }\n        }\n    }\n\n    this.close = function() {\n        if( this.done ) return;\n        if( this._mBOM.length === 0 ) {\n            if( jschardet.Constants._debug ) {\n                jschardet.log(\"no data received!\\n\");\n            }\n            return;\n        }\n        this.done = true;\n\n        if( this._mInputState == _state.pureAscii ) {\n            if( jschardet.Constants._debug ) {\n                jschardet.log(\"pure ascii\")\n            }\n            this.result = {\"encoding\": \"ascii\", \"confidence\": 1.0};\n            return this.result;\n        }\n\n        if( this._mInputState == _state.highbyte ) {\n            var proberConfidence = null;\n            var maxProberConfidence = 0.0;\n            var maxProber = null;\n            for( var i = 0, prober; prober = this._mCharsetProbers[i]; i++ ) {\n                if( !prober ) continue;\n                proberConfidence = prober.getConfidence();\n                if( proberConfidence > maxProberConfidence ) {\n                    maxProberConfidence = proberConfidence;\n                    maxProber = prober;\n                }\n                if( jschardet.Constants._debug ) {\n                    jschardet.log(prober.getCharsetName() + \" confidence \" + prober.getConfidence());\n                }\n            }\n            if( maxProber && maxProberConfidence > MINIMUM_THRESHOLD ) {\n                this.result = {\n                    \"encoding\": maxProber.getCharsetName(),\n                    \"confidence\": maxProber.getConfidence()\n                };\n                return this.result;\n            }\n        }\n\n        if( jschardet.Constants._debug ) {\n            jschardet.log(\"no probers hit minimum threshhold\\n\");\n            for( var i = 0, prober; prober = this._mCharsetProbers[i]; i++ ) {\n                if( !prober ) continue;\n                jschardet.log(prober.getCharsetName() + \" confidence = \" +\n                    prober.getConfidence() + \"\\n\");\n            }\n        }\n    }\n\n    init();\n}\n\n}(require('./init'));\n","module.exports = require(\"process\");","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n\n  builder = require('xmlbuilder');\n\n  defaults = require('./defaults').defaults;\n\n  requiresCDATA = function(entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n\n  wrapCDATA = function(entry) {\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\n  };\n\n  escapeCDATA = function(entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n\n  exports.Builder = (function() {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n\n    Builder.prototype.buildObject = function(rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = (function(_this) {\n        return function(element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      })(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n\n    return Builder;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.doctype(options);\n      }\n    }\n    return root;\n  };\n\n  module.exports.begin = function(options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isPlainObject = require('./Utility').isPlainObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocument = (function(superClass) {\n    extend(XMLDocument, superClass);\n\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n      this.isDocument = true;\n    }\n\n    XMLDocument.prototype.end = function(writer) {\n      var writerOptions;\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer.set(writerOptions);\n      }\n      return writer.document(this);\n    };\n\n    XMLDocument.prototype.toString = function(options) {\n      return this.options.writer.set(options).document(this);\n    };\n\n    return XMLDocument;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject;\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter(options);\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter(writerOptions);\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node\");\n      }\n      this.openCurrent();\n      name = name.valueOf();\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.dtdElement.apply(this, arguments);\n      } else {\n        return this.node(name, attributes, text);\n      }\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode\");\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.currentNode.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.currentLevel + 1));\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node instanceof XMLElement) {\n          this.root = node;\n        }\n        this.onData(this.writer.openNode(node, this.currentLevel));\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      if (!node.isClosed) {\n        this.onData(this.writer.closeNode(node, this.currentLevel));\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStreamWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      XMLStreamWriter.__super__.constructor.call(this, options);\n      this.stream = stream;\n    }\n\n    XMLStreamWriter.prototype.document = function(doc) {\n      var child, i, j, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        child.isLastRootNode = false;\n      }\n      doc.children[doc.children.length - 1].isLastRootNode = true;\n      ref1 = doc.children;\n      results = [];\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        child = ref1[j];\n        switch (false) {\n          case !(child instanceof XMLDeclaration):\n            results.push(this.declaration(child));\n            break;\n          case !(child instanceof XMLDocType):\n            results.push(this.docType(child));\n            break;\n          case !(child instanceof XMLComment):\n            results.push(this.comment(child));\n            break;\n          case !(child instanceof XMLProcessingInstruction):\n            results.push(this.processingInstruction(child));\n            break;\n          default:\n            results.push(this.element(child));\n        }\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att) {\n      return this.stream.write(' ' + att.name + '=\"' + att.value + '\"');\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, level) {\n      return this.stream.write(this.space(level) + '<![CDATA[' + node.text + ']]>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, level) {\n      return this.stream.write(this.space(level) + '<!-- ' + node.text + ' -->' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, level) {\n      this.stream.write(this.space(level));\n      this.stream.write('<?xml version=\"' + node.version + '\"');\n      if (node.encoding != null) {\n        this.stream.write(' encoding=\"' + node.encoding + '\"');\n      }\n      if (node.standalone != null) {\n        this.stream.write(' standalone=\"' + node.standalone + '\"');\n      }\n      this.stream.write(this.spacebeforeslash + '?>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, level) {\n      var child, i, len, ref;\n      level || (level = 0);\n      this.stream.write(this.space(level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node));\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          switch (false) {\n            case !(child instanceof XMLDTDAttList):\n              this.dtdAttList(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDElement):\n              this.dtdElement(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDEntity):\n              this.dtdEntity(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDNotation):\n              this.dtdNotation(child, level + 1);\n              break;\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(']');\n      }\n      this.stream.write(this.spacebeforeslash + '>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.element = function(node, level) {\n      var att, child, i, len, name, ref, ref1, space;\n      level || (level = 0);\n      space = this.space(level);\n      this.stream.write(space + '<' + node.name);\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          this.stream.write('></' + node.name + '>');\n        } else {\n          this.stream.write(this.spacebeforeslash + '/>');\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        this.stream.write('>');\n        this.stream.write(node.children[0].value);\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.newline);\n        ref1 = node.children;\n        for (i = 0, len = ref1.length; i < len; i++) {\n          child = ref1[i];\n          switch (false) {\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLElement):\n              this.element(child, level + 1);\n              break;\n            case !(child instanceof XMLRaw):\n              this.raw(child, level + 1);\n              break;\n            case !(child instanceof XMLText):\n              this.text(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(space + '</' + node.name + '>');\n      }\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, level) {\n      this.stream.write(this.space(level) + '<?' + node.target);\n      if (node.value) {\n        this.stream.write(' ' + node.value);\n      }\n      return this.stream.write(this.spacebeforeslash + '?>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, level) {\n      this.stream.write(this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType);\n      if (node.defaultValueType !== '#DEFAULT') {\n        this.stream.write(' ' + node.defaultValueType);\n      }\n      if (node.defaultValue) {\n        this.stream.write(' \"' + node.defaultValue + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, level) {\n      this.stream.write(this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value);\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, level) {\n      this.stream.write(this.space(level) + '<!ENTITY');\n      if (node.pe) {\n        this.stream.write(' %');\n      }\n      this.stream.write(' ' + node.name);\n      if (node.value) {\n        this.stream.write(' \"' + node.value + '\"');\n      } else {\n        if (node.pubID && node.sysID) {\n          this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n        } else if (node.sysID) {\n          this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n        }\n        if (node.nData) {\n          this.stream.write(' NDATA ' + node.nData);\n        }\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, level) {\n      this.stream.write(this.space(level) + '<!NOTATION ' + node.name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.pubID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.endline = function(node) {\n      if (!node.isLastRootNode) {\n        return this.newline;\n      } else {\n        return '';\n      }\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = require('sax');\n\n  events = require('events');\n\n  bom = require('./bom');\n\n  processors = require('./processors');\n\n  setImmediate = require('timers').setImmediate;\n\n  defaults = require('./defaults').defaults;\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              obj[nodeName] = old;\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    return Parser;\n\n  })(events.EventEmitter);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n}).call(this);\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  exports.stripBOM = function(str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n\n}).call(this);\n","import * as fs from \"fs\";\nimport * as path from \"path\";\nimport * as tmp from \"tmp\";\nimport { Uri, workspace } from \"vscode\";\nimport {\n  ConstructorPolicy,\n  ICpOptions,\n  IExecutionResult,\n  IFileStatus,\n  ISvnInfo,\n  ISvnLogEntry,\n  Status\n} from \"./common/types\";\nimport { sequentialize } from \"./decorators\";\nimport { getBranchName } from \"./helpers/branch\";\nimport { configuration } from \"./helpers/configuration\";\nimport { parseInfoXml } from \"./infoParser\";\nimport { parseSvnList } from \"./listParser\";\nimport { parseSvnLog } from \"./logParser\";\nimport { parseStatusXml } from \"./statusParser\";\nimport { Svn } from \"./svn\";\nimport { fixPathSeparator, unwrap } from \"./util\";\n\nexport class Repository {\n  private _infoCache: { [index: string]: ISvnInfo } = {};\n  private _info?: ISvnInfo;\n\n  public username?: string;\n  public password?: string;\n\n  constructor(\n    private svn: Svn,\n    public root: string,\n    public workspaceRoot: string,\n    policy: ConstructorPolicy\n  ) {\n    if (policy === ConstructorPolicy.LateInit) {\n      console.error(\n        \"Constructor called in sync fashion, test-only\\n\",\n        new Error().stack\n      );\n      return;\n    }\n    return ((async (): Promise<Repository> => {\n      await this.updateInfo();\n      return this;\n    })() as unknown) as Repository;\n  }\n\n  public async updateInfo() {\n    const result = await this.exec([\"info\", \"--xml\", this.root]);\n    this._info = await parseInfoXml(result.stdout);\n  }\n\n  public async exec(\n    args: string[],\n    options: ICpOptions = {}\n  ): Promise<IExecutionResult> {\n    options.username = this.username;\n    options.password = this.password;\n\n    return this.svn.exec(this.workspaceRoot, args, options);\n  }\n\n  public removeAbsolutePath(file: string) {\n    file = fixPathSeparator(file);\n\n    file = path.relative(this.workspaceRoot, file);\n\n    if (file === \"\") {\n      file = \".\";\n    }\n\n    // Fix Peg Revision Algorithm (http://svnbook.red-bean.com/en/1.8/svn.advanced.pegrevs.html)\n    if (/@/.test(file)) {\n      file += \"@\";\n    }\n\n    return file;\n  }\n\n  public async getStatus(params: {\n    includeIgnored?: boolean;\n    includeExternals?: boolean;\n    checkRemoteChanges?: boolean;\n  }): Promise<IFileStatus[]> {\n    params = Object.assign(\n      {},\n      {\n        includeIgnored: false,\n        includeExternals: true,\n        checkRemoteChanges: false\n      },\n      params\n    );\n\n    const args = [\"stat\", \"--xml\"];\n\n    if (params.includeIgnored) {\n      args.push(\"--no-ignore\");\n    }\n    if (!params.includeExternals) {\n      args.push(\"--ignore-externals\");\n    }\n    if (params.checkRemoteChanges) {\n      args.push(\"--show-updates\");\n    }\n\n    const result = await this.exec(args);\n\n    const status: IFileStatus[] = await parseStatusXml(result.stdout);\n\n    for (const s of status) {\n      if (s.status === Status.EXTERNAL) {\n        try {\n          const info = await this.getInfo(s.path);\n          s.repositoryUuid = info.repository.uuid;\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n\n    return status;\n  }\n\n  public get info(): ISvnInfo {\n    return unwrap(this._info);\n  }\n\n  public resetInfoCache(file: string = \"\") {\n    delete this._infoCache[file];\n  }\n\n  @sequentialize\n  public async getInfo(\n    file: string = \"\",\n    revision?: string,\n    skipCache: boolean = false\n  ): Promise<ISvnInfo> {\n    if (!skipCache && this._infoCache[file]) {\n      return this._infoCache[file];\n    }\n\n    const args = [\"info\", \"--xml\"];\n\n    if (revision) {\n      args.push(\"-r\", revision);\n    }\n\n    if (file) {\n      file = fixPathSeparator(file);\n      args.push(file);\n    }\n\n    const result = await this.exec(args);\n\n    this._infoCache[file] = await parseInfoXml(result.stdout);\n\n    // Cache for 2 minutes\n    setTimeout(() => {\n      this.resetInfoCache(file);\n    }, 2 * 60 * 1000);\n\n    return this._infoCache[file];\n  }\n\n  public async show(\n    file: string | Uri,\n    revision?: string,\n    options: ICpOptions = {}\n  ): Promise<string> {\n    const args = [\"cat\"];\n    let target: string;\n    if (file instanceof Uri) {\n      target = file.toString(true);\n    } else {\n      target = file;\n    }\n    if (revision) {\n      args.push(\"-r\", revision);\n      if (\n        typeof file === \"string\" &&\n        ![\"BASE\", \"COMMITTED\", \"PREV\"].includes(revision.toUpperCase())\n      ) {\n        const info = await this.getInfo();\n        target = this.removeAbsolutePath(target);\n        target = info.url + \"/\" + target.replace(/\\\\/g, \"/\");\n        // TODO move to SvnRI\n      }\n    }\n\n    args.push(target);\n\n    let encoding = \"utf8\";\n    if (typeof file === \"string\") {\n      const uri = Uri.file(file);\n      file = this.removeAbsolutePath(file);\n      encoding = workspace\n        .getConfiguration(\"files\", uri)\n        .get<string>(\"encoding\", encoding);\n    }\n\n    const result = await this.exec(args, { encoding });\n\n    return result.stdout;\n  }\n\n  public async commitFiles(message: string, files: string[]) {\n    files = files.map(file => this.removeAbsolutePath(file));\n\n    const args = [\"commit\", ...files];\n\n    if (fs.existsSync(path.join(this.workspaceRoot, message))) {\n      args.push(\"--force-log\");\n    }\n\n    let tmpFile: tmp.SynchrounousResult | undefined;\n\n    /**\n     * For message with line break or non:\n     * \\x00-\\x7F -> ASCII\n     * \\x80-\\xFF -> Latin\n     * Use a file for commit message\n     */\n    if (/\\n|[^\\x00-\\x7F\\x80-\\xFF]/.test(message)) {\n      tmp.setGracefulCleanup();\n\n      tmpFile = tmp.fileSync({\n        prefix: \"svn-commit-message-\"\n      });\n\n      fs.writeFileSync(tmpFile.name, message, \"UTF-8\");\n\n      args.push(\"-F\", tmpFile.name);\n      args.push(\"--encoding\", \"UTF-8\");\n    } else {\n      args.push(\"-m\", message);\n    }\n\n    // Prevents commit the files inside the folder\n    args.push(\"--depth\", \"empty\");\n\n    const result = await this.exec(args);\n\n    // Remove temporary file if exists\n    if (tmpFile) {\n      tmpFile.removeCallback();\n    }\n\n    const matches = result.stdout.match(/Committed revision (.*)\\./i);\n    if (matches && matches[0]) {\n      return matches[0];\n    }\n\n    return result.stdout;\n  }\n\n  public addFiles(files: string[]) {\n    files = files.map(file => this.removeAbsolutePath(file));\n    return this.exec([\"add\", ...files]);\n  }\n\n  public addChangelist(files: string[], changelist: string) {\n    files = files.map(file => this.removeAbsolutePath(file));\n    return this.exec([\"changelist\", changelist, ...files]);\n  }\n\n  public removeChangelist(files: string[]) {\n    files = files.map(file => this.removeAbsolutePath(file));\n    return this.exec([\"changelist\", \"--remove\", ...files]);\n  }\n\n  public async getCurrentBranch(): Promise<string> {\n    const info = await this.getInfo();\n\n    const branch = getBranchName(info.url);\n\n    if (branch) {\n      const showFullName = configuration.get<boolean>(\"layout.showFullName\");\n      if (showFullName) {\n        return branch.path;\n      } else {\n        return branch.name;\n      }\n    }\n\n    return \"\";\n  }\n\n  public async getRepositoryUuid(): Promise<string> {\n    const info = await this.getInfo();\n\n    return info.repository.uuid;\n  }\n\n  public async getRepoUrl() {\n    const info = await this.getInfo();\n\n    const branch = getBranchName(info.url);\n\n    if (!branch) {\n      return info.repository.root;\n    }\n\n    const regex = new RegExp(branch.path + \"$\");\n\n    return info.url.replace(regex, \"\").replace(/\\/$/, \"\");\n  }\n\n  public async getBranches() {\n    const trunkLayout = configuration.get<string>(\"layout.trunk\");\n    const branchesLayout = configuration.get<string>(\"layout.branches\");\n    const tagsLayout = configuration.get<string>(\"layout.tags\");\n\n    const repoUrl = await this.getRepoUrl();\n\n    const branches: string[] = [];\n\n    const promises = [];\n\n    if (trunkLayout) {\n      promises.push(\n        new Promise<string[]>(async resolve => {\n          try {\n            const trunkExists = await this.exec([\n              \"ls\",\n              repoUrl + \"/\" + trunkLayout,\n              \"--depth\",\n              \"empty\"\n            ]);\n\n            resolve([trunkLayout]);\n          } catch (error) {\n            resolve([]);\n          }\n        })\n      );\n    }\n\n    const trees: string[] = [];\n\n    if (branchesLayout) {\n      trees.push(branchesLayout);\n    }\n\n    if (tagsLayout) {\n      trees.push(tagsLayout);\n    }\n\n    for (const tree of trees) {\n      promises.push(\n        new Promise<string[]>(async resolve => {\n          const branchUrl = repoUrl + \"/\" + tree;\n\n          try {\n            const result = await this.exec([\"ls\", branchUrl]);\n\n            const list = result.stdout\n              .trim()\n              .replace(/\\/|\\\\/g, \"\")\n              .split(/[\\r\\n]+/)\n              .filter((x: string) => !!x)\n              .map((i: string) => tree + \"/\" + i);\n\n            resolve(list);\n          } catch (error) {\n            resolve([]);\n          }\n        })\n      );\n    }\n\n    const all = await Promise.all<any>(promises);\n    all.forEach(list => {\n      branches.push(...list);\n    });\n\n    return branches;\n  }\n\n  public async newBranch(\n    name: string,\n    commitMessage: string = \"Created new branch\"\n  ) {\n    const repoUrl = await this.getRepoUrl();\n    const newBranch = repoUrl + \"/\" + name;\n    const info = await this.getInfo();\n    const currentBranch = info.url;\n    const result = await this.exec([\n      \"copy\",\n      currentBranch,\n      newBranch,\n      \"-m\",\n      commitMessage\n    ]);\n\n    await this.switchBranch(name);\n\n    return true;\n  }\n\n  public async switchBranch(ref: string, force: boolean = false) {\n    const repoUrl = await this.getRepoUrl();\n    const branchUrl = repoUrl + \"/\" + ref;\n\n    await this.exec(\n      [\"switch\", branchUrl].concat(force ? [\"--ignore-ancestry\"] : [])\n    );\n\n    this.resetInfoCache();\n    return true;\n  }\n\n  public async revert(files: string[]) {\n    files = files.map(file => this.removeAbsolutePath(file));\n    const result = await this.exec([\"revert\", ...files]);\n    return result.stdout;\n  }\n\n  public async update(ignoreExternals: boolean = true): Promise<string> {\n    const args = [\"update\"];\n\n    if (ignoreExternals) {\n      args.push(\"--ignore-externals\");\n    }\n\n    const result = await this.exec(args);\n\n    this.resetInfoCache();\n\n    const message = result.stdout\n      .trim()\n      .split(/\\r?\\n/)\n      .pop();\n\n    if (message) {\n      return message;\n    }\n    return result.stdout;\n  }\n\n  public async pullIncomingChange(path: string): Promise<string> {\n    const args = [\"update\", path];\n\n    const result = await this.exec(args);\n\n    this.resetInfoCache();\n\n    const message = result.stdout\n      .trim()\n      .split(/\\r?\\n/)\n      .pop();\n\n    if (message) {\n      return message;\n    }\n    return result.stdout;\n  }\n\n  public async patch(files: string[]) {\n    files = files.map(file => this.removeAbsolutePath(file));\n    const result = await this.exec([\"diff\", ...files]);\n    const message = result.stdout;\n    return message;\n  }\n\n  public async patchChangelist(changelistName: string) {\n    const result = await this.exec([\"diff\", \"--changelist\", changelistName]);\n    const message = result.stdout;\n    return message;\n  }\n\n  public async removeFiles(files: string[], keepLocal: boolean) {\n    files = files.map(file => this.removeAbsolutePath(file));\n    const args = [\"remove\"];\n\n    if (keepLocal) {\n      args.push(\"--keep-local\");\n    }\n\n    args.push(...files);\n\n    const result = await this.exec(args);\n\n    return result.stdout;\n  }\n\n  public async resolve(files: string[], action: string) {\n    files = files.map(file => this.removeAbsolutePath(file));\n\n    const result = await this.exec([\"resolve\", \"--accept\", action, ...files]);\n\n    return result.stdout;\n  }\n\n  public async plainLog(): Promise<string> {\n    const logLength = configuration.get<string>(\"log.length\") || \"50\";\n    const result = await this.exec([\n      \"log\",\n      \"-r\",\n      \"HEAD:1\",\n      \"--limit\",\n      logLength\n    ]);\n\n    return result.stdout;\n  }\n\n  public async log(\n    rfrom: string,\n    rto: string,\n    limit: number,\n    target?: string | Uri\n  ): Promise<ISvnLogEntry[]> {\n    const args = [\n      \"log\",\n      \"-r\",\n      `${rfrom}:${rto}`,\n      `--limit=${limit}`,\n      \"--xml\",\n      \"-v\"\n    ];\n    if (target !== undefined) {\n      args.push(target instanceof Uri ? target.toString(true) : target);\n    }\n    const result = await this.exec(args);\n\n    return parseSvnLog(result.stdout);\n  }\n\n  public async countNewCommit(revision: string = \"BASE:HEAD\") {\n    const result = await this.exec([\"log\", \"-r\", revision, \"-q\", \"--xml\"]);\n\n    const matches = result.stdout.match(/<logentry/g);\n\n    if (matches && matches.length > 0) {\n      // Every return current commit\n      return matches.length - 1;\n    }\n\n    return 0;\n  }\n\n  public async cleanup() {\n    const result = await this.exec([\"cleanup\"]);\n\n    return result.stdout;\n  }\n\n  public async finishCheckout() {\n    const info = await this.getInfo();\n\n    const result = await this.exec([\"switch\", info.url]);\n\n    return result.stdout;\n  }\n\n  public async list(folder?: string) {\n    let url = await this.getRepoUrl();\n\n    if (folder) {\n      url += \"/\" + folder;\n    }\n\n    const result = await this.exec([\"list\", url, \"--xml\"]);\n\n    return parseSvnList(result.stdout);\n  }\n\n  public async getCurrentIgnore(directory: string) {\n    directory = this.removeAbsolutePath(directory);\n\n    let currentIgnore = \"\";\n\n    try {\n      const args = [\"propget\", \"svn:ignore\"];\n\n      if (directory) {\n        args.push(directory);\n      }\n\n      const currentIgnoreResult = await this.exec(args);\n\n      currentIgnore = currentIgnoreResult.stdout.trim();\n    } catch (error) {\n      console.error(error);\n    }\n\n    const ignores = currentIgnore.split(/[\\r\\n]+/);\n\n    return ignores;\n  }\n\n  public async addToIgnore(\n    expressions: string[],\n    directory: string,\n    recursive: boolean = false\n  ) {\n    const ignores = await this.getCurrentIgnore(directory);\n\n    directory = this.removeAbsolutePath(directory);\n\n    ignores.push(...expressions);\n    const newIgnore = [...new Set(ignores)]\n      .filter(v => !!v)\n      .sort()\n      .join(\"\\n\");\n\n    const args = [\"propset\", \"svn:ignore\", newIgnore];\n\n    if (directory) {\n      args.push(directory);\n    } else {\n      args.push(\".\");\n    }\n    if (recursive) {\n      args.push(\"--recursive\");\n    }\n\n    const result = await this.exec(args);\n\n    return result.stdout;\n  }\n\n  public async rename(oldName: string, newName: string): Promise<string> {\n    oldName = this.removeAbsolutePath(oldName);\n    newName = this.removeAbsolutePath(newName);\n    const args = [\"rename\", oldName, newName];\n\n    const result = await this.exec(args);\n\n    return result.stdout;\n  }\n}\n","/*!\n * Tmp\n *\n * Copyright (c) 2011-2017 KARASZI Istvan <github@spam.raszi.hu>\n *\n * MIT Licensed\n */\n\n/*\n * Module dependencies.\n */\nconst fs = require('fs');\nconst path = require('path');\nconst crypto = require('crypto');\nconst osTmpDir = require('os-tmpdir');\nconst _c = process.binding('constants');\n\n/*\n * The working inner variables.\n */\nconst\n  /**\n   * The temporary directory.\n   * @type {string}\n   */\n  tmpDir = osTmpDir(),\n\n  // the random characters to choose from\n  RANDOM_CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n\n  TEMPLATE_PATTERN = /XXXXXX/,\n\n  DEFAULT_TRIES = 3,\n\n  CREATE_FLAGS = (_c.O_CREAT || _c.fs.O_CREAT) | (_c.O_EXCL || _c.fs.O_EXCL) | (_c.O_RDWR || _c.fs.O_RDWR),\n\n  EBADF = _c.EBADF || _c.os.errno.EBADF,\n  ENOENT = _c.ENOENT || _c.os.errno.ENOENT,\n\n  DIR_MODE = 448 /* 0o700 */,\n  FILE_MODE = 384 /* 0o600 */,\n\n  // this will hold the objects need to be removed on exit\n  _removeObjects = [];\n\nvar\n  _gracefulCleanup = false,\n  _uncaughtException = false;\n\n/**\n * Random name generator based on crypto.\n * Adapted from http://blog.tompawlak.org/how-to-generate-random-values-nodejs-javascript\n *\n * @param {number} howMany\n * @returns {string} the generated random name\n * @private\n */\nfunction _randomChars(howMany) {\n  var\n    value = [],\n    rnd = null;\n\n  // make sure that we do not fail because we ran out of entropy\n  try {\n    rnd = crypto.randomBytes(howMany);\n  } catch (e) {\n    rnd = crypto.pseudoRandomBytes(howMany);\n  }\n\n  for (var i = 0; i < howMany; i++) {\n    value.push(RANDOM_CHARS[rnd[i] % RANDOM_CHARS.length]);\n  }\n\n  return value.join('');\n}\n\n/**\n * Checks whether the `obj` parameter is defined or not.\n *\n * @param {Object} obj\n * @returns {boolean} true if the object is undefined\n * @private\n */\nfunction _isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\n\n/**\n * Parses the function arguments.\n *\n * This function helps to have optional arguments.\n *\n * @param {(Options|Function)} options\n * @param {Function} callback\n * @returns {Array} parsed arguments\n * @private\n */\nfunction _parseArguments(options, callback) {\n  if (typeof options == 'function') {\n    return [callback || {}, options];\n  }\n\n  if (_isUndefined(options)) {\n    return [{}, callback];\n  }\n\n  return [options, callback];\n}\n\n/**\n * Generates a new temporary name.\n *\n * @param {Object} opts\n * @returns {string} the new random name according to opts\n * @private\n */\nfunction _generateTmpName(opts) {\n  if (opts.name) {\n    return path.join(opts.dir || tmpDir, opts.name);\n  }\n\n  // mkstemps like template\n  if (opts.template) {\n    return opts.template.replace(TEMPLATE_PATTERN, _randomChars(6));\n  }\n\n  // prefix and postfix\n  const name = [\n    opts.prefix || 'tmp-',\n    process.pid,\n    _randomChars(12),\n    opts.postfix || ''\n  ].join('');\n\n  return path.join(opts.dir || tmpDir, name);\n}\n\n/**\n * Gets a temporary file name.\n *\n * @param {(Options|tmpNameCallback)} options options or callback\n * @param {?tmpNameCallback} callback the callback function\n */\nfunction tmpName(options, callback) {\n  var\n    args = _parseArguments(options, callback),\n    opts = args[0],\n    cb = args[1],\n    tries = opts.name ? 1 : opts.tries || DEFAULT_TRIES;\n\n  if (isNaN(tries) || tries < 0)\n    return cb(new Error('Invalid tries'));\n\n  if (opts.template && !opts.template.match(TEMPLATE_PATTERN))\n    return cb(new Error('Invalid template provided'));\n\n  (function _getUniqueName() {\n    const name = _generateTmpName(opts);\n\n    // check whether the path exists then retry if needed\n    fs.stat(name, function (err) {\n      if (!err) {\n        if (tries-- > 0) return _getUniqueName();\n\n        return cb(new Error('Could not get a unique tmp filename, max tries reached ' + name));\n      }\n\n      cb(null, name);\n    });\n  }());\n}\n\n/**\n * Synchronous version of tmpName.\n *\n * @param {Object} options\n * @returns {string} the generated random name\n * @throws {Error} if the options are invalid or could not generate a filename\n */\nfunction tmpNameSync(options) {\n  var\n    args = _parseArguments(options),\n    opts = args[0],\n    tries = opts.name ? 1 : opts.tries || DEFAULT_TRIES;\n\n  if (isNaN(tries) || tries < 0)\n    throw new Error('Invalid tries');\n\n  if (opts.template && !opts.template.match(TEMPLATE_PATTERN))\n    throw new Error('Invalid template provided');\n\n  do {\n    const name = _generateTmpName(opts);\n    try {\n      fs.statSync(name);\n    } catch (e) {\n      return name;\n    }\n  } while (tries-- > 0);\n\n  throw new Error('Could not get a unique tmp filename, max tries reached');\n}\n\n/**\n * Creates and opens a temporary file.\n *\n * @param {(Options|fileCallback)} options the config options or the callback function\n * @param {?fileCallback} callback\n */\nfunction file(options, callback) {\n  var\n    args = _parseArguments(options, callback),\n    opts = args[0],\n    cb = args[1];\n\n  opts.postfix = (_isUndefined(opts.postfix)) ? '.tmp' : opts.postfix;\n\n  // gets a temporary filename\n  tmpName(opts, function _tmpNameCreated(err, name) {\n    if (err) return cb(err);\n\n    // create and open the file\n    fs.open(name, CREATE_FLAGS, opts.mode || FILE_MODE, function _fileCreated(err, fd) {\n      if (err) return cb(err);\n\n      if (opts.discardDescriptor) {\n        return fs.close(fd, function _discardCallback(err) {\n          if (err) {\n            // Low probability, and the file exists, so this could be\n            // ignored.  If it isn't we certainly need to unlink the\n            // file, and if that fails too its error is more\n            // important.\n            try {\n              fs.unlinkSync(name);\n            } catch (e) {\n              if (!isENOENT(e)) {\n                err = e;\n              }\n            }\n            return cb(err);\n          }\n          cb(null, name, undefined, _prepareTmpFileRemoveCallback(name, -1, opts));\n        });\n      }\n      if (opts.detachDescriptor) {\n        return cb(null, name, fd, _prepareTmpFileRemoveCallback(name, -1, opts));\n      }\n      cb(null, name, fd, _prepareTmpFileRemoveCallback(name, fd, opts));\n    });\n  });\n}\n\n/**\n * Synchronous version of file.\n *\n * @param {Options} options\n * @returns {FileSyncObject} object consists of name, fd and removeCallback\n * @throws {Error} if cannot create a file\n */\nfunction fileSync(options) {\n  var\n    args = _parseArguments(options),\n    opts = args[0];\n\n  opts.postfix = opts.postfix || '.tmp';\n\n  const discardOrDetachDescriptor = opts.discardDescriptor || opts.detachDescriptor;\n  const name = tmpNameSync(opts);\n  var fd = fs.openSync(name, CREATE_FLAGS, opts.mode || FILE_MODE);\n  if (opts.discardDescriptor) {\n    fs.closeSync(fd); \n    fd = undefined;\n  }\n\n  return {\n    name: name,\n    fd: fd,\n    removeCallback: _prepareTmpFileRemoveCallback(name, discardOrDetachDescriptor ? -1 : fd, opts)\n  };\n}\n\n/**\n * Removes files and folders in a directory recursively.\n *\n * @param {string} root\n * @private\n */\nfunction _rmdirRecursiveSync(root) {\n  const dirs = [root];\n\n  do {\n    var\n      dir = dirs.pop(),\n      deferred = false,\n      files = fs.readdirSync(dir);\n\n    for (var i = 0, length = files.length; i < length; i++) {\n      var\n        file = path.join(dir, files[i]),\n        stat = fs.lstatSync(file); // lstat so we don't recurse into symlinked directories\n\n      if (stat.isDirectory()) {\n        if (!deferred) {\n          deferred = true;\n          dirs.push(dir);\n        }\n        dirs.push(file);\n      } else {\n        fs.unlinkSync(file);\n      }\n    }\n\n    if (!deferred) {\n      fs.rmdirSync(dir);\n    }\n  } while (dirs.length !== 0);\n}\n\n/**\n * Creates a temporary directory.\n *\n * @param {(Options|dirCallback)} options the options or the callback function\n * @param {?dirCallback} callback\n */\nfunction dir(options, callback) {\n  var\n    args = _parseArguments(options, callback),\n    opts = args[0],\n    cb = args[1];\n\n  // gets a temporary filename\n  tmpName(opts, function _tmpNameCreated(err, name) {\n    if (err) return cb(err);\n\n    // create the directory\n    fs.mkdir(name, opts.mode || DIR_MODE, function _dirCreated(err) {\n      if (err) return cb(err);\n\n      cb(null, name, _prepareTmpDirRemoveCallback(name, opts));\n    });\n  });\n}\n\n/**\n * Synchronous version of dir.\n *\n * @param {Options} options\n * @returns {DirSyncObject} object consists of name and removeCallback\n * @throws {Error} if it cannot create a directory\n */\nfunction dirSync(options) {\n  var\n    args = _parseArguments(options),\n    opts = args[0];\n\n  const name = tmpNameSync(opts);\n  fs.mkdirSync(name, opts.mode || DIR_MODE);\n\n  return {\n    name: name,\n    removeCallback: _prepareTmpDirRemoveCallback(name, opts)\n  };\n}\n\n/**\n * Prepares the callback for removal of the temporary file.\n *\n * @param {string} name the path of the file\n * @param {number} fd file descriptor\n * @param {Object} opts\n * @returns {fileCallback}\n * @private\n */\nfunction _prepareTmpFileRemoveCallback(name, fd, opts) {\n  const removeCallback = _prepareRemoveCallback(function _removeCallback(fdPath) {\n    try {\n      if (0 <= fdPath[0]) {\n        fs.closeSync(fdPath[0]);\n      }\n    }\n    catch (e) {\n      // under some node/windows related circumstances, a temporary file\n      // may have not be created as expected or the file was already closed\n      // by the user, in which case we will simply ignore the error\n      if (!isEBADF(e) && !isENOENT(e)) {\n        // reraise any unanticipated error\n        throw e;\n      }\n    }\n    try {\n      fs.unlinkSync(fdPath[1]);\n    }\n    catch (e) {\n      if (!isENOENT(e)) {\n        // reraise any unanticipated error\n        throw e;\n      }\n    }\n  }, [fd, name]);\n\n  if (!opts.keep) {\n    _removeObjects.unshift(removeCallback);\n  }\n\n  return removeCallback;\n}\n\n/**\n * Prepares the callback for removal of the temporary directory.\n *\n * @param {string} name\n * @param {Object} opts\n * @returns {Function} the callback\n * @private\n */\nfunction _prepareTmpDirRemoveCallback(name, opts) {\n  const removeFunction = opts.unsafeCleanup ? _rmdirRecursiveSync : fs.rmdirSync.bind(fs);\n  const removeCallback = _prepareRemoveCallback(removeFunction, name);\n\n  if (!opts.keep) {\n    _removeObjects.unshift(removeCallback);\n  }\n\n  return removeCallback;\n}\n\n/**\n * Creates a guarded function wrapping the removeFunction call.\n *\n * @param {Function} removeFunction\n * @param {Object} arg\n * @returns {Function}\n * @private\n */\nfunction _prepareRemoveCallback(removeFunction, arg) {\n  var called = false;\n\n  return function _cleanupCallback(next) {\n    if (!called) {\n      const index = _removeObjects.indexOf(_cleanupCallback);\n      if (index >= 0) {\n        _removeObjects.splice(index, 1);\n      }\n\n      called = true;\n      removeFunction(arg);\n    }\n\n    if (next) next(null);\n  };\n}\n\n/**\n * The garbage collector.\n *\n * @private\n */\nfunction _garbageCollector() {\n  if (_uncaughtException && !_gracefulCleanup) {\n    return;\n  }\n\n  // the function being called removes itself from _removeObjects,\n  // loop until _removeObjects is empty\n  while (_removeObjects.length) {\n    try {\n      _removeObjects[0].call(null);\n    } catch (e) {\n      // already removed?\n    }\n  }\n}\n\n/**\n * Helper for testing against EBADF to compensate changes made to Node 7.x under Windows.\n */\nfunction isEBADF(error) {\n  return isExpectedError(error, -EBADF, 'EBADF');\n}\n\n/**\n * Helper for testing against ENOENT to compensate changes made to Node 7.x under Windows.\n */\nfunction isENOENT(error) {\n  return isExpectedError(error, -ENOENT, 'ENOENT');\n}\n\n/**\n * Helper to determine whether the expected error code matches the actual code and errno,\n * which will differ between the supported node versions.\n *\n * - Node >= 7.0:\n *   error.code {String}\n *   error.errno {String|Number} any numerical value will be negated\n *\n * - Node >= 6.0 < 7.0:\n *   error.code {String}\n *   error.errno {Number} negated\n *\n * - Node >= 4.0 < 6.0: introduces SystemError\n *   error.code {String}\n *   error.errno {Number} negated\n *\n * - Node >= 0.10 < 4.0:\n *   error.code {Number} negated\n *   error.errno n/a\n */\nfunction isExpectedError(error, code, errno) {\n  return error.code == code || error.code == errno;\n}\n\n/**\n * Sets the graceful cleanup.\n *\n * Also removes the created files and directories when an uncaught exception occurs.\n */\nfunction setGracefulCleanup() {\n  _gracefulCleanup = true;\n}\n\nconst version = process.versions.node.split('.').map(function (value) {\n  return parseInt(value, 10);\n});\n\nif (version[0] === 0 && (version[1] < 9 || version[1] === 9 && version[2] < 5)) {\n  process.addListener('uncaughtException', function _uncaughtExceptionThrown(err) {\n    _uncaughtException = true;\n    _garbageCollector();\n\n    throw err;\n  });\n}\n\nprocess.addListener('exit', function _exit(code) {\n  if (code) _uncaughtException = true;\n  _garbageCollector();\n});\n\n/**\n * Configuration options.\n *\n * @typedef {Object} Options\n * @property {?number} tries the number of tries before give up the name generation\n * @property {?string} template the \"mkstemp\" like filename template\n * @property {?string} name fix name\n * @property {?string} dir the tmp directory to use\n * @property {?string} prefix prefix for the generated name\n * @property {?string} postfix postfix for the generated name\n */\n\n/**\n * @typedef {Object} FileSyncObject\n * @property {string} name the name of the file\n * @property {string} fd the file descriptor\n * @property {fileCallback} removeCallback the callback function to remove the file\n */\n\n/**\n * @typedef {Object} DirSyncObject\n * @property {string} name the name of the directory\n * @property {fileCallback} removeCallback the callback function to remove the directory\n */\n\n/**\n * @callback tmpNameCallback\n * @param {?Error} err the error object if anything goes wrong\n * @param {string} name the temporary file name\n */\n\n/**\n * @callback fileCallback\n * @param {?Error} err the error object if anything goes wrong\n * @param {string} name the temporary file name\n * @param {number} fd the file descriptor\n * @param {cleanupCallback} fn the cleanup callback function\n */\n\n/**\n * @callback dirCallback\n * @param {?Error} err the error object if anything goes wrong\n * @param {string} name the temporary file name\n * @param {cleanupCallback} fn the cleanup callback function\n */\n\n/**\n * Removes the temporary created file or directory.\n *\n * @callback cleanupCallback\n * @param {simpleCallback} [next] function to call after entry was removed\n */\n\n/**\n * Callback function for function composition.\n * @see {@link https://github.com/raszi/node-tmp/issues/57|raszi/node-tmp#57}\n *\n * @callback simpleCallback\n */\n\n// exporting all the needed methods\nmodule.exports.tmpdir = tmpDir;\n\nmodule.exports.dir = dir;\nmodule.exports.dirSync = dirSync;\n\nmodule.exports.file = file;\nmodule.exports.fileSync = fileSync;\n\nmodule.exports.tmpName = tmpName;\nmodule.exports.tmpNameSync = tmpNameSync;\n\nmodule.exports.setGracefulCleanup = setGracefulCleanup;\n","'use strict';\nvar isWindows = process.platform === 'win32';\nvar trailingSlashRe = isWindows ? /[^:]\\\\$/ : /.\\/$/;\n\n// https://github.com/nodejs/node/blob/3e7a14381497a3b73dda68d05b5130563cdab420/lib/os.js#L25-L43\nmodule.exports = function () {\n\tvar path;\n\n\tif (isWindows) {\n\t\tpath = process.env.TEMP ||\n\t\t\tprocess.env.TMP ||\n\t\t\t(process.env.SystemRoot || process.env.windir) + '\\\\temp';\n\t} else {\n\t\tpath = process.env.TMPDIR ||\n\t\t\tprocess.env.TMP ||\n\t\t\tprocess.env.TEMP ||\n\t\t\t'/tmp';\n\t}\n\n\tif (trailingSlashRe.test(path)) {\n\t\tpath = path.slice(0, -1);\n\t}\n\n\treturn path;\n};\n","import * as xml2js from \"xml2js\";\nimport { xml2jsParseSettings } from \"./common/constants\";\nimport { ISvnListItem } from \"./common/types\";\n\nexport async function parseSvnList(content: string): Promise<ISvnListItem[]> {\n  return new Promise<ISvnListItem[]>((resolve, reject) => {\n    xml2js.parseString(content, xml2jsParseSettings, (err, result) => {\n      if (err) {\n        reject();\n      }\n\n      if (result.list && result.list.entry) {\n        if (!Array.isArray(result.list.entry)) {\n          result.list.entry = [result.list.entry];\n        }\n        resolve(result.list.entry);\n      } else {\n        resolve([]);\n      }\n    });\n  });\n}\n","import * as xml2js from \"xml2js\";\nimport { xml2jsParseSettings } from \"./common/constants\";\nimport { ISvnLogEntry } from \"./common/types\";\n\nexport async function parseSvnLog(content: string): Promise<ISvnLogEntry[]> {\n  return new Promise<ISvnLogEntry[]>((resolve, reject) => {\n    xml2js.parseString(content, xml2jsParseSettings, (err, result) => {\n      if (err) {\n        reject();\n      }\n      let transformed = [];\n      if (Array.isArray(result.logentry)) {\n        transformed = result.logentry;\n      } else if (typeof result.logentry === \"object\") {\n        transformed = [result.logentry];\n      }\n      for (const logentry of transformed) {\n        if (logentry.paths === undefined) {\n          logentry.paths = [];\n        } else if (Array.isArray(logentry.paths.path)) {\n          logentry.paths = logentry.paths.path;\n        } else {\n          logentry.paths = [logentry.paths.path];\n        }\n      }\n      resolve(transformed);\n    });\n  });\n}\n","import * as xml2js from \"xml2js\";\nimport { xml2jsParseSettings } from \"./common/constants\";\nimport { IEntry, IFileStatus, IWcStatus } from \"./common/types\";\n\nfunction processEntry(\n  entry: IEntry | IEntry[],\n  changelist?: string\n): IFileStatus[] {\n  if (Array.isArray(entry)) {\n    const list: IFileStatus[] = [];\n    entry.forEach((e: any) => {\n      const r = processEntry(e, changelist);\n      if (r) {\n        list.push(...r);\n      }\n    });\n    return list;\n  }\n\n  const wcStatus: IWcStatus = {\n    locked: !!entry.wcStatus.wcLocked && entry.wcStatus.wcLocked === \"true\",\n    switched: !!entry.wcStatus.switched && entry.wcStatus.switched === \"true\"\n  };\n\n  const r: IFileStatus = {\n    changelist,\n    path: entry.path,\n    status: entry.wcStatus.item,\n    props: entry.wcStatus.props,\n    wcStatus,\n    reposStatus: entry.reposStatus\n  };\n\n  if (entry.wcStatus.movedTo && r.status === \"deleted\") {\n    return [];\n  }\n  if (entry.wcStatus.movedFrom && r.status === \"added\") {\n    r.rename = entry.wcStatus.movedFrom;\n  }\n  if (entry.wcStatus.commit) {\n    r.commit = {\n      revision: entry.wcStatus.commit.revision,\n      author: entry.wcStatus.commit.author,\n      date: entry.wcStatus.commit.date\n    };\n  }\n\n  return [r];\n}\n\nfunction xmlToStatus(xml: any) {\n  const statusList: IFileStatus[] = [];\n  if (xml.target && xml.target.entry) {\n    statusList.push(...processEntry(xml.target.entry));\n  }\n\n  if (xml.changelist) {\n    if (!Array.isArray(xml.changelist)) {\n      xml.changelist = [xml.changelist];\n    }\n\n    xml.changelist.forEach((change: any) => {\n      statusList.push(...processEntry(change.entry, change.name));\n    });\n  }\n\n  return statusList;\n}\n\nexport async function parseStatusXml(content: string): Promise<IFileStatus[]> {\n  return new Promise<IFileStatus[]>((resolve, reject) => {\n    xml2js.parseString(content, xml2jsParseSettings, (err, result) => {\n      if (err) {\n        reject();\n      }\n\n      const statusList: IFileStatus[] = xmlToStatus(result);\n\n      resolve(statusList);\n    });\n  });\n}\n","import { Model } from \"../model\";\nimport { Repository } from \"../repository\";\nimport { Command } from \"./command\";\n\nexport class Cleanup extends Command {\n  constructor() {\n    super(\"svn.cleanup\", { repository: true });\n  }\n\n  public async execute(repository: Repository) {\n    await repository.cleanup();\n  }\n}\n","import { commands } from \"vscode\";\nimport { Model } from \"../model\";\nimport { Repository } from \"../repository\";\nimport { Command } from \"./command\";\n\nexport class Close extends Command {\n  constructor() {\n    super(\"svn.close\", { repository: true });\n  }\n\n  public async execute(repository: Repository) {\n    const model = (await commands.executeCommand(\"svn.getModel\", \"\")) as Model;\n\n    model.close(repository);\n  }\n}\n","import * as path from \"path\";\nimport { SourceControlResourceState, Uri, window } from \"vscode\";\nimport { Status } from \"../common/types\";\nimport { inputCommitMessage } from \"../messages\";\nimport { Resource } from \"../resource\";\nimport { Command } from \"./command\";\n\nexport class Commit extends Command {\n  constructor() {\n    super(\"svn.commit\");\n  }\n\n  public async execute(...resources: SourceControlResourceState[]) {\n    if (resources.length === 0 || !(resources[0].resourceUri instanceof Uri)) {\n      const resource = await this.getSCMResource();\n\n      if (!resource) {\n        return;\n      }\n\n      resources = [resource];\n    }\n\n    const selection = resources.filter(\n      s => s instanceof Resource\n    ) as Resource[];\n\n    const uris = selection.map(resource => resource.resourceUri);\n    selection.forEach(resource => {\n      if (resource.type === Status.ADDED && resource.renameResourceUri) {\n        uris.push(resource.renameResourceUri);\n      }\n    });\n\n    await this.runByRepository(uris, async (repository, resources) => {\n      if (!repository) {\n        return;\n      }\n\n      const paths = resources.map(resource => resource.fsPath);\n\n      for (const resource of resources) {\n        let dir = path.dirname(resource.fsPath);\n        let parent = repository.getResourceFromFile(dir);\n\n        while (parent) {\n          if (parent.type === Status.ADDED) {\n            paths.push(dir);\n          }\n          dir = path.dirname(dir);\n          parent = repository.getResourceFromFile(dir);\n        }\n      }\n\n      try {\n        const message = await inputCommitMessage(repository.inputBox.value);\n\n        if (message === undefined) {\n          return;\n        }\n\n        repository.inputBox.value = message;\n\n        const result = await repository.commitFiles(message, paths);\n        window.showInformationMessage(result);\n        repository.inputBox.value = \"\";\n      } catch (error) {\n        console.error(error);\n        window.showErrorMessage(error.stderrFormated);\n      }\n    });\n  }\n}\n","import * as path from \"path\";\nimport { window } from \"vscode\";\nimport { inputCommitChangelist } from \"../changelistItems\";\nimport { Status } from \"../common/types\";\nimport { inputCommitMessage } from \"../messages\";\nimport { Repository } from \"../repository\";\nimport { Resource } from \"../resource\";\nimport { Command } from \"./command\";\n\nexport class CommitWithMessage extends Command {\n  constructor() {\n    super(\"svn.commitWithMessage\", { repository: true });\n  }\n\n  public async execute(repository: Repository) {\n    const choice = await inputCommitChangelist(repository);\n    if (!choice) {\n      return;\n    }\n\n    const message = await inputCommitMessage(repository.inputBox.value, false);\n    if (message === undefined) {\n      return;\n    }\n\n    const filePaths = choice.resourceGroup.resourceStates.map(state => {\n      return state.resourceUri.fsPath;\n    });\n\n    // If files is renamed, the commit need previous file\n    choice.resourceGroup.resourceStates.forEach(state => {\n      if (state instanceof Resource) {\n        if (state.type === Status.ADDED && state.renameResourceUri) {\n          filePaths.push(state.renameResourceUri.fsPath);\n        }\n\n        let dir = path.dirname(state.resourceUri.fsPath);\n        let parent = repository.getResourceFromFile(dir);\n\n        while (parent) {\n          if (parent.type === Status.ADDED) {\n            filePaths.push(dir);\n          }\n          dir = path.dirname(dir);\n          parent = repository.getResourceFromFile(dir);\n        }\n      }\n    });\n\n    try {\n      const result = await repository.commitFiles(message, filePaths);\n      window.showInformationMessage(result);\n      repository.inputBox.value = \"\";\n    } catch (error) {\n      console.error(error);\n      window.showErrorMessage(error.stderrFormated);\n    }\n  }\n}\n","import * as fs from \"fs\";\nimport { SourceControlResourceState, window } from \"vscode\";\nimport { deleteDirectory } from \"../util\";\nimport { Command } from \"./command\";\n\nexport class DeleteUnversioned extends Command {\n  constructor() {\n    super(\"svn.deleteUnversioned\");\n  }\n\n  public async execute(...resourceStates: SourceControlResourceState[]) {\n    const selection = await this.getResourceStates(resourceStates);\n    if (selection.length === 0) {\n      return;\n    }\n    const uris = selection.map(resource => resource.resourceUri);\n    const answer = await window.showWarningMessage(\n      \"Would you like to delete selected files?\",\n      { modal: true },\n      \"Yes\",\n      \"No\"\n    );\n    if (answer === \"Yes\") {\n      for (const uri of uris) {\n        const fsPath = uri.fsPath;\n\n        if (!fs.existsSync(fsPath)) {\n          continue;\n        }\n\n        const stat = fs.lstatSync(fsPath);\n\n        if (stat.isDirectory()) {\n          deleteDirectory(fsPath);\n        } else {\n          fs.unlinkSync(fsPath);\n        }\n      }\n    }\n  }\n}\n","import { commands, Uri } from \"vscode\";\nimport { Command } from \"./command\";\n\nexport class FileOpen extends Command {\n  constructor() {\n    super(\"svn.fileOpen\");\n  }\n\n  public async execute(resourceUri: Uri) {\n    await commands.executeCommand(\"vscode.open\", resourceUri);\n  }\n}\n","import { Repository } from \"../repository\";\nimport { Command } from \"./command\";\n\nexport class FinishCheckout extends Command {\n  constructor() {\n    super(\"svn.finishCheckout\", { repository: true });\n  }\n\n  public async execute(repository: Repository) {\n    await repository.finishCheckout();\n  }\n}\n","import { Model } from \"../model\";\nimport { Command } from \"./command\";\n\nexport class GetModel extends Command {\n  constructor(protected model: Model) {\n    super(\"svn.getModel\");\n  }\n\n  public async execute() {\n    return this.model;\n  }\n}\n","import * as path from \"path\";\nimport { commands, Uri, window } from \"vscode\";\nimport { SvnUriAction } from \"../common/types\";\nimport { Repository } from \"../repository\";\nimport { toSvnUri } from \"../uri\";\nimport { Command } from \"./command\";\n\nexport class Log extends Command {\n  constructor() {\n    super(\"svn.log\", { repository: true });\n  }\n\n  public async execute(repository: Repository) {\n    try {\n      const resource = toSvnUri(\n        Uri.file(repository.workspaceRoot),\n        SvnUriAction.LOG\n      );\n      const uri = resource.with({\n        path: path.join(resource.path, \"svn.log\") // change document title\n      });\n\n      await commands.executeCommand<void>(\"vscode.open\", uri);\n    } catch (error) {\n      console.error(error);\n      window.showErrorMessage(\"Unable to log\");\n    }\n  }\n}\n","import { SourceControlResourceState, Uri } from \"vscode\";\nimport { Resource } from \"../resource\";\nimport { Command } from \"./command\";\n\nexport class OpenChangeBase extends Command {\n  constructor() {\n    super(\"svn.openChangeBase\", {});\n  }\n\n  public async execute(\n    arg?: Resource | Uri,\n    ...resourceStates: SourceControlResourceState[]\n  ) {\n    return this.openChange(arg, \"BASE\", resourceStates);\n  }\n}\n","import { SourceControlResourceState, Uri } from \"vscode\";\nimport { Resource } from \"../resource\";\nimport IncomingChangeNode from \"../treeView/nodes/incomingChangeNode\";\nimport { Command } from \"./command\";\n\nexport class OpenChangeHead extends Command {\n  constructor() {\n    super(\"svn.openChangeHead\");\n  }\n\n  public async execute(\n    arg?: Resource | Uri | IncomingChangeNode,\n    ...resourceStates: SourceControlResourceState[]\n  ) {\n    return this.openChange(arg, \"HEAD\", resourceStates);\n  }\n}\n","import { SourceControlResourceState, Uri } from \"vscode\";\nimport { Resource } from \"../resource\";\nimport IncomingChangeNode from \"../treeView/nodes/incomingChangeNode\";\nimport { Command } from \"./command\";\n\nexport class OpenChangePrev extends Command {\n  constructor() {\n    super(\"svn.openChangePrev\", {});\n  }\n\n  public async execute(\n    arg?: Resource | Uri | IncomingChangeNode,\n    ...resourceStates: SourceControlResourceState[]\n  ) {\n    return this.openChange(arg, \"PREV\", resourceStates);\n  }\n}\n","import * as fs from \"fs\";\nimport {\n  SourceControlResourceState,\n  TextDocumentShowOptions,\n  Uri,\n  ViewColumn,\n  window,\n  workspace\n} from \"vscode\";\nimport { Resource } from \"../resource\";\nimport IncomingChangeNode from \"../treeView/nodes/incomingChangeNode\";\nimport { fromSvnUri } from \"../uri\";\nimport { Command } from \"./command\";\n\nexport class OpenFile extends Command {\n  constructor() {\n    super(\"svn.openFile\");\n  }\n\n  public async execute(\n    arg?: Resource | Uri | IncomingChangeNode,\n    ...resourceStates: SourceControlResourceState[]\n  ) {\n    const preserveFocus = arg instanceof Resource;\n\n    let uris: Uri[] | undefined;\n\n    if (arg instanceof Uri) {\n      if (arg.scheme === \"svn\") {\n        uris = [Uri.file(fromSvnUri(arg).fsPath)];\n      } else if (arg.scheme === \"file\") {\n        uris = [arg];\n      }\n    } else if (arg instanceof IncomingChangeNode) {\n      const resource = new Resource(\n        arg.uri,\n        arg.type,\n        undefined,\n        arg.props,\n        true\n      );\n\n      uris = [resource.resourceUri];\n    } else {\n      const resource = arg;\n\n      if (!(resource instanceof Resource)) {\n        // can happen when called from a keybinding\n        // TODO(@JohnstonCode) fix this\n        // resource = this.getSCMResource();\n      }\n\n      if (resource) {\n        uris = [\n          ...resourceStates.map(r => r.resourceUri),\n          resource.resourceUri\n        ];\n      }\n    }\n\n    if (!uris) {\n      return;\n    }\n\n    const preview = uris.length === 1 ? true : false;\n    const activeTextEditor = window.activeTextEditor;\n    for (const uri of uris) {\n      if (fs.existsSync(uri.fsPath) && fs.statSync(uri.fsPath).isDirectory()) {\n        continue;\n      }\n\n      const opts: TextDocumentShowOptions = {\n        preserveFocus,\n        preview,\n        viewColumn: ViewColumn.Active\n      };\n\n      if (\n        activeTextEditor &&\n        activeTextEditor.document.uri.toString() === uri.toString()\n      ) {\n        opts.selection = activeTextEditor.selection;\n      }\n\n      const document = await workspace.openTextDocument(uri);\n      await window.showTextDocument(document, opts);\n    }\n  }\n}\n","import * as path from \"path\";\nimport { commands, Uri, window } from \"vscode\";\nimport { Resource } from \"../resource\";\nimport IncomingChangeNode from \"../treeView/nodes/incomingChangeNode\";\nimport { Command } from \"./command\";\n\nexport class OpenHeadFile extends Command {\n  constructor() {\n    super(\"svn.openHEADFile\");\n  }\n\n  public async execute(arg?: Resource | Uri | IncomingChangeNode) {\n    let resource: Resource | undefined;\n\n    if (arg instanceof Resource) {\n      resource = arg;\n    } else if (arg instanceof Uri) {\n      resource = await this.getSCMResource(arg);\n    } else if (arg instanceof IncomingChangeNode) {\n      resource = new Resource(arg.uri, arg.type, undefined, arg.props, true);\n    } else {\n      resource = await this.getSCMResource();\n    }\n\n    if (!resource) {\n      return;\n    }\n\n    const HEAD = this.getLeftResource(resource, \"HEAD\");\n\n    const basename = path.basename(resource.resourceUri.fsPath);\n    if (!HEAD) {\n      window.showWarningMessage(\n        `\"HEAD version of '${basename}' is not available.\"`\n      );\n      return;\n    }\n\n    const basedir = path.dirname(resource.resourceUri.fsPath);\n\n    const uri = HEAD.with({\n      path: path.join(basedir, `(HEAD) ${basename}`) // change document title\n    });\n\n    return commands.executeCommand<void>(\"vscode.open\", uri, {\n      preview: true\n    });\n  }\n}\n","import { Resource } from \"../resource\";\nimport { Command } from \"./command\";\n\nexport class OpenResourceBase extends Command {\n  constructor() {\n    super(\"svn.openResourceBase\");\n  }\n\n  public async execute(resource: Resource) {\n    await this._openResource(resource, \"BASE\", undefined, true, false);\n  }\n}\n","import { Resource } from \"../resource\";\nimport { Command } from \"./command\";\n\nexport class OpenResourceHead extends Command {\n  constructor() {\n    super(\"svn.openResourceHead\");\n  }\n\n  public async execute(resource: Resource) {\n    await this._openResource(resource, \"HEAD\", undefined, true, false);\n  }\n}\n","import { SourceControlResourceState } from \"vscode\";\nimport { Command } from \"./command\";\n\nexport class Patch extends Command {\n  constructor() {\n    super(\"svn.patch\");\n  }\n\n  public async execute(...resourceStates: SourceControlResourceState[]) {\n    const selection = await this.getResourceStates(resourceStates);\n\n    if (selection.length === 0) {\n      return;\n    }\n\n    const uris = selection.map(resource => resource.resourceUri);\n\n    await this.runByRepository(uris, async (repository, resources) => {\n      if (!repository) {\n        return;\n      }\n\n      const files = resources.map(resource => resource.fsPath);\n      const content = await repository.patch(files);\n      await this.showDiffPath(repository, content);\n    });\n  }\n}\n","import { Repository } from \"../repository\";\nimport { Command } from \"./command\";\n\nexport class PatchAll extends Command {\n  constructor() {\n    super(\"svn.patchAll\", { repository: true });\n  }\n\n  public async execute(repository: Repository) {\n    const content = await repository.patch([]);\n    await this.showDiffPath(repository, content);\n  }\n}\n","import { getPatchChangelist } from \"../changelistItems\";\nimport { Repository } from \"../repository\";\nimport { Command } from \"./command\";\n\nexport class PatchChangeList extends Command {\n  constructor() {\n    super(\"svn.patchChangeList\", { repository: true });\n  }\n\n  public async execute(repository: Repository) {\n    const changelistName = await getPatchChangelist(repository);\n\n    if (!changelistName) {\n      return;\n    }\n\n    const content = await repository.patchChangelist(changelistName);\n    await this.showDiffPath(repository, content);\n  }\n}\n","import { window } from \"vscode\";\nimport { IAuth } from \"../common/types\";\nimport { Repository } from \"../repository\";\nimport { Command } from \"./command\";\n\nexport class PromptAuth extends Command {\n  constructor() {\n    super(\"svn.promptAuth\");\n  }\n\n  public async execute(prevUsername?: string, prevPassword?: string) {\n    const username = await window.showInputBox({\n      placeHolder: \"Svn repository username\",\n      prompt: \"Please enter your username\",\n      value: prevUsername\n    });\n\n    if (username === undefined) {\n      return;\n    }\n\n    const password = await window.showInputBox({\n      placeHolder: \"Svn repository password\",\n      prompt: \"Please enter your password\",\n      value: prevPassword,\n      password: true\n    });\n\n    if (password === undefined) {\n      return;\n    }\n\n    const auth: IAuth = {\n      username,\n      password\n    };\n\n    return auth;\n  }\n}\n","import { Uri, window } from \"vscode\";\nimport { configuration } from \"../helpers/configuration\";\nimport { Repository } from \"../repository\";\nimport { Command } from \"./command\";\n\nexport class PromptRemove extends Command {\n  constructor() {\n    super(\"svn.promptRemove\", { repository: true });\n  }\n\n  public async execute(repository: Repository, ...uris: Uri[]) {\n    const files = uris.map(uri => uri.fsPath);\n    const relativeList = files\n      .map(file => repository.repository.removeAbsolutePath(file))\n      .sort();\n    const ignoreText = \"Add to ignored list\";\n    const resp = await window.showInformationMessage(\n      `The file(s) \"${relativeList.join(\n        \", \"\n      )}\" are removed from disk.\\nWould you like remove from SVN?`,\n      { modal: true },\n      \"Yes\",\n      ignoreText,\n      \"No\"\n    );\n    if (resp === \"Yes\") {\n      await repository.removeFiles(files, false);\n    } else if (resp === ignoreText) {\n      let ignoreList = configuration.get<string[]>(\n        \"delete.ignoredRulesForDeletedFiles\",\n        []\n      );\n      ignoreList.push(...relativeList);\n      ignoreList = [...new Set(ignoreList)]; // Remove duplicates\n      configuration.update(\"delete.ignoredRulesForDeletedFiles\", ignoreList);\n    }\n  }\n}\n","import { window } from \"vscode\";\nimport { configuration } from \"../helpers/configuration\";\nimport IncomingChangeNode from \"../treeView/nodes/incomingChangeNode\";\nimport { Command } from \"./command\";\n\nexport class PullIncommingChange extends Command {\n  constructor() {\n    super(\"svn.treeview.pullIncomingChange\");\n  }\n\n  // TODO: clean this up\n  public async execute(...changes: any[]) {\n    const showUpdateMessage = configuration.get<boolean>(\n      \"showUpdateMessage\",\n      true\n    );\n\n    if (changes[0] instanceof IncomingChangeNode) {\n      try {\n        const incomingChange = changes[0];\n\n        const result = await incomingChange.repository.pullIncomingChange(\n          incomingChange.uri.fsPath\n        );\n\n        if (showUpdateMessage) {\n          window.showInformationMessage(result);\n        }\n      } catch (error) {\n        console.error(error);\n        window.showErrorMessage(\"Unable to update\");\n      }\n\n      return;\n    }\n\n    const uris = changes.map(change => change.resourceUri);\n\n    await this.runByRepository(uris, async (repository, resources) => {\n      if (!repository) {\n        return;\n      }\n\n      const files = resources.map(resource => resource.fsPath);\n\n      files.forEach(async path => {\n        const result = await repository.pullIncomingChange(path);\n\n        if (showUpdateMessage) {\n          window.showInformationMessage(result);\n        }\n      });\n    });\n  }\n}\n","import { configuration } from \"../helpers/configuration\";\nimport { Repository } from \"../repository\";\nimport { Command } from \"./command\";\n\nexport class Refresh extends Command {\n  constructor() {\n    super(\"svn.refresh\", { repository: true });\n  }\n\n  public async execute(repository: Repository) {\n    const refreshRemoteChanges = configuration.get<boolean>(\n      \"refresh.remoteChanges\",\n      false\n    );\n\n    await repository.status();\n\n    if (refreshRemoteChanges) {\n      await repository.updateRemoteChangedFiles();\n    }\n  }\n}\n","import { Repository } from \"../repository\";\nimport { Command } from \"./command\";\n\nexport class RefreshRemoteChanges extends Command {\n  constructor() {\n    super(\"svn.refreshRemoteChanges\", { repository: true });\n  }\n\n  public async execute(repository: Repository) {\n    await repository.updateRemoteChangedFiles();\n  }\n}\n","import { SourceControlResourceState, window } from \"vscode\";\nimport { Command } from \"./command\";\n\nexport class Remove extends Command {\n  constructor() {\n    super(\"svn.remove\");\n  }\n\n  public async execute(...resourceStates: SourceControlResourceState[]) {\n    const selection = await this.getResourceStates(resourceStates);\n\n    if (selection.length === 0) {\n      return;\n    }\n\n    let keepLocal: boolean;\n    const answer = await window.showWarningMessage(\n      \"Would you like to keep a local copy of the files?.\",\n      { modal: true },\n      \"Yes\",\n      \"No\"\n    );\n\n    if (!answer) {\n      return;\n    }\n\n    if (answer === \"Yes\") {\n      keepLocal = true;\n    } else {\n      keepLocal = false;\n    }\n\n    const uris = selection.map(resource => resource.resourceUri);\n\n    await this.runByRepository(uris, async (repository, resources) => {\n      if (!repository) {\n        return;\n      }\n\n      const paths = resources.map(resource => resource.fsPath);\n\n      try {\n        await repository.removeFiles(paths, keepLocal);\n      } catch (error) {\n        console.log(error);\n        window.showErrorMessage(\"Unable to remove files\");\n      }\n    });\n  }\n}\n","import * as path from \"path\";\nimport { Uri, window } from \"vscode\";\nimport { Repository } from \"../repository\";\nimport { fixPathSeparator } from \"../util\";\nimport { Command } from \"./command\";\n\nexport class RenameExplorer extends Command {\n  constructor() {\n    super(\"svn.renameExplorer\", { repository: true });\n  }\n\n  public async execute(repository: Repository, mainUri?: Uri, allUris?: Uri[]) {\n    if (!mainUri) {\n      return;\n    }\n\n    const oldName = mainUri.fsPath;\n\n    return this.rename(repository, oldName);\n  }\n\n  private async rename(\n    repository: Repository,\n    oldFile: string,\n    newName?: string\n  ) {\n    oldFile = fixPathSeparator(oldFile);\n\n    if (!newName) {\n      const root = fixPathSeparator(repository.workspaceRoot);\n      const oldName = path.relative(root, oldFile);\n      newName = await window.showInputBox({\n        value: path.basename(oldFile),\n        prompt: `New name name for ${oldName}`\n      });\n    }\n    if (!newName) {\n      return;\n    }\n\n    const basepath = path.dirname(oldFile);\n    newName = path.join(basepath, newName);\n\n    await repository.rename(oldFile, newName);\n  }\n}\n","import { SourceControlResourceState, window } from \"vscode\";\nimport { getConflictPickOptions } from \"../conflictItems\";\nimport { Command } from \"./command\";\n\nexport class Resolve extends Command {\n  constructor() {\n    super(\"svn.resolve\");\n  }\n\n  public async execute(...resourceStates: SourceControlResourceState[]) {\n    const selection = await this.getResourceStates(resourceStates);\n\n    if (selection.length === 0) {\n      return;\n    }\n    const picks = getConflictPickOptions();\n\n    const choice = await window.showQuickPick(picks, {\n      placeHolder: \"Select conflict option\"\n    });\n\n    if (!choice) {\n      return;\n    }\n\n    const uris = selection.map(resource => resource.resourceUri);\n\n    await this.runByRepository(uris, async (repository, resources) => {\n      if (!repository) {\n        return;\n      }\n\n      const files = resources.map(resource => resource.fsPath);\n\n      await repository.resolve(files, choice.label);\n    });\n  }\n}\n","import { window } from \"vscode\";\nimport { getConflictPickOptions } from \"../conflictItems\";\nimport { Repository } from \"../repository\";\nimport { Command } from \"./command\";\n\nexport class ResolveAll extends Command {\n  constructor() {\n    super(\"svn.resolveAll\", { repository: true });\n  }\n\n  public async execute(repository: Repository) {\n    const conflicts = repository.conflicts.resourceStates;\n\n    if (!conflicts.length) {\n      window.showInformationMessage(\"No Conflicts\");\n    }\n\n    for (const conflict of conflicts) {\n      const placeHolder = `Select conflict option for ${\n        conflict.resourceUri.path\n      }`;\n      const picks = getConflictPickOptions();\n\n      const choice = await window.showQuickPick(picks, { placeHolder });\n\n      if (!choice) {\n        return;\n      }\n\n      try {\n        const response = await repository.resolve(\n          [conflict.resourceUri.path],\n          choice.label\n        );\n        window.showInformationMessage(response);\n      } catch (error) {\n        window.showErrorMessage(error.stderr);\n      }\n    }\n  }\n}\n","import * as path from \"path\";\nimport { Uri, window } from \"vscode\";\nimport { configuration } from \"../helpers/configuration\";\nimport { Command } from \"./command\";\n\nexport class Resolved extends Command {\n  constructor() {\n    super(\"svn.resolved\");\n  }\n\n  public async execute(uri: Uri) {\n    if (!uri) {\n      return;\n    }\n\n    const autoResolve = configuration.get<boolean>(\"conflict.autoResolve\");\n\n    if (!autoResolve) {\n      const basename = path.basename(uri.fsPath);\n      const pick = await window.showWarningMessage(\n        `Mark the conflict as resolved for \"${basename}\"?`,\n        { modal: true },\n        \"Yes\",\n        \"No\"\n      );\n\n      if (pick !== \"Yes\") {\n        return;\n      }\n    }\n\n    const uris = [uri];\n\n    await this.runByRepository(uris, async (repository, resources) => {\n      if (!repository) {\n        return;\n      }\n\n      const files = resources.map(resource => resource.fsPath);\n\n      await repository.resolve(files, \"working\");\n    });\n  }\n}\n","import { SourceControlResourceState, window } from \"vscode\";\nimport { Command } from \"./command\";\n\nexport class Revert extends Command {\n  constructor() {\n    super(\"svn.revert\");\n  }\n\n  public async execute(...resourceStates: SourceControlResourceState[]) {\n    const selection = await this.getResourceStates(resourceStates);\n\n    if (selection.length === 0) {\n      return;\n    }\n\n    const yes = \"Yes I'm sure\";\n    const answer = await window.showWarningMessage(\n      \"Are you sure? This will wipe all local changes.\",\n      { modal: true },\n      yes\n    );\n\n    if (answer !== yes) {\n      return;\n    }\n\n    const uris = selection.map(resource => resource.resourceUri);\n\n    await this.runByRepository(uris, async (repository, resources) => {\n      if (!repository) {\n        return;\n      }\n\n      const paths = resources.map(resource => resource.fsPath);\n\n      try {\n        await repository.revert(paths);\n      } catch (error) {\n        console.log(error);\n        window.showErrorMessage(\"Unable to revert\");\n      }\n    });\n  }\n}\n","import { LineChange, Uri, window } from \"vscode\";\nimport { Command } from \"./command\";\n\nexport class RevertChange extends Command {\n  constructor() {\n    super(\"svn.revertChange\");\n  }\n\n  public async execute(uri: Uri, changes: LineChange[], index: number) {\n    const textEditor = window.visibleTextEditors.filter(\n      e => e.document.uri.toString() === uri.toString()\n    )[0];\n\n    if (!textEditor) {\n      return;\n    }\n\n    await this._revertChanges(textEditor, [\n      ...changes.slice(0, index),\n      ...changes.slice(index + 1)\n    ]);\n  }\n}\n","import { LineChange, Range, window } from \"vscode\";\nimport { Command } from \"./command\";\n\nexport class RevertSelectedRanges extends Command {\n  constructor() {\n    super(\"svn.revertSelectedRanges\", { diff: true });\n  }\n\n  public async execute(changes: LineChange[]) {\n    const textEditor = window.activeTextEditor;\n\n    if (!textEditor) {\n      return;\n    }\n\n    const modifiedDocument = textEditor.document;\n    const selections = textEditor.selections;\n    const selectedChanges = changes.filter(change => {\n      const modifiedRange =\n        change.modifiedEndLineNumber === 0\n          ? new Range(\n              modifiedDocument.lineAt(\n                change.modifiedStartLineNumber - 1\n              ).range.end,\n              modifiedDocument.lineAt(\n                change.modifiedStartLineNumber\n              ).range.start\n            )\n          : new Range(\n              modifiedDocument.lineAt(\n                change.modifiedStartLineNumber - 1\n              ).range.start,\n              modifiedDocument.lineAt(\n                change.modifiedEndLineNumber - 1\n              ).range.end\n            );\n\n      return selections.every(\n        selection => !selection.intersection(modifiedRange)\n      );\n    });\n\n    if (selectedChanges.length === changes.length) {\n      return;\n    }\n\n    await this._revertChanges(textEditor, selectedChanges);\n  }\n}\n","import { window } from \"vscode\";\nimport { selectBranch } from \"../helpers/branch\";\nimport { Repository } from \"../repository\";\nimport { Command } from \"./command\";\n\nexport class SwitchBranch extends Command {\n  constructor() {\n    super(\"svn.switchBranch\", { repository: true });\n  }\n\n  public async execute(repository: Repository) {\n    const branch = await selectBranch(repository, true);\n\n    if (!branch) {\n      return;\n    }\n\n    try {\n      if (branch.isNew) {\n        const commitMessage = await window.showInputBox({\n          value: `Created new branch ${branch.name}`,\n          prompt: `Commit message for create branch ${branch.name}`\n        });\n\n        // If press ESC on commit message\n        if (commitMessage === undefined) {\n          return;\n        }\n\n        await repository.newBranch(branch.path, commitMessage);\n      } else {\n        try {\n          await repository.switchBranch(branch.path);\n        } catch (error) {\n          if (\n            typeof error === \"object\" &&\n            error.hasOwnProperty(\"stderrFormated\") &&\n            error.stderrFormated.includes(\"ignore-ancestry\")\n          ) {\n            const answer = await window.showErrorMessage(\n              \"Seems like these branches don't have a common ancestor. \" +\n                \" Do you want to retry with '--ignore-ancestry' option?\",\n              \"Yes\",\n              \"No\"\n            );\n            if (answer === \"Yes\") {\n              await repository.switchBranch(branch.path, true);\n            }\n          } else {\n            throw error;\n          }\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      if (branch.isNew) {\n        window.showErrorMessage(\"Unable to create new branch\");\n      } else {\n        window.showErrorMessage(\"Unable to switch branch\");\n      }\n    }\n  }\n}\n","import { window } from \"vscode\";\nimport { configuration } from \"../helpers/configuration\";\nimport { Repository } from \"../repository\";\nimport { Command } from \"./command\";\n\nexport class Update extends Command {\n  constructor() {\n    super(\"svn.update\", { repository: true });\n  }\n\n  public async execute(repository: Repository) {\n    try {\n      const ignoreExternals = configuration.get<boolean>(\n        \"update.ignoreExternals\",\n        false\n      );\n      const showUpdateMessage = configuration.get<boolean>(\n        \"showUpdateMessage\",\n        true\n      );\n\n      const result = await repository.updateRevision(ignoreExternals);\n\n      if (showUpdateMessage) {\n        window.showInformationMessage(result);\n      }\n    } catch (error) {\n      console.error(error);\n      window.showErrorMessage(\"Unable to update\");\n    }\n  }\n}\n","import { commands, window } from \"vscode\";\nimport { configuration } from \"../helpers/configuration\";\nimport { Model } from \"../model\";\nimport { fixPathSeparator } from \"../util\";\nimport { Command } from \"./command\";\n\nexport class Upgrade extends Command {\n  constructor() {\n    super(\"svn.upgrade\");\n  }\n\n  public async execute(folderPath: string) {\n    if (!folderPath) {\n      return;\n    }\n\n    if (configuration.get(\"ignoreWorkingCopyIsTooOld\", false)) {\n      return;\n    }\n\n    folderPath = fixPathSeparator(folderPath);\n\n    const yes = \"Yes\";\n    const no = \"No\";\n    const neverShowAgain = \"Don't Show Again\";\n    const choice = await window.showWarningMessage(\n      \"You want upgrade the working copy (svn upgrade)?\",\n      yes,\n      no,\n      neverShowAgain\n    );\n    const model = (await commands.executeCommand(\"svn.getModel\", \"\")) as Model;\n\n    if (choice === yes) {\n      const upgraded = await model.upgradeWorkingCopy(folderPath);\n\n      if (upgraded) {\n        window.showInformationMessage(`Working copy \"${folderPath}\" upgraded`);\n        model.tryOpenRepository(folderPath);\n      } else {\n        window.showErrorMessage(\n          `Error on upgrading working copy \"${folderPath}\". See log for more detail`\n        );\n      }\n    } else if (choice === neverShowAgain) {\n      return configuration.update(\"ignoreWorkingCopyIsTooOld\", true);\n    }\n\n    return;\n  }\n}\n","import { Disposable, workspace } from \"vscode\";\nimport { configuration } from \"../helpers/configuration\";\nimport { Model } from \"../model\";\nimport { Repository } from \"../repository\";\nimport SvnDecorationProvider from \"./svnDecorationProvider\";\nimport SvnIgnoreDecorationProvider from \"./svnIgnoreDecorationProvider\";\n\nexport default class SvnDecorations {\n  private enabled: boolean = false;\n  private configListener: Disposable;\n  private modelListener: Disposable[] = [];\n  private providers = new Map<Repository, Disposable>();\n\n  constructor(private model: Model) {\n    this.configListener = workspace.onDidChangeConfiguration(() =>\n      this.update()\n    );\n    this.update();\n  }\n\n  private update(): void {\n    const enabled = configuration.get<boolean>(\"decorations.enabled\");\n\n    if (this.enabled === enabled) {\n      return;\n    }\n\n    if (enabled) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n    this.enabled = enabled;\n  }\n\n  private enable(): void {\n    this.modelListener = [];\n    this.model.onDidOpenRepository(\n      this.onDidOpenRepository,\n      this,\n      this.modelListener\n    );\n    this.model.onDidCloseRepository(\n      this.onDidCloseRepository,\n      this,\n      this.modelListener\n    );\n    this.model.repositories.forEach(this.onDidOpenRepository, this);\n  }\n\n  private disable(): void {\n    this.modelListener.forEach(d => d.dispose());\n    this.providers.forEach(value => value.dispose());\n    this.providers.clear();\n  }\n\n  private onDidOpenRepository(repository: Repository): void {\n    const provider = new SvnDecorationProvider(repository);\n    const ignoreProvider = new SvnIgnoreDecorationProvider(repository);\n    this.providers.set(repository, Disposable.from(provider, ignoreProvider));\n  }\n\n  private onDidCloseRepository(repository: Repository): void {\n    const provider = this.providers.get(repository);\n    if (provider) {\n      provider.dispose();\n      this.providers.delete(repository);\n    }\n  }\n\n  public dispose(): void {\n    this.configListener.dispose();\n    this.disable();\n  }\n}\n","import {\n  DecorationData,\n  DecorationProvider,\n  Disposable,\n  Event,\n  EventEmitter,\n  Uri,\n  window\n} from \"vscode\";\nimport { ISvnResourceGroup } from \"../common/types\";\nimport { Repository } from \"../repository\";\n\nexport default class SvnDecorationProvider implements DecorationProvider {\n  private readonly _onDidChangeDecorations = new EventEmitter<Uri[]>();\n  public readonly onDidChangeDecorations: Event<Uri[]> = this\n    ._onDidChangeDecorations.event;\n\n  private disposables: Disposable[] = [];\n  private decorations = new Map<string, DecorationData>();\n\n  constructor(private repository: Repository) {\n    this.disposables.push(\n      window.registerDecorationProvider(this),\n      repository.onDidRunOperation(this.onDidRunOperation, this)\n    );\n  }\n\n  private onDidRunOperation(): void {\n    const newDecorations = new Map<string, DecorationData>();\n    this.collectDecorationData(this.repository.changes, newDecorations);\n    this.collectDecorationData(this.repository.unversioned, newDecorations);\n    this.collectDecorationData(this.repository.conflicts, newDecorations);\n\n    this.repository.changelists.forEach((group, changelist) => {\n      this.collectDecorationData(group, newDecorations);\n    });\n\n    const uris: Uri[] = [];\n    newDecorations.forEach((value, uriString) => {\n      if (this.decorations.has(uriString)) {\n        this.decorations.delete(uriString);\n      } else {\n        uris.push(Uri.parse(uriString));\n      }\n    });\n    this.decorations.forEach((value, uriString) => {\n      uris.push(Uri.parse(uriString));\n    });\n    this.decorations = newDecorations;\n    this._onDidChangeDecorations.fire(uris);\n  }\n\n  private collectDecorationData(\n    group: ISvnResourceGroup,\n    bucket: Map<string, DecorationData>\n  ): void {\n    group.resourceStates.forEach(r => {\n      if (r.resourceDecoration) {\n        bucket.set(r.resourceUri.toString(), r.resourceDecoration);\n      }\n    });\n  }\n\n  public provideDecoration(uri: Uri): DecorationData | undefined {\n    return this.decorations.get(uri.toString());\n  }\n\n  public dispose(): void {\n    this.disposables.forEach(d => d.dispose());\n  }\n}\n","import * as path from \"path\";\nimport {\n  DecorationData,\n  DecorationProvider,\n  Disposable,\n  Event,\n  EventEmitter,\n  ThemeColor,\n  Uri,\n  window\n} from \"vscode\";\nimport { debounce } from \"../decorators\";\nimport { Repository } from \"../repository\";\nimport { isDescendant } from \"../util\";\n\nexport default class SvnIgnoreDecorationProvider implements DecorationProvider {\n  private readonly _onDidChangeDecorations = new EventEmitter<Uri[]>();\n  public readonly onDidChangeDecorations: Event<Uri[]> = this\n    ._onDidChangeDecorations.event;\n\n  private checkIgnoreQueue = new Map<\n    string,\n    { resolve: (status: boolean) => void; reject: (err: any) => void }\n  >();\n  private disposables: Disposable[] = [];\n\n  constructor(private repository: Repository) {\n    this.disposables.push(\n      window.registerDecorationProvider(this),\n      repository.onDidChangeStatus(_ => this._onDidChangeDecorations.fire())\n    );\n  }\n\n  public dispose(): void {\n    this.disposables.forEach(d => d.dispose());\n    this.checkIgnoreQueue.clear();\n  }\n\n  public provideDecoration(uri: Uri): Promise<DecorationData | undefined> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.checkIgnoreQueue.set(uri.fsPath, { resolve, reject });\n      this.checkIgnoreSoon();\n    }).then(ignored => {\n      if (ignored) {\n        return {\n          priority: 3,\n          color: new ThemeColor(\"gitDecoration.ignoredResourceForeground\")\n        } as DecorationData;\n      }\n    });\n  }\n\n  @debounce(500)\n  private checkIgnoreSoon(): void {\n    const queue = new Map(this.checkIgnoreQueue.entries());\n    this.checkIgnoreQueue.clear();\n\n    const ignored = this.repository.statusIgnored;\n    const external = this.repository.statusExternal;\n\n    const files = ignored.map(stat =>\n      path.join(this.repository.workspaceRoot, stat.path)\n    );\n\n    files.push(\n      ...external.map(stat =>\n        path.join(this.repository.workspaceRoot, stat.path)\n      )\n    );\n\n    for (const [key, value] of queue.entries()) {\n      value.resolve(files.some(file => isDescendant(file, key)));\n    }\n  }\n}\n","import * as path from \"path\";\nimport {\n  commands,\n  Disposable,\n  Event,\n  EventEmitter,\n  TextEditor,\n  TreeDataProvider,\n  TreeItem,\n  TreeItemCollapsibleState,\n  Uri,\n  window\n} from \"vscode\";\nimport { ISvnLogEntry, Status } from \"../common/types\";\nimport { Model } from \"../model\";\nimport { tempdir } from \"../tempFiles\";\nimport { dispose, unwrap } from \"../util\";\nimport {\n  copyCommitToClipboard,\n  fetchMore,\n  getCommitIcon,\n  getCommitLabel,\n  getCommitToolTip,\n  getIconObject,\n  getLimit,\n  ICachedLog,\n  ILogTreeItem,\n  insertBaseMarker,\n  LogTreeItemKind,\n  openDiff,\n  openFileRemote,\n  transform\n} from \"./common\";\n\nexport class ItemLogProvider\n  implements TreeDataProvider<ILogTreeItem>, Disposable {\n  private _onDidChangeTreeData: EventEmitter<\n    ILogTreeItem | undefined\n  > = new EventEmitter<ILogTreeItem | undefined>();\n  public readonly onDidChangeTreeData: Event<ILogTreeItem | undefined> = this\n    ._onDidChangeTreeData.event;\n\n  private currentItem?: ICachedLog;\n  private _dispose: Disposable[] = [];\n\n  constructor(private model: Model) {\n    window.onDidChangeActiveTextEditor(this.editorChanged, this);\n    this._dispose.push(\n      commands.registerCommand(\n        \"svn.itemlog.copymsg\",\n        async (item: ILogTreeItem) => copyCommitToClipboard(\"msg\", item)\n      )\n    );\n    this._dispose.push(\n      commands.registerCommand(\n        \"svn.itemlog.openFileRemote\",\n        this.openFileRemoteCmd,\n        this\n      )\n    );\n    this._dispose.push(\n      commands.registerCommand(\"svn.itemlog.openDiff\", this.openDiffCmd, this)\n    );\n    this._dispose.push(\n      commands.registerCommand(\n        \"svn.itemlog.openDiffBase\",\n        this.openDiffBaseCmd,\n        this\n      )\n    );\n    this._dispose.push(\n      commands.registerCommand(\"svn.itemlog.refresh\", this.refresh, this)\n    );\n    this.refresh();\n  }\n\n  public dispose() {\n    dispose(this._dispose);\n  }\n\n  public async openFileRemoteCmd(element: ILogTreeItem) {\n    const commit = element.data as ISvnLogEntry;\n    const item = unwrap(this.currentItem);\n    return openFileRemote(item.repo, item.svnTarget, commit.revision);\n  }\n\n  public async openDiffBaseCmd(element: ILogTreeItem) {\n    const commit = element.data as ISvnLogEntry;\n    const item = unwrap(this.currentItem);\n    return openDiff(item.repo, item.svnTarget, commit.revision, \"BASE\");\n  }\n\n  public async openDiffCmd(element: ILogTreeItem) {\n    const commit = element.data as ISvnLogEntry;\n    const item = unwrap(this.currentItem);\n    const pos = item.entries.findIndex(e => e === commit);\n    if (pos === item.entries.length - 1) {\n      window.showWarningMessage(\"Cannot diff last commit\");\n      return;\n    }\n    const prevRev = item.entries[pos + 1].revision;\n    return openDiff(item.repo, item.svnTarget, prevRev, commit.revision);\n  }\n\n  public async editorChanged(te?: TextEditor) {\n    return this.refresh(undefined, te);\n  }\n\n  public async refresh(\n    element?: ILogTreeItem,\n    te?: TextEditor,\n    loadMore?: boolean\n  ) {\n    // TODO maybe make autorefresh optionable?\n    if (loadMore) {\n      await fetchMore(unwrap(this.currentItem));\n      this._onDidChangeTreeData.fire(element);\n      return;\n    }\n\n    if (te === undefined) {\n      te = window.activeTextEditor;\n    }\n    if (te) {\n      const uri = te.document.uri;\n      if (uri.scheme === \"file\") {\n        if (uri.path.startsWith(tempdir)) {\n          return; // do not refresh if diff was called\n        }\n        const repo = this.model.getRepository(uri);\n        if (repo !== undefined) {\n          try {\n            const info = await repo.getInfo(uri.path);\n            this.currentItem = {\n              isComplete: false,\n              entries: [],\n              repo,\n              svnTarget: Uri.parse(info.url),\n              persisted: {\n                commitFrom: \"HEAD\",\n                baseRevision: parseInt(info.revision, 10)\n              },\n              order: 0\n            };\n          } catch (e) {\n            // doesn't belong to this repo\n          }\n        }\n      }\n      this._onDidChangeTreeData.fire(element);\n    }\n  }\n\n  public async getTreeItem(element: ILogTreeItem): Promise<TreeItem> {\n    let ti: TreeItem;\n    if (element.kind === LogTreeItemKind.Commit) {\n      const cached = unwrap(this.currentItem);\n      const commit = element.data as ISvnLogEntry;\n      ti = new TreeItem(getCommitLabel(commit), TreeItemCollapsibleState.None);\n      ti.iconPath = getCommitIcon(commit.author);\n      ti.tooltip = getCommitToolTip(commit);\n      ti.contextValue = \"diffable\";\n      ti.command = {\n        command: \"svn.itemlog.openDiff\",\n        title: \"Open diff\",\n        arguments: [element]\n      };\n    } else if (element.kind === LogTreeItemKind.TItem) {\n      ti = element.data as TreeItem;\n    } else {\n      throw new Error(\"Shouldn't happen\");\n    }\n    return ti;\n  }\n\n  public async getChildren(\n    element: ILogTreeItem | undefined\n  ): Promise<ILogTreeItem[]> {\n    if (this.currentItem === undefined) {\n      return [];\n    }\n    if (element === undefined) {\n      const fname = path.basename(this.currentItem.svnTarget.fsPath);\n      const ti = new TreeItem(fname, TreeItemCollapsibleState.Expanded);\n      ti.tooltip = path.dirname(this.currentItem.svnTarget.fsPath);\n      ti.iconPath = getIconObject(\"icon-history\");\n      const item = {\n        kind: LogTreeItemKind.TItem,\n        data: ti\n      };\n      return [item];\n    } else {\n      const entries = this.currentItem.entries;\n      if (entries.length === 0) {\n        await fetchMore(this.currentItem);\n      }\n      const result = transform(entries, LogTreeItemKind.Commit);\n      insertBaseMarker(this.currentItem, entries, result);\n      if (!this.currentItem.isComplete) {\n        const ti = new TreeItem(`Load another ${getLimit()} revisions`);\n        const ltItem: ILogTreeItem = {\n          kind: LogTreeItemKind.TItem,\n          data: ti\n        };\n        ti.tooltip = \"Paging size may be adjusted using log.length setting\";\n        ti.command = {\n          command: \"svn.itemlog.refresh\",\n          arguments: [element, undefined, true],\n          title: \"refresh element\"\n        };\n        ti.iconPath = getIconObject(\"icon-unfold\");\n        result.push(ltItem);\n      }\n      return result;\n    }\n  }\n}\n","module.exports = require(\"util\");","import * as fs from \"fs\";\nimport * as path from \"path\";\nimport {\n  commands,\n  Disposable,\n  Event,\n  EventEmitter,\n  TreeDataProvider,\n  TreeItem,\n  TreeItemCollapsibleState,\n  Uri,\n  window,\n  workspace\n} from \"vscode\";\nimport {\n  IModelChangeEvent,\n  ISvnLogEntry,\n  ISvnLogEntryPath\n} from \"../common/types\";\nimport { Model } from \"../model\";\nimport { IRemoteRepository } from \"../remoteRepository\";\nimport { Repository } from \"../repository\";\nimport { dispose, unwrap } from \"../util\";\nimport {\n  checkIfFile,\n  copyCommitToClipboard,\n  fetchMore,\n  getCommitIcon,\n  getCommitLabel,\n  getCommitToolTip,\n  getIconObject,\n  getLimit,\n  ICachedLog,\n  ILogTreeItem,\n  insertBaseMarker,\n  LogTreeItemKind,\n  openDiff,\n  openFileRemote,\n  SvnPath,\n  transform\n} from \"./common\";\n\nfunction getActionIcon(action: string) {\n  let name: string | undefined;\n  switch (action) {\n    case \"A\":\n      name = \"status-added\";\n      break;\n    case \"D\":\n      name = \"status-deleted\";\n      break;\n    case \"M\":\n      name = \"status-modified\";\n      break;\n    case \"R\":\n      name = \"status-renamed\";\n      break;\n  }\n  if (name === undefined) {\n    return undefined;\n  }\n  return getIconObject(name);\n}\n\nexport class RepoLogProvider\n  implements TreeDataProvider<ILogTreeItem>, Disposable {\n  private _onDidChangeTreeData: EventEmitter<\n    ILogTreeItem | undefined\n  > = new EventEmitter<ILogTreeItem | undefined>();\n  public readonly onDidChangeTreeData: Event<ILogTreeItem | undefined> = this\n    ._onDidChangeTreeData.event;\n  // TODO on-disk cache?\n  private readonly logCache: Map<string, ICachedLog> = new Map();\n  private _dispose: Disposable[] = [];\n\n  private getCached(maybeItem?: ILogTreeItem): ICachedLog {\n    const item = unwrap(maybeItem);\n    if (item.data instanceof SvnPath) {\n      return unwrap(this.logCache.get(item.data.toString()));\n    }\n    return this.getCached(item.parent);\n  }\n\n  constructor(private model: Model) {\n    this.refresh();\n    this._dispose.push(\n      commands.registerCommand(\n        \"svn.repolog.copymsg\",\n        async (item: ILogTreeItem) => copyCommitToClipboard(\"msg\", item)\n      )\n    );\n    this._dispose.push(\n      commands.registerCommand(\n        \"svn.repolog.addrepolike\",\n        this.addRepolikeGui,\n        this\n      )\n    );\n    this._dispose.push(\n      commands.registerCommand(\"svn.repolog.remove\", this.removeRepo, this)\n    );\n    this._dispose.push(\n      commands.registerCommand(\n        \"svn.repolog.openFileRemote\",\n        this.openFileRemoteCmd,\n        this\n      )\n    );\n    this._dispose.push(\n      commands.registerCommand(\"svn.repolog.openDiff\", this.openDiffCmd, this)\n    );\n    this._dispose.push(\n      commands.registerCommand(\n        \"svn.repolog.openFileLocal\",\n        this.openFileLocal,\n        this\n      )\n    );\n    this._dispose.push(\n      commands.registerCommand(\"svn.repolog.refresh\", this.refresh, this)\n    );\n    this.model.onDidChangeRepository(async (e: IModelChangeEvent) => {\n      return this.refresh();\n      // TODO refresh only required repo, need to pass element === getChildren()\n    });\n  }\n\n  public dispose() {\n    dispose(this._dispose);\n  }\n\n  public removeRepo(element: ILogTreeItem) {\n    this.logCache.delete((element.data as SvnPath).toString());\n    this.refresh();\n  }\n\n  private async addRepolike(repoLike: string, rev: string) {\n    // TODO save user's custom repositories\n    const item: ICachedLog = {\n      entries: [],\n      isComplete: false,\n      svnTarget: {} as Uri, // later\n      repo: {} as IRemoteRepository, // later\n      persisted: {\n        commitFrom: rev,\n        userAdded: true\n      },\n      order: this.logCache.size\n    };\n    if (this.logCache.has(repoLike)) {\n      window.showWarningMessage(\"This path is already added\");\n      return;\n    }\n    const repo = this.model.getRepository(repoLike);\n    if (repo === undefined) {\n      try {\n        let uri: Uri;\n        if (repoLike.startsWith(\"^\")) {\n          const wsrepo = this.model.getRepository(\n            unwrap(workspace.workspaceFolders)[0].uri\n          );\n          if (!wsrepo) {\n            throw new Error(\"No repository in workspace root\");\n          }\n          const info = await wsrepo.getInfo(repoLike);\n          uri = Uri.parse(info.url);\n        } else {\n          uri = Uri.parse(repoLike);\n        }\n        if (rev !== \"HEAD\" && isNaN(parseInt(rev, 10))) {\n          throw new Error(\"erroneous revision\");\n        }\n        const remRepo = await this.model.getRemoteRepository(uri);\n        item.repo = remRepo;\n        item.svnTarget = uri;\n      } catch (e) {\n        window.showWarningMessage(\n          \"Failed to add repo: \" + (e instanceof Error ? e.message : \"\")\n        );\n        return;\n      }\n    } else {\n      try {\n        const svninfo = await repo.getInfo(repoLike, rev);\n        item.repo = repo;\n        item.svnTarget = Uri.parse(svninfo.url);\n        item.persisted.baseRevision = parseInt(svninfo.revision, 10);\n      } catch (e) {\n        window.showErrorMessage(\"Failed to resolve svn path\");\n        return;\n      }\n    }\n\n    const repoName = item.svnTarget.toString(true);\n    if (this.logCache.has(repoName)) {\n      window.showWarningMessage(\"Repository with this name already exists\");\n      return;\n    }\n    this.logCache.set(repoName, item);\n    this._onDidChangeTreeData.fire();\n  }\n\n  public addRepolikeGui() {\n    const box = window.createInputBox();\n    box.prompt = \"Enter SVN URL or local path\";\n    box.onDidAccept(() => {\n      let repoLike = box.value;\n      if (\n        !path.isAbsolute(repoLike) &&\n        workspace.workspaceFolders &&\n        !repoLike.startsWith(\"^\") &&\n        !/^[a-z]+?:\\/\\//.test(repoLike)\n      ) {\n        for (const wsf of workspace.workspaceFolders) {\n          const joined = path.join(wsf.uri.fsPath, repoLike);\n          if (fs.existsSync(joined)) {\n            repoLike = joined;\n            break;\n          }\n        }\n      }\n      box.dispose();\n      const box2 = window.createInputBox();\n      box2.prompt = \"Enter starting revision (optional)\";\n      box2.onDidAccept(async () => {\n        const rev = box2.value;\n        box2.dispose();\n        return this.addRepolike(repoLike, rev || \"HEAD\");\n      }, undefined);\n      box2.show();\n    });\n    box.show();\n  }\n\n  public openFileRemoteCmd(element: ILogTreeItem) {\n    const commit = element.data as ISvnLogEntryPath;\n    const item = this.getCached(element);\n    const ri = item.repo.getPathNormalizer().parse(commit._);\n    if (checkIfFile(ri, false) === false) {\n      return;\n    }\n    const parent = (element.parent as ILogTreeItem).data as ISvnLogEntry;\n    return openFileRemote(item.repo, ri.remoteFullPath, parent.revision);\n  }\n\n  public openFileLocal(element: ILogTreeItem) {\n    const commit = element.data as ISvnLogEntryPath;\n    const item = this.getCached(element);\n    const ri = item.repo.getPathNormalizer().parse(commit._);\n    if (!checkIfFile(ri, true)) {\n      return;\n    }\n    commands.executeCommand(\"vscode.open\", unwrap(ri.localFullPath));\n  }\n\n  public async openDiffCmd(element: ILogTreeItem) {\n    const commit = element.data as ISvnLogEntryPath;\n    const item = this.getCached(element);\n    const ri = item.repo.getPathNormalizer().parse(commit._);\n    if (checkIfFile(ri, false) === false) {\n      return;\n    }\n    const parent = (element.parent as ILogTreeItem).data as ISvnLogEntry;\n    let prevRev: ISvnLogEntry;\n    {\n      // find prevRev scope\n      const pos = item.entries.findIndex(e => e === parent);\n      let posPrev: number | undefined;\n      for (\n        let i = pos + 1;\n        posPrev === undefined && i < item.entries.length;\n        i++\n      ) {\n        for (const p of item.entries[i].paths) {\n          if (p._ === commit._) {\n            posPrev = i;\n            break;\n          }\n        }\n      }\n      if (posPrev !== undefined) {\n        prevRev = item.entries[posPrev];\n      } else {\n        // if not found in cache\n        const nm = item.repo.getPathNormalizer();\n        const revs = await item.repo.log(\n          parent.revision,\n          \"1\",\n          2,\n          nm.parse(commit._).remoteFullPath\n        );\n        if (revs.length === 2) {\n          prevRev = revs[1];\n        } else {\n          window.showWarningMessage(\"Cannot find previous commit\");\n          return;\n        }\n      }\n    }\n    return openDiff(\n      item.repo,\n      ri.remoteFullPath,\n      prevRev.revision,\n      parent.revision\n    );\n  }\n\n  public async refresh(element?: ILogTreeItem, fetchMoreClick?: boolean) {\n    if (element === undefined) {\n      for (const [k, v] of this.logCache) {\n        // Remove auto-added repositories\n        if (!v.persisted.userAdded) {\n          this.logCache.delete(k);\n        }\n      }\n      for (const repo of this.model.repositories) {\n        const remoteRoot = repo.branchRoot;\n        const repoUrl = remoteRoot.toString(true);\n        let persisted: ICachedLog[\"persisted\"] = {\n          commitFrom: \"HEAD\",\n          baseRevision: parseInt(repo.repository.info.revision, 10)\n        };\n        const prev = this.logCache.get(repoUrl);\n        if (prev) {\n          persisted = prev.persisted;\n        }\n        this.logCache.set(repoUrl, {\n          entries: [],\n          isComplete: false,\n          repo,\n          svnTarget: remoteRoot,\n          persisted,\n          order: this.logCache.size\n        });\n      }\n    } else if (element.kind === LogTreeItemKind.Repo) {\n      const cached = this.getCached(element);\n      if (fetchMoreClick) {\n        await fetchMore(cached);\n      } else {\n        cached.entries = [];\n        cached.isComplete = false;\n      }\n    }\n    this._onDidChangeTreeData.fire(element);\n  }\n\n  public async getTreeItem(element: ILogTreeItem): Promise<TreeItem> {\n    let ti: TreeItem;\n    if (element.kind === LogTreeItemKind.Repo) {\n      const svnTarget = element.data as SvnPath;\n      const cached = this.getCached(element);\n      ti = new TreeItem(\n        svnTarget.toString(),\n        TreeItemCollapsibleState.Collapsed\n      );\n      if (cached.persisted.userAdded) {\n        ti.label = \"∘ \" + ti.label;\n        ti.contextValue = \"userrepo\";\n      } else {\n        ti.contextValue = \"repo\";\n      }\n      if (cached.repo instanceof Repository) {\n        ti.iconPath = getIconObject(\"folder\");\n      } else {\n        ti.iconPath = getIconObject(\"icon-repo\");\n      }\n      const from = cached.persisted.commitFrom || \"HEAD\";\n      ti.tooltip = `${svnTarget} since ${from}`;\n    } else if (element.kind === LogTreeItemKind.Commit) {\n      const commit = element.data as ISvnLogEntry;\n      ti = new TreeItem(\n        getCommitLabel(commit),\n        TreeItemCollapsibleState.Collapsed\n      );\n      ti.tooltip = getCommitToolTip(commit);\n      ti.iconPath = getCommitIcon(commit.author);\n      ti.contextValue = \"commit\";\n    } else if (element.kind === LogTreeItemKind.CommitDetail) {\n      // TODO optional tree-view instead of flat\n      const pathElem = element.data as ISvnLogEntryPath;\n      const basename = path.basename(pathElem._);\n      ti = new TreeItem(basename, TreeItemCollapsibleState.None);\n      const cached = this.getCached(element);\n      const nm = cached.repo.getPathNormalizer();\n      ti.tooltip = nm.parse(pathElem._).relativeFromBranch;\n      ti.iconPath = getActionIcon(pathElem.action);\n      ti.contextValue = \"diffable\";\n      ti.command = {\n        command: \"svn.repolog.openDiff\",\n        title: \"Open diff\",\n        arguments: [element]\n      };\n    } else if (element.kind === LogTreeItemKind.TItem) {\n      ti = element.data as TreeItem;\n    } else {\n      throw new Error(\"Unknown tree elem\");\n    }\n\n    return ti;\n  }\n\n  public async getChildren(\n    element: ILogTreeItem | undefined\n  ): Promise<ILogTreeItem[]> {\n    if (element === undefined) {\n      return transform(\n        Array.from(this.logCache.entries())\n          .sort(\n            ([lk, lv], [rk, rv]): number => {\n              if (lv.persisted.userAdded !== rv.persisted.userAdded) {\n                return lv.persisted.userAdded ? 1 : -1;\n              }\n              return lv.order - rv.order;\n            }\n          )\n          .map(([k, v]) => new SvnPath(k)),\n        LogTreeItemKind.Repo\n      );\n    } else if (element.kind === LogTreeItemKind.Repo) {\n      const limit = getLimit();\n      const cached = this.getCached(element);\n      const logentries = cached.entries;\n      if (logentries.length === 0) {\n        await fetchMore(cached);\n      }\n      const result = transform(logentries, LogTreeItemKind.Commit, element);\n      insertBaseMarker(cached, logentries, result);\n      if (!cached.isComplete) {\n        const ti = new TreeItem(`Load another ${limit} revisions`);\n        ti.tooltip = \"Paging size may be adjusted using log.length setting\";\n        ti.command = {\n          command: \"svn.repolog.refresh\",\n          arguments: [element, true],\n          title: \"refresh element\"\n        };\n        ti.iconPath = getIconObject(\"icon-unfold\");\n        result.push({ kind: LogTreeItemKind.TItem, data: ti });\n      }\n      return result;\n    } else if (element.kind === LogTreeItemKind.Commit) {\n      const commit = element.data as ISvnLogEntry;\n      return transform(commit.paths, LogTreeItemKind.CommitDetail, element);\n    }\n    return [];\n  }\n}\n","import { IOperations, Operation } from \"./common/types\";\nimport { isReadOnly } from \"./util\";\n\nexport default class OperationsImpl implements IOperations {\n  private operations = new Map<Operation, number>();\n\n  public start(operation: Operation): void {\n    this.operations.set(operation, (this.operations.get(operation) || 0) + 1);\n  }\n\n  public end(operation: Operation): void {\n    const count = (this.operations.get(operation) || 0) - 1;\n\n    if (count <= 0) {\n      this.operations.delete(operation);\n    } else {\n      this.operations.set(operation, count);\n    }\n  }\n\n  public isRunning(operation: Operation): boolean {\n    return this.operations.has(operation);\n  }\n\n  public isIdle(): boolean {\n    const operations = this.operations.keys();\n\n    for (const operation of operations) {\n      if (!isReadOnly(operation)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n","import * as path from \"path\";\nimport { Uri } from \"vscode\";\nimport { memoize } from \"./decorators\";\n\nexport class SvnRI {\n  constructor(\n    private readonly remoteRoot: Uri,\n    private readonly branchRoot: Uri,\n    private readonly checkoutRoot: Uri | undefined,\n    /** path relative from remoteRoot */\n    private readonly _path: string,\n    private readonly _revision?: string\n  ) {\n    if (_path.length === 0 || _path.charAt(0) === \"/\") {\n      throw new Error(\"Invalid _path \" + _path);\n    }\n  }\n\n  @memoize\n  get remoteFullPath(): Uri {\n    return Uri.parse(this.remoteRoot.toString() + \"/\" + this._path);\n  }\n\n  @memoize\n  get localFullPath(): Uri | undefined {\n    if (this.checkoutRoot === undefined) {\n      return undefined;\n    }\n    return Uri.file(\n      path.join(\n        this.checkoutRoot.path,\n        path.relative(this.fromRepoToBranch, this._path)\n      )\n    );\n  }\n\n  @memoize\n  get relativeFromBranch(): string {\n    return path.relative(this.fromRepoToBranch, this._path);\n  }\n\n  @memoize\n  get fromRepoToBranch(): string {\n    return path.relative(this.remoteRoot.path, this.branchRoot.path);\n  }\n\n  @memoize\n  get revision(): string | undefined {\n    return this._revision;\n  }\n\n  @memoize\n  public toString(withRevision?: boolean): string {\n    return this.remoteFullPath + (withRevision ? this._revision || \"\" : \"\");\n  }\n}\n","import {\n  Command,\n  Disposable,\n  Event,\n  EventEmitter,\n  StatusBarItem,\n  window\n} from \"vscode\";\nimport { Repository } from \"./repository\";\n\nexport class SvnStatusBar {\n  private disposables: Disposable[] = [];\n  private _onDidChange = new EventEmitter<void>();\n\n  get onDidChange(): Event<void> {\n    return this._onDidChange.event;\n  }\n\n  constructor(private repository: Repository) {\n    repository.onDidChangeStatus(\n      this._onDidChange.fire,\n      this._onDidChange,\n      this.disposables\n    );\n\n    repository.onDidChangeOperations(\n      this._onDidChange.fire,\n      this._onDidChange,\n      this.disposables\n    );\n  }\n\n  get commands(): Command[] {\n    const result: Command[] = [];\n\n    if (this.repository.currentBranch) {\n      result.push({\n        command: \"svn.switchBranch\",\n        tooltip: \"switch branch\",\n        title: `$(git-branch) ${this.repository.currentBranch}`,\n        arguments: [this.repository]\n      });\n    }\n\n    const isIdle = this.repository.operations.isIdle();\n\n    let icon = \"sync\";\n    let title = \"Updated\";\n    let command = \"svn.update\";\n    let tooltip = \"Update Revision\";\n\n    if (!isIdle) {\n      icon = \"sync~spin\";\n      title = \"Running\";\n      tooltip = \"Running\";\n      command = \"\";\n    } else if (this.repository.needCleanUp) {\n      icon = \"alert\";\n      title = \"Need cleanup\";\n      tooltip = \"Run cleanup command\";\n      command = \"svn.cleanup\";\n    } else if (this.repository.isIncomplete) {\n      icon = \"issue-reopened\";\n      title = \"Incomplete (Need finish checkout)\";\n      tooltip = \"Run update to complete\";\n      command = \"svn.finishCheckout\";\n    } else if (this.repository.remoteChangedFiles > 0) {\n      title = `${this.repository.remoteChangedFiles} remote changes`;\n    }\n\n    result.push({\n      command,\n      tooltip,\n      title: `$(${icon}) ${title}`,\n      arguments: [this.repository]\n    });\n    return result;\n  }\n\n  public dispose(): void {\n    this.disposables.forEach(disposable => disposable.dispose());\n  }\n}\n","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","import * as fs from \"fs\";\nimport * as path from \"path\";\nimport {\n  commands,\n  Disposable,\n  Event,\n  EventEmitter,\n  Uri,\n  window,\n  workspace,\n  WorkspaceFoldersChangeEvent\n} from \"vscode\";\nimport {\n  ConstructorPolicy,\n  IModelChangeEvent,\n  IOpenRepository,\n  RepositoryState,\n  Status\n} from \"./common/types\";\nimport { debounce } from \"./decorators\";\nimport { configuration } from \"./helpers/configuration\";\nimport { RemoteRepository } from \"./remoteRepository\";\nimport { Repository } from \"./repository\";\nimport { Svn, svnErrorCodes } from \"./svn\";\nimport SvnError from \"./svnError\";\nimport {\n  anyEvent,\n  dispose,\n  filterEvent,\n  IDisposable,\n  isDescendant,\n  normalizePath\n} from \"./util\";\nimport { matchAll } from \"./util/globMatch\";\n\nexport class Model implements IDisposable {\n  private _onDidOpenRepository = new EventEmitter<Repository>();\n  public readonly onDidOpenRepository: Event<Repository> = this\n    ._onDidOpenRepository.event;\n\n  private _onDidCloseRepository = new EventEmitter<Repository>();\n  public readonly onDidCloseRepository: Event<Repository> = this\n    ._onDidCloseRepository.event;\n\n  private _onDidChangeRepository = new EventEmitter<IModelChangeEvent>();\n  public readonly onDidChangeRepository: Event<IModelChangeEvent> = this\n    ._onDidChangeRepository.event;\n\n  public openRepositories: IOpenRepository[] = [];\n  private disposables: Disposable[] = [];\n  private enabled = false;\n  private possibleSvnRepositoryPaths = new Set<string>();\n  private ignoreList: string[] = [];\n  private maxDepth: number = 0;\n\n  private configurationChangeDisposable: Disposable;\n\n  get repositories(): Repository[] {\n    return this.openRepositories.map(r => r.repository);\n  }\n\n  get svn(): Svn {\n    return this._svn;\n  }\n\n  constructor(private _svn: Svn, policy: ConstructorPolicy) {\n    if (policy !== ConstructorPolicy.Async) {\n      throw new Error(\"Unsopported policy\");\n    }\n    this.enabled = configuration.get<boolean>(\"enabled\") === true;\n\n    this.configurationChangeDisposable = workspace.onDidChangeConfiguration(\n      this.onDidChangeConfiguration,\n      this\n    );\n\n    return ((async (): Promise<Model> => {\n      if (this.enabled) {\n        await this.enable();\n      }\n      return this;\n    })() as unknown) as Model;\n  }\n\n  private onDidChangeConfiguration(): void {\n    const enabled = configuration.get<boolean>(\"enabled\") === true;\n\n    this.maxDepth = configuration.get<number>(\"multipleFolders.depth\", 0);\n\n    if (enabled === this.enabled) {\n      return;\n    }\n\n    this.enabled = enabled;\n\n    if (enabled) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n\n  private async enable() {\n    const multipleFolders = configuration.get<boolean>(\n      \"multipleFolders.enabled\",\n      false\n    );\n\n    if (multipleFolders) {\n      this.maxDepth = configuration.get<number>(\"multipleFolders.depth\", 0);\n\n      this.ignoreList = configuration.get(\"multipleFolders.ignore\", []);\n    }\n\n    workspace.onDidChangeWorkspaceFolders(\n      this.onDidChangeWorkspaceFolders,\n      this,\n      this.disposables\n    );\n\n    const fsWatcher = workspace.createFileSystemWatcher(\"**\");\n    this.disposables.push(fsWatcher);\n\n    const onWorkspaceChange = anyEvent(\n      fsWatcher.onDidChange,\n      fsWatcher.onDidCreate,\n      fsWatcher.onDidDelete\n    );\n    const onPossibleSvnRepositoryChange = filterEvent(\n      onWorkspaceChange,\n      uri => !this.getRepository(uri)\n    );\n    onPossibleSvnRepositoryChange(\n      this.onPossibleSvnRepositoryChange,\n      this,\n      this.disposables\n    );\n\n    window.onDidChangeActiveTextEditor(\n      () => this.checkHasChangesOnActiveEditor(),\n      this,\n      this.disposables\n    );\n\n    await this.scanWorkspaceFolders();\n  }\n\n  private onPossibleSvnRepositoryChange(uri: Uri): void {\n    const possibleSvnRepositoryPath = uri.fsPath.replace(/\\.svn.*$/, \"\");\n    this.eventuallyScanPossibleSvnRepository(possibleSvnRepositoryPath);\n  }\n\n  private eventuallyScanPossibleSvnRepository(path: string) {\n    this.possibleSvnRepositoryPaths.add(path);\n    this.eventuallyScanPossibleSvnRepositories();\n  }\n\n  @debounce(500)\n  private eventuallyScanPossibleSvnRepositories(): void {\n    for (const path of this.possibleSvnRepositoryPaths) {\n      this.tryOpenRepository(path);\n    }\n\n    this.possibleSvnRepositoryPaths.clear();\n  }\n\n  private scanExternals(repository: Repository): void {\n    const shouldScanExternals =\n      configuration.get<boolean>(\"detectExternals\") === true;\n\n    if (!shouldScanExternals) {\n      return;\n    }\n\n    repository.statusExternal\n      .map(r => path.join(repository.workspaceRoot, r.path))\n      .forEach(p => this.eventuallyScanPossibleSvnRepository(p));\n  }\n\n  private hasChangesOnActiveEditor(): boolean {\n    if (!window.activeTextEditor) {\n      return false;\n    }\n    const uri = window.activeTextEditor.document.uri;\n\n    const repository = this.getRepository(uri);\n    if (!repository) {\n      return false;\n    }\n\n    const resource = repository.getResourceFromFile(uri);\n    if (!resource) {\n      return false;\n    }\n\n    switch (resource.type) {\n      case Status.ADDED:\n      case Status.DELETED:\n      case Status.EXTERNAL:\n      case Status.IGNORED:\n      case Status.NONE:\n      case Status.NORMAL:\n      case Status.UNVERSIONED:\n        return false;\n      case Status.CONFLICTED:\n      case Status.INCOMPLETE:\n      case Status.MERGED:\n      case Status.MISSING:\n      case Status.MODIFIED:\n      case Status.OBSTRUCTED:\n      case Status.REPLACED:\n        return true;\n    }\n\n    // Show if not match\n    return true;\n  }\n\n  @debounce(100)\n  private checkHasChangesOnActiveEditor() {\n    commands.executeCommand(\n      \"setContext\",\n      \"svnActiveEditorHasChanges\",\n      this.hasChangesOnActiveEditor()\n    );\n  }\n\n  private disable(): void {\n    this.repositories.forEach(repository => repository.dispose());\n    this.openRepositories = [];\n\n    this.possibleSvnRepositoryPaths.clear();\n    this.disposables = dispose(this.disposables);\n  }\n\n  private async onDidChangeWorkspaceFolders({\n    added,\n    removed\n  }: WorkspaceFoldersChangeEvent) {\n    const possibleRepositoryFolders = added.filter(\n      folder => !this.getOpenRepository(folder.uri)\n    );\n\n    const openRepositoriesToDispose = removed\n      .map(folder => this.getOpenRepository(folder.uri.fsPath))\n      .filter(repository => !!repository)\n      .filter(\n        repository =>\n          !(workspace.workspaceFolders || []).some(f =>\n            repository!.repository.workspaceRoot.startsWith(f.uri.fsPath)\n          )\n      ) as IOpenRepository[];\n\n    possibleRepositoryFolders.forEach(p =>\n      this.tryOpenRepository(p.uri.fsPath)\n    );\n    openRepositoriesToDispose.forEach(r => r.repository.dispose());\n  }\n\n  private async scanWorkspaceFolders() {\n    for (const folder of workspace.workspaceFolders || []) {\n      const root = folder.uri.fsPath;\n      await this.tryOpenRepository(root);\n    }\n  }\n\n  public async tryOpenRepository(path: string, level = 0): Promise<void> {\n    if (this.getRepository(path)) {\n      return;\n    }\n\n    let isSvnFolder = fs.existsSync(path + \"/.svn\");\n\n    // If open only a subpath.\n    if (!isSvnFolder && level === 0) {\n      const pathParts = path.split(/[\\\\/]/);\n      while (pathParts.length > 0) {\n        pathParts.pop();\n        const topPath = pathParts.join(\"/\") + \"/.svn\";\n        isSvnFolder = fs.existsSync(topPath);\n        if (isSvnFolder) {\n          break;\n        }\n      }\n    }\n\n    if (isSvnFolder) {\n      // Config based on folder path\n      const resourceConfig = workspace.getConfiguration(\"svn\", Uri.file(path));\n\n      const ignoredRepos = new Set(\n        (resourceConfig.get<string[]>(\"ignoreRepositories\") || []).map(p =>\n          normalizePath(p)\n        )\n      );\n\n      if (ignoredRepos.has(normalizePath(path))) {\n        return;\n      }\n\n      try {\n        const repositoryRoot = await this.svn.getRepositoryRoot(path);\n\n        const repository = new Repository(\n          await this.svn.open(repositoryRoot, path)\n        );\n\n        this.open(repository);\n      } catch (err) {\n        if (err instanceof SvnError) {\n          if (err.svnErrorCode === svnErrorCodes.WorkingCopyIsTooOld) {\n            await commands.executeCommand(\"svn.upgrade\", path);\n            return;\n          }\n        }\n        console.error(err);\n      }\n      return;\n    }\n\n    const newLevel = level + 1;\n    if (newLevel <= this.maxDepth) {\n      for (const file of fs.readdirSync(path)) {\n        const dir = path + \"/\" + file;\n\n        if (\n          fs.statSync(dir).isDirectory() &&\n          !matchAll(dir, this.ignoreList, { dot: true })\n        ) {\n          await this.tryOpenRepository(dir, newLevel);\n        }\n      }\n    }\n  }\n\n  public async getRemoteRepository(uri: Uri): Promise<RemoteRepository> {\n    return RemoteRepository.open(this.svn, uri);\n  }\n\n  public getRepository(hint: any) {\n    const liveRepository = this.getOpenRepository(hint);\n    if (liveRepository && liveRepository.repository) {\n      return liveRepository.repository;\n    }\n  }\n\n  public getOpenRepository(hint: any): IOpenRepository | undefined {\n    if (!hint) {\n      return undefined;\n    }\n\n    if (hint instanceof Repository) {\n      return this.openRepositories.find(r => r.repository === hint);\n    }\n\n    if ((hint as any).repository instanceof Repository) {\n      return this.openRepositories.find(\n        r => r.repository === (hint as any).repository\n      );\n    }\n\n    if (typeof hint === \"string\") {\n      hint = Uri.file(hint);\n    }\n\n    if (hint instanceof Uri) {\n      return this.openRepositories.find(liveRepository => {\n        if (\n          !isDescendant(liveRepository.repository.workspaceRoot, hint.fsPath)\n        ) {\n          return false;\n        }\n\n        for (const external of liveRepository.repository.statusExternal) {\n          const externalPath = path.join(\n            liveRepository.repository.workspaceRoot,\n            external.path\n          );\n          if (isDescendant(externalPath, hint.fsPath)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n\n    for (const liveRepository of this.openRepositories) {\n      const repository = liveRepository.repository;\n\n      if (hint === repository.sourceControl) {\n        return liveRepository;\n      }\n\n      if (hint === repository.changes) {\n        return liveRepository;\n      }\n    }\n\n    return undefined;\n  }\n\n  public async getRepositoryFromUri(uri: Uri) {\n    for (const liveRepository of this.openRepositories) {\n      const repository = liveRepository.repository;\n\n      try {\n        const path = normalizePath(uri.fsPath);\n        const info = await repository.info(path);\n\n        return repository;\n      } catch (error) {\n        console.error();\n      }\n    }\n  }\n\n  private open(repository: Repository): void {\n    const onDidDisappearRepository = filterEvent(\n      repository.onDidChangeState,\n      state => state === RepositoryState.Disposed\n    );\n    const disappearListener = onDidDisappearRepository(() => dispose());\n\n    const changeListener = repository.onDidChangeRepository(uri =>\n      this._onDidChangeRepository.fire({ repository, uri })\n    );\n\n    const statusListener = repository.onDidChangeStatus(() => {\n      this.scanExternals(repository);\n      this.checkHasChangesOnActiveEditor();\n    });\n    this.scanExternals(repository);\n\n    const dispose = () => {\n      disappearListener.dispose();\n      changeListener.dispose();\n      statusListener.dispose();\n      repository.dispose();\n\n      this.openRepositories = this.openRepositories.filter(\n        e => e !== openRepository\n      );\n      this._onDidCloseRepository.fire(repository);\n    };\n\n    const openRepository = { repository, dispose };\n    this.openRepositories.push(openRepository);\n    this._onDidOpenRepository.fire(repository);\n  }\n\n  public close(repository: Repository): void {\n    const openRepository = this.getOpenRepository(repository);\n\n    if (!openRepository) {\n      return;\n    }\n\n    openRepository.dispose();\n  }\n\n  public async pickRepository() {\n    if (this.openRepositories.length === 0) {\n      throw new Error(\"There are no available repositories\");\n    }\n\n    const picks: any[] = this.repositories.map(repository => {\n      return {\n        label: path.basename(repository.root),\n        repository\n      };\n    });\n    const placeHolder = \"Choose a repository\";\n    const pick = await window.showQuickPick(picks, { placeHolder });\n\n    return pick && pick.repository;\n  }\n\n  public async upgradeWorkingCopy(folderPath: string): Promise<boolean> {\n    try {\n      const result = await this.svn.exec(folderPath, [\"upgrade\"]);\n      return result.exitCode === 0;\n    } catch (e) {\n      console.log(e);\n    }\n    return false;\n  }\n\n  public dispose(): void {\n    this.disable();\n    this.configurationChangeDisposable.dispose();\n  }\n}\n","import { Uri } from \"vscode\";\nimport { ISvnInfo, ISvnLogEntry } from \"./common/types\";\nimport { PathNormalizer } from \"./pathNormalizer\";\nimport { Svn } from \"./svn\";\nimport { Repository as BaseRepository } from \"./svnRepository\";\n\nexport interface IRemoteRepository {\n  branchRoot: Uri;\n\n  getPathNormalizer(): PathNormalizer;\n\n  log(\n    rfrom: string,\n    rto: string,\n    limit: number,\n    target?: string | Uri\n  ): Promise<ISvnLogEntry[]>;\n\n  show(filePath: string | Uri, revision?: string): Promise<string>;\n}\n\nexport class RemoteRepository implements IRemoteRepository {\n  private info: ISvnInfo;\n  private constructor(private repo: BaseRepository) {\n    this.info = repo.info;\n  }\n\n  public static async open(svn: Svn, uri: Uri): Promise<RemoteRepository> {\n    const repo = await svn.open(uri.toString(true), \"\");\n    return new RemoteRepository(repo);\n  }\n\n  public getPathNormalizer(): PathNormalizer {\n    return new PathNormalizer(this.info);\n  }\n\n  public get branchRoot(): Uri {\n    return Uri.parse(this.info.url);\n  }\n\n  public async log(\n    rfrom: string,\n    rto: string,\n    limit: number,\n    target?: string | Uri\n  ): Promise<ISvnLogEntry[]> {\n    return this.repo.log(rfrom, rto, limit, target);\n  }\n\n  public async show(\n    filePath: string | Uri,\n    revision?: string\n  ): Promise<string> {\n    return this.repo.show(filePath, revision);\n  }\n}\n","import {\n  Disposable,\n  Event,\n  EventEmitter,\n  TextDocumentContentProvider,\n  Uri,\n  window,\n  workspace\n} from \"vscode\";\nimport {\n  ICache,\n  ICacheRow,\n  IModelChangeEvent,\n  SvnUriAction\n} from \"./common/types\";\nimport { debounce, throttle } from \"./decorators\";\nimport { Model } from \"./model\";\nimport { fromSvnUri } from \"./uri\";\nimport {\n  eventToPromise,\n  filterEvent,\n  IDisposable,\n  isDescendant,\n  toDisposable\n} from \"./util\";\n\nconst THREE_MINUTES = 1000 * 60 * 3;\nconst FIVE_MINUTES = 1000 * 60 * 5;\n\nexport class SvnContentProvider\n  implements IDisposable, TextDocumentContentProvider {\n  private _onDidChange = new EventEmitter<Uri>();\n  get onDidChange(): Event<Uri> {\n    return this._onDidChange.event;\n  }\n\n  private changedRepositoryRoots = new Set<string>();\n  private cache: ICache = Object.create(null);\n  private disposables: Disposable[] = [];\n\n  constructor(private model: Model) {\n    this.disposables.push(\n      model.onDidChangeRepository(this.onDidChangeRepository, this),\n      workspace.registerTextDocumentContentProvider(\"svn\", this)\n    );\n\n    const interval = setInterval(() => this.cleanup(), FIVE_MINUTES);\n    this.disposables.push(toDisposable(() => clearInterval(interval)));\n  }\n\n  private onDidChangeRepository({ repository }: IModelChangeEvent): void {\n    this.changedRepositoryRoots.add(repository.root);\n    this.eventuallyFireChangeEvents();\n  }\n\n  @debounce(1100)\n  private eventuallyFireChangeEvents(): void {\n    this.fireChangeEvents();\n  }\n\n  @throttle\n  private async fireChangeEvents(): Promise<void> {\n    if (!window.state.focused) {\n      const onDidFocusWindow = filterEvent(\n        window.onDidChangeWindowState,\n        e => e.focused\n      );\n      await eventToPromise(onDidFocusWindow);\n    }\n\n    Object.keys(this.cache).forEach(key => {\n      const uri = this.cache[key].uri;\n      const fsPath = uri.fsPath;\n\n      for (const root of this.changedRepositoryRoots) {\n        if (isDescendant(root, fsPath)) {\n          this._onDidChange.fire(uri);\n          return;\n        }\n      }\n    });\n\n    this.changedRepositoryRoots.clear();\n  }\n\n  public async provideTextDocumentContent(uri: Uri): Promise<string> {\n    try {\n      const { fsPath, action, extra } = fromSvnUri(uri);\n\n      const repository = this.model.getRepository(fsPath);\n\n      if (!repository) {\n        return \"\";\n      }\n\n      const cacheKey = uri.toString();\n      const timestamp = new Date().getTime();\n      const cacheValue: ICacheRow = { uri, timestamp };\n\n      this.cache[cacheKey] = cacheValue;\n\n      if (action === SvnUriAction.SHOW) {\n        const ref = extra.ref;\n        return await repository.show(fsPath, ref);\n      }\n      if (action === SvnUriAction.LOG) {\n        return await repository.plainLog();\n      }\n      if (action === SvnUriAction.PATCH) {\n        return await repository.patch([fsPath]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n    return \"\";\n  }\n\n  private cleanup(): void {\n    const now = new Date().getTime();\n    const cache = Object.create(null);\n\n    Object.keys(this.cache).forEach(key => {\n      const row = this.cache[key];\n      const { fsPath } = fromSvnUri(row.uri);\n      const isOpen = workspace.textDocuments\n        .filter(d => d.uri.scheme === \"file\")\n        .some(d => d.uri.fsPath === fsPath);\n\n      if (isOpen || now - row.timestamp < THREE_MINUTES) {\n        cache[row.uri.toString()] = row;\n      }\n    });\n\n    this.cache = cache;\n  }\n\n  public dispose(): void {\n    this.disposables.forEach(d => d.dispose());\n  }\n}\n","import * as cp from \"child_process\";\nimport * as path from \"path\";\nimport * as semver from \"semver\";\nimport { cpErrorHandler } from \"./svn\";\n\nexport interface ISvn {\n  path: string;\n  version: string;\n}\n\nexport class SvnFinder {\n  public findSvn(hint?: string): Promise<ISvn> {\n    const first = hint\n      ? this.findSpecificSvn(hint)\n      : Promise.reject<ISvn>(null);\n\n    return first\n      .then(void 0, () => {\n        switch (process.platform) {\n          case \"darwin\":\n            return this.findSvnDarwin();\n          case \"win32\":\n            return this.findSvnWin32();\n          default:\n            return this.findSpecificSvn(\"svn\");\n        }\n      })\n      .then(svn => this.checkSvnVersion(svn))\n      .then(null, () =>\n        Promise.reject(new Error(\"Svn installation not found.\"))\n      );\n  }\n\n  public findSvnWin32(): Promise<ISvn> {\n    return this.findSystemSvnWin32(process.env.ProgramW6432)\n      .then(void 0, () =>\n        this.findSystemSvnWin32(process.env[\"ProgramFiles(x86)\"])\n      )\n      .then(void 0, () => this.findSystemSvnWin32(process.env.ProgramFiles))\n      .then(void 0, () => this.findSpecificSvn(\"svn\"));\n  }\n\n  public findSystemSvnWin32(base?: string): Promise<ISvn> {\n    if (!base) {\n      return Promise.reject<ISvn>(\"Not found\");\n    }\n\n    return this.findSpecificSvn(\n      path.join(base, \"TortoiseSVN\", \"bin\", \"svn.exe\")\n    );\n  }\n\n  public findSvnDarwin(): Promise<ISvn> {\n    return new Promise<ISvn>((c, e) => {\n      cp.exec(\"which svn\", (err, svnPathBuffer) => {\n        if (err) {\n          return e(\"svn not found\");\n        }\n\n        const path = svnPathBuffer.toString().replace(/^\\s+|\\s+$/g, \"\");\n\n        function getVersion(path: string) {\n          // make sure svn executes\n          cp.exec(\"svn --version --quiet\", (err, stdout) => {\n            if (err) {\n              return e(\"svn not found\");\n            }\n\n            return c({ path, version: stdout.trim() });\n          });\n        }\n\n        if (path !== \"/usr/bin/svn\") {\n          return getVersion(path);\n        }\n\n        // must check if XCode is installed\n        cp.exec(\"xcode-select -p\", (err: any) => {\n          if (err && err.code === 2) {\n            // svn is not installed, and launching /usr/bin/svn\n            // will prompt the user to install it\n\n            return e(\"svn not found\");\n          }\n\n          getVersion(path);\n        });\n      });\n    });\n  }\n\n  public findSpecificSvn(path: string): Promise<ISvn> {\n    return new Promise<ISvn>((c, e) => {\n      const buffers: Buffer[] = [];\n      const child = cp.spawn(path, [\"--version\", \"--quiet\"]);\n      child.stdout.on(\"data\", (b: Buffer) => buffers.push(b));\n      child.on(\"error\", cpErrorHandler(e));\n      child.on(\"close\", code =>\n        code\n          ? e(new Error(\"Not found\"))\n          : c({\n              path,\n              version: Buffer.concat(buffers)\n                .toString(\"utf8\")\n                .trim()\n            })\n      );\n    });\n  }\n\n  public checkSvnVersion(svn: ISvn): Promise<ISvn> {\n    return new Promise<ISvn>((c, e) => {\n      // fix compatibility with SlickSVN (like 1.6.17-SlikSvn-tag-1.6.17@1130898-X64)\n      const version = svn.version.replace(/^(\\d+\\.\\d+\\.\\d+).*/, \"$1\");\n      if (!semver.valid(version)) {\n        e(new Error(\"Invalid svn version\"));\n      } else if (!semver.gte(version, \"1.6.0\")) {\n        e(new Error(\"Required svn version must be >= 1.6\"));\n      } else {\n        c(svn);\n      }\n    });\n  }\n}\n","exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++;\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = options.loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, options);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, options) {\n  var v = parse(version, options);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, options);\n\n  debug('SemVer', version, options);\n  this.options = options;\n  this.loose = !!options.loose;\n\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.options, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, options);\n\n  debug('comparator', comp, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.options.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.options.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.options);\n\n  return cmp(version, this.operator, this.semver, this.options);\n};\n\nComparator.prototype.intersects = function(comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options);\n    return satisfies(this.value, rangeTmp, options);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options);\n    return satisfies(comp.semver, rangeTmp, options);\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'));\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'));\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\n\nexports.Range = Range;\nfunction Range(range, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range;\n    } else {\n      return new Range(range.raw, options);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options);\n  }\n\n  if (!(this instanceof Range))\n    return new Range(range, options);\n\n  this.options = options;\n  this.loose = !!options.loose;\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.options.loose;\n  range = range.trim();\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, this.options);\n  }, this).join(' ').split(/\\s+/);\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, this.options);\n  }, this);\n\n  return set;\n};\n\nRange.prototype.intersects = function(range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function(thisComparators) {\n    return thisComparators.every(function(thisComparator) {\n      return range.set.some(function(rangeComparators) {\n        return rangeComparators.every(function(rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options);\n        });\n      });\n    });\n  });\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, options) {\n  return new Range(range, options).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, options) {\n  debug('comp', comp, options);\n  comp = replaceCarets(comp, options);\n  debug('caret', comp);\n  comp = replaceTildes(comp, options);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, options);\n  debug('xrange', comp);\n  comp = replaceStars(comp, options);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, options) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, options);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, options) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, options);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, options) {\n  debug('caret', comp, options);\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, options) {\n  debug('replaceXRanges', comp, options);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, options);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, options) {\n  comp = comp.trim();\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, options) {\n  debug('replaceStars', comp, options);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.options);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (!options)\n    options = {}\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, options) {\n  try {\n    range = new Range(range, options);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, options) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) { // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, options);\n      }\n    }\n  })\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, options) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) { // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, options);\n      }\n    }\n  })\n  return min;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, options) {\n  return outside(version, range, '<', options);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, options) {\n  return outside(version, range, '>', options);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, options) {\n  version = new SemVer(version, options);\n  range = new Range(range, options);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, options) {\n  var parsed = parse(version, options);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\nfunction intersects(r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce;\nfunction coerce(version) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  var match = version.match(re[COERCE]);\n\n  if (match == null)\n    return null;\n\n  return parse((match[1] || '0') + '.' + (match[2] || '0') + '.' + (match[3] || '0')); \n}\n","import {\n  commands,\n  Event,\n  EventEmitter,\n  TreeDataProvider,\n  TreeItem,\n  window\n} from \"vscode\";\nimport { Model } from \"../../model\";\nimport BaseNode from \"../nodes/baseNode\";\nimport RepositoryNode from \"../nodes/repositoryNode\";\n\nexport default class SvnProvider implements TreeDataProvider<BaseNode> {\n  private _onDidChangeTreeData: EventEmitter<\n    BaseNode | undefined\n  > = new EventEmitter<BaseNode | undefined>();\n  public onDidChangeTreeData: Event<BaseNode | undefined> = this\n    ._onDidChangeTreeData.event;\n\n  constructor(private model: Model) {\n    commands.registerCommand(\"svn.treeview.refreshProvider\", () =>\n      this.refresh()\n    );\n  }\n\n  public refresh(): void {\n    this._onDidChangeTreeData.fire();\n  }\n\n  public getTreeItem(element: RepositoryNode): TreeItem {\n    return element.getTreeItem();\n  }\n\n  public async getChildren(element?: BaseNode): Promise<BaseNode[]> {\n    if (!this.model || this.model.openRepositories.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    if (element) {\n      return element.getChildren();\n    }\n\n    const repositories = this.model.openRepositories.map(repository => {\n      return new RepositoryNode(repository.repository, this);\n    });\n\n    return repositories;\n  }\n\n  public update(node: BaseNode): void {\n    this._onDidChangeTreeData.fire(node);\n  }\n}\n","import * as path from \"path\";\nimport { TreeItem, TreeItemCollapsibleState, window } from \"vscode\";\nimport { Repository } from \"../../repository\";\nimport { getIconUri } from \"../../uri\";\nimport SvnProvider from \"../dataProviders/svnProvider\";\nimport BaseNode from \"./baseNode\";\nimport IncomingChangesNode from \"./incomingChangesNode\";\n\nexport default class RepositoryNode implements BaseNode {\n  constructor(\n    private repository: Repository,\n    private svnProvider: SvnProvider\n  ) {\n    repository.onDidChangeStatus(() => {\n      svnProvider.update(this);\n    });\n  }\n\n  get label() {\n    return path.basename(this.repository.workspaceRoot);\n  }\n\n  public getTreeItem(): TreeItem {\n    const item = new TreeItem(this.label, TreeItemCollapsibleState.Collapsed);\n    item.iconPath = {\n      dark: getIconUri(\"repo\", \"dark\"),\n      light: getIconUri(\"repo\", \"light\")\n    };\n\n    return item;\n  }\n\n  public async getChildren(): Promise<BaseNode[]> {\n    return [new IncomingChangesNode(this.repository)];\n  }\n}\n","import { TreeItem, TreeItemCollapsibleState } from \"vscode\";\nimport { Repository } from \"../../repository\";\nimport { getIconUri } from \"../../uri\";\nimport BaseNode from \"./baseNode\";\nimport IncomingChangeNode from \"./incomingChangeNode\";\nimport NoIncomingChangesNode from \"./noIncomingChangesNode\";\n\nexport default class IncomingChangesNode implements BaseNode {\n  constructor(private repository: Repository) {}\n\n  public getTreeItem(): TreeItem {\n    const item = new TreeItem(\n      \"Incoming Changes\",\n      TreeItemCollapsibleState.Collapsed\n    );\n    item.iconPath = {\n      dark: getIconUri(\"download\", \"dark\"),\n      light: getIconUri(\"download\", \"light\")\n    };\n\n    return item;\n  }\n\n  public async getChildren(): Promise<BaseNode[]> {\n    if (!this.repository.remoteChanges) {\n      return [];\n    }\n\n    const changes = this.repository.remoteChanges.resourceStates.map(\n      remoteChange => {\n        return new IncomingChangeNode(\n          remoteChange.resourceUri,\n          remoteChange.type,\n          this.repository\n        );\n      }\n    );\n\n    if (changes.length === 0) {\n      return [new NoIncomingChangesNode()];\n    }\n\n    return changes;\n  }\n}\n","import { TreeItem, TreeItemCollapsibleState } from \"vscode\";\nimport BaseNode from \"./baseNode\";\n\nexport default class NoIncomingChangesNode implements BaseNode {\n  public getTreeItem(): TreeItem {\n    const item = new TreeItem(\n      \"No Incoming Changes\",\n      TreeItemCollapsibleState.None\n    );\n\n    return item;\n  }\n\n  public async getChildren(): Promise<BaseNode[]> {\n    return [];\n  }\n}\n"],"sourceRoot":""}